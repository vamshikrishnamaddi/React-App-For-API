{"version":3,"sources":["../../../virtual-core/build/esm/index.js","../../src/index.tsx"],"names":["useIsomorphicLayoutEffect","React","rerender","resolvedOptions","onChange","options","instance","useVirtualizerBase","observeElementRect","observeElementOffset","scrollToFn","getScrollElement"],"mappings":"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","sourcesContent":["/**\n * virtual-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return () => {\n    let depTime;\n    if (opts.key && opts.debug != null && opts.debug()) depTime = Date.now();\n    const newDeps = getDeps();\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);\n\n    if (!depsChanged) {\n      return result;\n    }\n\n    deps = newDeps;\n    let resultTime;\n    if (opts.key && opts.debug != null && opts.debug()) resultTime = Date.now();\n    result = fn(...newDeps);\n    opts == null ? void 0 : opts.onChange == null ? void 0 : opts.onChange(result);\n\n    if (opts.key && opts.debug != null && opts.debug()) {\n      const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n      const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n      const resultFpsPercentage = resultEndTime / 16;\n\n      const pad = (str, num) => {\n        str = String(str);\n\n        while (str.length < num) {\n          str = ' ' + str;\n        }\n\n        return str;\n      };\n\n      console.info(\"%c\\u23F1 \" + pad(resultEndTime, 5) + \" /\" + pad(depEndTime, 5) + \" ms\", \"\\n            font-size: .6rem;\\n            font-weight: bold;\\n            color: hsl(\" + Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120)) + \"deg 100% 31%);\", opts == null ? void 0 : opts.key);\n    }\n\n    return result;\n  };\n}\n\n//\nconst defaultKeyExtractor = index => index;\nconst defaultRangeExtractor = range => {\n  const start = Math.max(range.startIndex - range.overscan, 0);\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1);\n  const arr = [];\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n};\n\nconst memoRectCallback = (instance, cb) => {\n  let prev = {\n    height: -1,\n    width: -1\n  };\n  return rect => {\n    if (instance.options.horizontal ? rect.width !== prev.width : rect.height !== prev.height) {\n      cb(rect);\n    }\n\n    prev = rect;\n  };\n};\n\nconst observeElementRect = (instance, cb) => {\n  const observer = new ResizeObserver(entries => {\n    var _entries$, _entries$2;\n\n    cb({\n      width: (_entries$ = entries[0]) == null ? void 0 : _entries$.contentRect.width,\n      height: (_entries$2 = entries[0]) == null ? void 0 : _entries$2.contentRect.height\n    });\n  });\n\n  if (!instance.scrollElement) {\n    return;\n  }\n\n  cb(instance.scrollElement.getBoundingClientRect());\n  observer.observe(instance.scrollElement);\n  return () => {\n    observer.unobserve(instance.scrollElement);\n  };\n};\nconst observeWindowRect = (instance, cb) => {\n  const memoizedCallback = memoRectCallback(instance, cb);\n\n  const onResize = () => memoizedCallback({\n    width: instance.scrollElement.innerWidth,\n    height: instance.scrollElement.innerHeight\n  });\n\n  if (!instance.scrollElement) {\n    return;\n  }\n\n  onResize();\n  instance.scrollElement.addEventListener('resize', onResize, {\n    capture: false,\n    passive: true\n  });\n  return () => {\n    instance.scrollElement.removeEventListener('resize', onResize);\n  };\n};\nconst scrollProps = {\n  element: ['scrollLeft', 'scrollTop'],\n  window: ['scrollX', 'scrollY']\n};\n\nconst createOffsetObserver = mode => {\n  return (instance, cb) => {\n    if (!instance.scrollElement) {\n      return;\n    }\n\n    const propX = scrollProps[mode][0];\n    const propY = scrollProps[mode][1];\n    let prevX = instance.scrollElement[propX];\n    let prevY = instance.scrollElement[propY];\n\n    const scroll = () => {\n      cb(instance.scrollElement[instance.options.horizontal ? propX : propY]);\n    };\n\n    scroll();\n\n    const onScroll = e => {\n      const target = e.currentTarget;\n      const scrollX = target[propX];\n      const scrollY = target[propY];\n\n      if (instance.options.horizontal ? prevX - scrollX : prevY - scrollY) {\n        scroll();\n      }\n\n      prevX = scrollX;\n      prevY = scrollY;\n    };\n\n    instance.scrollElement.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true\n    });\n    return () => {\n      instance.scrollElement.removeEventListener('scroll', onScroll);\n    };\n  };\n};\n\nconst observeElementOffset = createOffsetObserver('element');\nconst observeWindowOffset = createOffsetObserver('window');\nconst measureElement = (element, instance) => {\n  return element.getBoundingClientRect()[instance.options.horizontal ? 'width' : 'height'];\n};\nconst windowScroll = (offset, canSmooth, instance) => {\n  var _instance$scrollEleme;\n  (_instance$scrollEleme = instance.scrollElement) == null ? void 0 : _instance$scrollEleme.scrollTo == null ? void 0 : _instance$scrollEleme.scrollTo({\n    [instance.options.horizontal ? 'left' : 'top']: offset,\n    behavior: canSmooth ? 'smooth' : undefined\n  });\n};\nconst elementScroll = (offset, canSmooth, instance) => {\n  var _instance$scrollEleme2;\n  (_instance$scrollEleme2 = instance.scrollElement) == null ? void 0 : _instance$scrollEleme2.scrollTo == null ? void 0 : _instance$scrollEleme2.scrollTo({\n    [instance.options.horizontal ? 'left' : 'top']: offset,\n    behavior: canSmooth ? 'smooth' : undefined\n  });\n};\nclass Virtualizer {\n  constructor(_opts) {\n    var _this = this;\n\n    this.unsubs = [];\n    this.scrollElement = null;\n    this.measurementsCache = [];\n    this.itemMeasurementsCache = {};\n    this.pendingMeasuredCacheIndexes = [];\n    this.measureElementCache = {};\n    this.range = {\n      startIndex: 0,\n      endIndex: 0\n    };\n\n    this.setOptions = opts => {\n      Object.entries(opts).forEach(_ref => {\n        let [key, value] = _ref;\n        if (typeof value === 'undefined') delete opts[key];\n      });\n      this.options = {\n        debug: false,\n        initialOffset: 0,\n        overscan: 1,\n        paddingStart: 0,\n        paddingEnd: 0,\n        scrollPaddingStart: 0,\n        scrollPaddingEnd: 0,\n        horizontal: false,\n        getItemKey: defaultKeyExtractor,\n        rangeExtractor: defaultRangeExtractor,\n        enableSmoothScroll: true,\n        onChange: () => {},\n        measureElement,\n        initialRect: {\n          width: 0,\n          height: 0\n        },\n        ...opts\n      };\n    };\n\n    this.notify = () => {\n      var _this$options$onChang, _this$options;\n\n      (_this$options$onChang = (_this$options = this.options).onChange) == null ? void 0 : _this$options$onChang.call(_this$options, this);\n    };\n\n    this.cleanup = () => {\n      this.unsubs.filter(Boolean).forEach(d => d());\n      this.unsubs = [];\n      this.scrollElement = null;\n    };\n\n    this._didMount = () => {\n      return () => {\n        this.cleanup();\n      };\n    };\n\n    this._willUpdate = () => {\n      const scrollElement = this.options.getScrollElement();\n\n      if (this.scrollElement !== scrollElement) {\n        this.cleanup();\n        this.scrollElement = scrollElement;\n\n        this._scrollToOffset(this.scrollOffset, false);\n\n        this.unsubs.push(this.options.observeElementRect(this, rect => {\n          this.scrollRect = rect;\n          this.calculateRange();\n        }));\n        this.unsubs.push(this.options.observeElementOffset(this, offset => {\n          this.scrollOffset = offset;\n          this.calculateRange();\n        }));\n      }\n    };\n\n    this.getSize = () => {\n      return this.scrollRect[this.options.horizontal ? 'width' : 'height'];\n    };\n\n    this.getMeasurements = memo(() => [this.options.count, this.options.paddingStart, this.options.getItemKey, this.itemMeasurementsCache], (count, paddingStart, getItemKey, measurementsCache) => {\n      const min = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;\n      this.pendingMeasuredCacheIndexes = [];\n      const measurements = this.measurementsCache.slice(0, min);\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i);\n        const measuredSize = measurementsCache[key];\n        const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n        const size = typeof measuredSize === 'number' ? measuredSize : this.options.estimateSize(i);\n        const end = start + size;\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key\n        };\n      }\n\n      this.measurementsCache = measurements;\n      return measurements;\n    }, {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug\n    });\n    this.calculateRange = memo(() => [this.getMeasurements(), this.getSize(), this.scrollOffset], (measurements, outerSize, scrollOffset) => {\n      const range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset\n      });\n\n      if (range.startIndex !== this.range.startIndex || range.endIndex !== this.range.endIndex) {\n        this.range = range;\n        this.notify();\n      }\n\n      return this.range;\n    }, {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug\n    });\n    this.getIndexes = memo(() => [this.options.rangeExtractor, this.range, this.options.overscan, this.options.count], (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({ ...range,\n        overscan,\n        count: count\n      });\n    }, {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug\n    });\n    this.getVirtualItems = memo(() => [this.getIndexes(), this.getMeasurements(), this.options.measureElement], (indexes, measurements, measureElement) => {\n      const makeMeasureElement = index => measurableItem => {\n        var _this$itemMeasurement;\n\n        const item = this.measurementsCache[index];\n\n        if (!measurableItem) {\n          return;\n        }\n\n        const measuredItemSize = measureElement(measurableItem, this);\n        const itemSize = (_this$itemMeasurement = this.itemMeasurementsCache[item.key]) != null ? _this$itemMeasurement : item.size;\n\n        if (measuredItemSize !== itemSize) {\n          if (item.start < this.scrollOffset) {\n            if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n              console.info('correction', measuredItemSize - itemSize);\n            }\n\n            if (!this.destinationOffset) {\n              this._scrollToOffset(this.scrollOffset + (measuredItemSize - itemSize), false);\n            }\n          }\n\n          this.pendingMeasuredCacheIndexes.push(index);\n          this.itemMeasurementsCache = { ...this.itemMeasurementsCache,\n            [item.key]: measuredItemSize\n          };\n          this.notify();\n        }\n      };\n\n      const virtualItems = [];\n      const currentMeasureElements = {};\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        var _this$measureElementC;\n\n        const i = indexes[k];\n        const measurement = measurements[i];\n        const item = { ...measurement,\n          measureElement: currentMeasureElements[i] = (_this$measureElementC = this.measureElementCache[i]) != null ? _this$measureElementC : makeMeasureElement(i)\n        };\n        virtualItems.push(item);\n      }\n\n      this.measureElementCache = currentMeasureElements;\n      return virtualItems;\n    }, {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug\n    });\n\n    this.scrollToOffset = function (toOffset, _temp) {\n      let {\n        align = 'start',\n        smoothScroll = _this.options.enableSmoothScroll\n      } = _temp === void 0 ? {} : _temp;\n      const offset = _this.scrollOffset;\n\n      const size = _this.getSize();\n\n      if (align === 'auto') {\n        if (toOffset <= offset) {\n          align = 'start';\n        } else if (toOffset >= offset + size) {\n          align = 'end';\n        } else {\n          align = 'start';\n        }\n      }\n\n      if (align === 'start') {\n        _this._scrollToOffset(toOffset, smoothScroll);\n      } else if (align === 'end') {\n        _this._scrollToOffset(toOffset - size, smoothScroll);\n      } else if (align === 'center') {\n        _this._scrollToOffset(toOffset - size / 2, smoothScroll);\n      }\n    };\n\n    this.scrollToIndex = function (index, _temp2) {\n      let {\n        align = 'auto',\n        smoothScroll = _this.options.enableSmoothScroll,\n        ...rest\n      } = _temp2 === void 0 ? {} : _temp2;\n\n      const measurements = _this.getMeasurements();\n\n      const offset = _this.scrollOffset;\n\n      const size = _this.getSize();\n\n      const {\n        count\n      } = _this.options;\n      const measurement = measurements[Math.max(0, Math.min(index, count - 1))];\n\n      if (!measurement) {\n        return;\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= offset + size - _this.options.scrollPaddingEnd) {\n          align = 'end';\n        } else if (measurement.start <= offset + _this.options.scrollPaddingStart) {\n          align = 'start';\n        } else {\n          return;\n        }\n      }\n\n      const toOffset = align === 'end' ? measurement.end + _this.options.scrollPaddingEnd : measurement.start - _this.options.scrollPaddingStart;\n\n      _this.scrollToOffset(toOffset, {\n        align,\n        smoothScroll,\n        ...rest\n      });\n    };\n\n    this.getTotalSize = () => {\n      var _this$getMeasurements;\n\n      return (((_this$getMeasurements = this.getMeasurements()[this.options.count - 1]) == null ? void 0 : _this$getMeasurements.end) || this.options.paddingStart) + this.options.paddingEnd;\n    };\n\n    this._scrollToOffset = (offset, canSmooth) => {\n      clearTimeout(this.scrollCheckFrame);\n      this.destinationOffset = offset;\n      this.options.scrollToFn(offset, canSmooth, this);\n      let scrollCheckFrame;\n\n      const check = () => {\n        let lastOffset = this.scrollOffset;\n        this.scrollCheckFrame = scrollCheckFrame = setTimeout(() => {\n          if (this.scrollCheckFrame !== scrollCheckFrame) {\n            return;\n          }\n\n          if (this.scrollOffset === lastOffset) {\n            this.destinationOffset = undefined;\n            return;\n          }\n\n          lastOffset = this.scrollOffset;\n          check();\n        }, 100);\n      };\n\n      check();\n    };\n\n    this.measure = () => {\n      this.itemMeasurementsCache = {};\n      this.notify();\n    };\n\n    this.setOptions(_opts);\n    this.scrollRect = this.options.initialRect;\n    this.scrollOffset = this.options.initialOffset;\n    this.calculateRange();\n  }\n\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    const middle = (low + high) / 2 | 0;\n    const currentValue = getCurrentValue(middle);\n\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction calculateRange(_ref2) {\n  let {\n    measurements,\n    outerSize,\n    scrollOffset\n  } = _ref2;\n  const count = measurements.length - 1;\n\n  const getOffset = index => measurements[index].start;\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset);\n  let endIndex = startIndex;\n\n  while (endIndex < count && measurements[endIndex].end < scrollOffset + outerSize) {\n    endIndex++;\n  }\n\n  return {\n    startIndex,\n    endIndex\n  };\n}\n\nexport { Virtualizer, defaultKeyExtractor, defaultRangeExtractor, elementScroll, measureElement, memo, observeElementOffset, observeElementRect, observeWindowOffset, observeWindowRect, windowScroll };\n//# sourceMappingURL=index.js.map\n","import * as React from 'react'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<TScrollElement, TItemElement = unknown>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof window !== 'undefined' ? window : null!),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    ...options,\n  })\n}\n"]}