/**
 * react-virtual
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Liferay.Loader.define('@my-react-app$tanstack/react-virtual@3.0.0-beta.18/build/cjs/react-virtual/src/index', ['module', 'exports', 'require', 'my-react-app$react', '../../virtual-core/build/esm/index'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    Object.defineProperty(exports, '__esModule', { value: true });

    var React = require('my-react-app$react');
    var index = require('../../virtual-core/build/esm/index');

    function _interopNamespace(e) {
      if (e && e.__esModule) return e;
      var n = Object.create(null);
      if (e) {
        Object.keys(e).forEach(function (k) {
          if (k !== 'default') {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(n, k, d.get ? d : {
              enumerable: true,
              get: function () {
                return e[k];
              }
            });
          }
        });
      }
      n["default"] = e;
      return Object.freeze(n);
    }

    var React__namespace = /*#__PURE__*/_interopNamespace(React);

    const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React__namespace.useLayoutEffect : React__namespace.useEffect;

    function useVirtualizerBase(options) {
      const rerender = React__namespace.useReducer(() => ({}), {})[1];
      const resolvedOptions = _extends({}, options, {
        onChange: instance => {
          rerender();
          options.onChange == null ? void 0 : options.onChange(instance);
        }
      });
      const [instance] = React__namespace.useState(() => new index.Virtualizer(resolvedOptions));
      instance.setOptions(resolvedOptions);
      React__namespace.useEffect(() => {
        return instance._didMount();
      }, []);
      useIsomorphicLayoutEffect(() => {
        return instance._willUpdate();
      });
      return instance;
    }

    function useVirtualizer(options) {
      return useVirtualizerBase(_extends({
        observeElementRect: index.observeElementRect,
        observeElementOffset: index.observeElementOffset,
        scrollToFn: index.elementScroll
      }, options));
    }
    function useWindowVirtualizer(options) {
      return useVirtualizerBase(_extends({
        getScrollElement: () => typeof window !== 'undefined' ? window : null,
        observeElementRect: index.observeWindowRect,
        observeElementOffset: index.observeWindowOffset,
        scrollToFn: index.windowScroll
      }, options));
    }

    exports.Virtualizer = index.Virtualizer;
    exports.defaultKeyExtractor = index.defaultKeyExtractor;
    exports.defaultRangeExtractor = index.defaultRangeExtractor;
    exports.elementScroll = index.elementScroll;
    exports.measureElement = index.measureElement;
    exports.memo = index.memo;
    exports.observeElementOffset = index.observeElementOffset;
    exports.observeElementRect = index.observeElementRect;
    exports.observeWindowOffset = index.observeWindowOffset;
    exports.observeWindowRect = index.observeWindowRect;
    exports.windowScroll = index.windowScroll;
    exports.useVirtualizer = useVirtualizer;
    exports.useWindowVirtualizer = useWindowVirtualizer;
    //# sourceMappingURL=index.js.map
  }
});
//# sourceMappingURL=index.js.map