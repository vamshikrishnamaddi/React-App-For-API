{"version":3,"sources":["index.js"],"names":["pTry","require","pLimit","concurrency","Number","isInteger","Infinity","Promise","reject","TypeError","queue","activeCount","next","length","shift","run","fn","resolve","args","result","then","enqueue","push","bind","generator","Object","defineProperties","get","pendingCount","clearQueue","value","module","exports","default"],"mappings":"AAAA;;;;;;AACA,QAAMA,OAAOC,QAAQ,oBAAR,CAAb;;AAEA,QAAMC,SAASC,eAAe;AAC7B,OAAI,EAAE,CAACC,OAAOC,SAAP,CAAiBF,WAAjB,KAAiCA,gBAAgBG,QAAlD,KAA+DH,cAAc,CAA/E,CAAJ,EAAuF;AACtF,WAAOI,QAAQC,MAAR,CAAe,IAAIC,SAAJ,CAAc,qDAAd,CAAf,CAAP;AACA;;AAED,SAAMC,QAAQ,EAAd;AACA,OAAIC,cAAc,CAAlB;;AAEA,SAAMC,OAAO,MAAM;AAClBD;;AAEA,QAAID,MAAMG,MAAN,GAAe,CAAnB,EAAsB;AACrBH,WAAMI,KAAN;AACA;AACD,IAND;;AAQA,SAAMC,MAAM,CAACC,EAAD,EAAKC,OAAL,EAAc,GAAGC,IAAjB,KAA0B;AACrCP;;AAEA,UAAMQ,SAASnB,KAAKgB,EAAL,EAAS,GAAGE,IAAZ,CAAf;;AAEAD,YAAQE,MAAR;;AAEAA,WAAOC,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACA,IARD;;AAUA,SAAMS,UAAU,CAACL,EAAD,EAAKC,OAAL,EAAc,GAAGC,IAAjB,KAA0B;AACzC,QAAIP,cAAcR,WAAlB,EAA+B;AAC9BY,SAAIC,EAAJ,EAAQC,OAAR,EAAiB,GAAGC,IAApB;AACA,KAFD,MAEO;AACNR,WAAMY,IAAN,CAAWP,IAAIQ,IAAJ,CAAS,IAAT,EAAeP,EAAf,EAAmBC,OAAnB,EAA4B,GAAGC,IAA/B,CAAX;AACA;AACD,IAND;;AAQA,SAAMM,YAAY,CAACR,EAAD,EAAK,GAAGE,IAAR,KAAiB,IAAIX,OAAJ,CAAYU,WAAWI,QAAQL,EAAR,EAAYC,OAAZ,EAAqB,GAAGC,IAAxB,CAAvB,CAAnC;AACAO,UAAOC,gBAAP,CAAwBF,SAAxB,EAAmC;AAClCb,iBAAa;AACZgB,UAAK,MAAMhB;AADC,KADqB;AAIlCiB,kBAAc;AACbD,UAAK,MAAMjB,MAAMG;AADJ,KAJoB;AAOlCgB,gBAAY;AACXC,YAAO,MAAM;AACZpB,YAAMG,MAAN,GAAe,CAAf;AACA;AAHU;AAPsB,IAAnC;;AAcA,UAAOW,SAAP;AACA,GAlDD;;AAoDAO,SAAOC,OAAP,GAAiB9B,MAAjB;AACA6B,SAAOC,OAAP,CAAeC,OAAf,GAAyB/B,MAAzB","file":"index.js","sourcesContent":["'use strict';\nconst pTry = require('p-try');\n\nconst pLimit = concurrency => {\n\tif (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n\t\treturn Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));\n\t}\n\n\tconst queue = [];\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.length > 0) {\n\t\t\tqueue.shift()();\n\t\t}\n\t};\n\n\tconst run = (fn, resolve, ...args) => {\n\t\tactiveCount++;\n\n\t\tconst result = pTry(fn, ...args);\n\n\t\tresolve(result);\n\n\t\tresult.then(next, next);\n\t};\n\n\tconst enqueue = (fn, resolve, ...args) => {\n\t\tif (activeCount < concurrency) {\n\t\t\trun(fn, resolve, ...args);\n\t\t} else {\n\t\t\tqueue.push(run.bind(null, fn, resolve, ...args));\n\t\t}\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => enqueue(fn, resolve, ...args));\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.length\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.length = 0;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn generator;\n};\n\nmodule.exports = pLimit;\nmodule.exports.default = pLimit;\n"]}