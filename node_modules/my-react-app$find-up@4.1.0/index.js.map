{"version":3,"sources":["index.js"],"names":["path","require","locatePath","pathExists","stop","Symbol","module","exports","name","options","directory","resolve","cwd","root","parse","paths","concat","runMatcher","locateOptions","foundPath","dirname","sync","exists"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AACA,QAAMA,OAAOC,QAAQ,mBAAR,CAAb;AACA,QAAMC,aAAaD,QAAQ,0BAAR,CAAnB;AACA,QAAME,aAAaF,QAAQ,0BAAR,CAAnB;;AAEA,QAAMG,OAAOC,OAAO,aAAP,CAAb;;AAEAC,SAAOC,OAAP,GAAiB,OAAOC,IAAP,EAAaC,UAAU,EAAvB,KAA8B;AAC9C,OAAIC,YAAYV,KAAKW,OAAL,CAAaF,QAAQG,GAAR,IAAe,EAA5B,CAAhB;AACA,SAAM,EAACC,IAAD,KAASb,KAAKc,KAAL,CAAWJ,SAAX,CAAf;AACA,SAAMK,QAAQ,GAAGC,MAAH,CAAUR,IAAV,CAAd;;AAEA,SAAMS,aAAa,MAAMC,aAAN,IAAuB;AACzC,QAAI,OAAOV,IAAP,KAAgB,UAApB,EAAgC;AAC/B,YAAON,WAAWa,KAAX,EAAkBG,aAAlB,CAAP;AACA;;AAED,UAAMC,YAAY,MAAMX,KAAKU,cAAcN,GAAnB,CAAxB;AACA,QAAI,OAAOO,SAAP,KAAqB,QAAzB,EAAmC;AAClC,YAAOjB,WAAW,CAACiB,SAAD,CAAX,EAAwBD,aAAxB,CAAP;AACA;;AAED,WAAOC,SAAP;AACA,IAXD;;AAaA;AACA,UAAO,IAAP,EAAa;AACZ;AACA,UAAMA,YAAY,MAAMF,wBAAeR,OAAf,IAAwBG,KAAKF,SAA7B,IAAxB;;AAEA,QAAIS,cAAcf,IAAlB,EAAwB;AACvB;AACA;;AAED,QAAIe,SAAJ,EAAe;AACd,YAAOnB,KAAKW,OAAL,CAAaD,SAAb,EAAwBS,SAAxB,CAAP;AACA;;AAED,QAAIT,cAAcG,IAAlB,EAAwB;AACvB;AACA;;AAEDH,gBAAYV,KAAKoB,OAAL,CAAaV,SAAb,CAAZ;AACA;AACD,GArCD;;AAuCAJ,SAAOC,OAAP,CAAec,IAAf,GAAsB,CAACb,IAAD,EAAOC,UAAU,EAAjB,KAAwB;AAC7C,OAAIC,YAAYV,KAAKW,OAAL,CAAaF,QAAQG,GAAR,IAAe,EAA5B,CAAhB;AACA,SAAM,EAACC,IAAD,KAASb,KAAKc,KAAL,CAAWJ,SAAX,CAAf;AACA,SAAMK,QAAQ,GAAGC,MAAH,CAAUR,IAAV,CAAd;;AAEA,SAAMS,aAAaC,iBAAiB;AACnC,QAAI,OAAOV,IAAP,KAAgB,UAApB,EAAgC;AAC/B,YAAON,WAAWmB,IAAX,CAAgBN,KAAhB,EAAuBG,aAAvB,CAAP;AACA;;AAED,UAAMC,YAAYX,KAAKU,cAAcN,GAAnB,CAAlB;AACA,QAAI,OAAOO,SAAP,KAAqB,QAAzB,EAAmC;AAClC,YAAOjB,WAAWmB,IAAX,CAAgB,CAACF,SAAD,CAAhB,EAA6BD,aAA7B,CAAP;AACA;;AAED,WAAOC,SAAP;AACA,IAXD;;AAaA;AACA,UAAO,IAAP,EAAa;AACZ,UAAMA,YAAYF,wBAAeR,OAAf,IAAwBG,KAAKF,SAA7B,IAAlB;;AAEA,QAAIS,cAAcf,IAAlB,EAAwB;AACvB;AACA;;AAED,QAAIe,SAAJ,EAAe;AACd,YAAOnB,KAAKW,OAAL,CAAaD,SAAb,EAAwBS,SAAxB,CAAP;AACA;;AAED,QAAIT,cAAcG,IAAlB,EAAwB;AACvB;AACA;;AAEDH,gBAAYV,KAAKoB,OAAL,CAAaV,SAAb,CAAZ;AACA;AACD,GApCD;;AAsCAJ,SAAOC,OAAP,CAAee,MAAf,GAAwBnB,UAAxB;;AAEAG,SAAOC,OAAP,CAAec,IAAf,CAAoBC,MAApB,GAA6BnB,WAAWkB,IAAxC;;AAEAf,SAAOC,OAAP,CAAeH,IAAf,GAAsBA,IAAtB","file":"index.js","sourcesContent":["'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = async locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = await name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst foundPath = await runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.sync = (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath.sync(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath.sync([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst foundPath = runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.exists = pathExists;\n\nmodule.exports.sync.exists = pathExists.sync;\n\nmodule.exports.stop = stop;\n"]}