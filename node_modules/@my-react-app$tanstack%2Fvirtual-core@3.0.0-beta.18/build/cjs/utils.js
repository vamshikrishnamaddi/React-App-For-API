/**
 * virtual-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Liferay.Loader.define('@my-react-app$tanstack/virtual-core@3.0.0-beta.18/build/cjs/utils', ['module', 'exports', 'require'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    Object.defineProperty(exports, '__esModule', { value: true });

    function memo(getDeps, fn, opts) {
      let deps = [];
      let result;
      return () => {
        let depTime;
        if (opts.key && opts.debug != null && opts.debug()) depTime = Date.now();
        const newDeps = getDeps();
        const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);

        if (!depsChanged) {
          return result;
        }

        deps = newDeps;
        let resultTime;
        if (opts.key && opts.debug != null && opts.debug()) resultTime = Date.now();
        result = fn(...newDeps);
        opts == null ? void 0 : opts.onChange == null ? void 0 : opts.onChange(result);

        if (opts.key && opts.debug != null && opts.debug()) {
          const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
          const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;


          const pad = (str, num) => {
            str = String(str);

            while (str.length < num) {
              str = ' ' + str;
            }

            return str;
          };

          console.info("%c\u23F1 " + pad(resultEndTime, 5) + " /" + pad(depEndTime, 5) + " ms", "\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(" + Math.max(0, Math.min(120 - 120 * (resultEndTime / 16), 120)) + "deg 100% 31%);", opts == null ? void 0 : opts.key);
        }

        return result;
      };
    }

    exports.memo = memo;
    //# sourceMappingURL=utils.js.map
  }
});
//# sourceMappingURL=utils.js.map