"use strict";

Liferay.Loader.define("@my-react-app$clayui/drop-down@3.87.0/lib/DropDownWithDrilldown", ['module', 'exports', 'require', '@my-react-app$clayui/shared', 'my-react-app$classnames', 'my-react-app$react', './DropDown', './drilldown'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ClayDropDownWithDrilldown = void 0;

    var _shared = require("@my-react-app$clayui/shared");

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireWildcard(require("my-react-app$react"));

    var _DropDown = _interopRequireDefault(require("./DropDown"));

    var _drilldown = _interopRequireDefault(require("./drilldown"));

    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }

    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {
        return cache.get(obj);
      }var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }newObj.default = obj;if (cache) {
        cache.set(obj, newObj);
      }return newObj;
    }

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);enumerableOnly && (symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
      }return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }return target;
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }return obj;
    }

    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }

    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }

    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }return arr2;
    }

    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;_e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }return _arr;
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    var ClayDropDownWithDrilldown = function ClayDropDownWithDrilldown(_ref) {
      var externalActive = _ref.active,
          alignmentByViewport = _ref.alignmentByViewport,
          alignmentPosition = _ref.alignmentPosition,
          className = _ref.className,
          containerElement = _ref.containerElement,
          _ref$defaultActive = _ref.defaultActive,
          defaultActive = _ref$defaultActive === void 0 ? false : _ref$defaultActive,
          defaultActiveMenu = _ref.defaultActiveMenu,
          initialActiveMenu = _ref.initialActiveMenu,
          menuElementAttrs = _ref.menuElementAttrs,
          menuHeight = _ref.menuHeight,
          menuWidth = _ref.menuWidth,
          menus = _ref.menus,
          _ref$messages = _ref.messages,
          messages = _ref$messages === void 0 ? {
        back: '',
        goTo: ''
      } : _ref$messages,
          offsetFn = _ref.offsetFn,
          onActiveChange = _ref.onActiveChange,
          renderMenuOnClick = _ref.renderMenuOnClick,
          spritemap = _ref.spritemap,
          trigger = _ref.trigger;

      var _useState = (0, _react.useState)(defaultActiveMenu !== null && defaultActiveMenu !== void 0 ? defaultActiveMenu : initialActiveMenu),
          _useState2 = _slicedToArray(_useState, 2),
          activeMenu = _useState2[0],
          setActiveMenu = _useState2[1];

      var _useState3 = (0, _react.useState)(),
          _useState4 = _slicedToArray(_useState3, 2),
          direction = _useState4[0],
          setDirection = _useState4[1];

      var _useState5 = (0, _react.useState)([]),
          _useState6 = _slicedToArray(_useState5, 2),
          history = _useState6[0],
          setHistory = _useState6[1];

      var _useInteractionFocus = (0, _shared.useInteractionFocus)(),
          isFocusVisible = _useInteractionFocus.isFocusVisible;

      var _useInternalState = (0, _shared.useInternalState)({
        defaultName: 'defaultActive',
        defaultValue: defaultActive,
        handleName: 'onActiveChange',
        name: 'active',
        onChange: onActiveChange,
        value: externalActive
      }),
          _useInternalState2 = _slicedToArray(_useInternalState, 2),
          active = _useInternalState2[0],
          setActive = _useInternalState2[1];

      var focusHistory = (0, _react.useRef)([]);
      var innerRef = (0, _react.useRef)(null);
      var menuIds = Object.keys(menus);
      (0, _react.useEffect)(function () {
        if (!isFocusVisible()) {
          return;
        }

        if (innerRef.current) {
          if (direction === 'prev') {
            var _focusHistory$current = focusHistory.current.slice(-1),
                _focusHistory$current2 = _slicedToArray(_focusHistory$current, 1),
                previous = _focusHistory$current2[0];

            focusHistory.current = focusHistory.current.slice(0, focusHistory.current.length - 1);
            previous === null || previous === void 0 ? void 0 : previous.focus();
          } else {
            var itemEl = innerRef.current.querySelector('.drilldown-current a.dropdown-item, .drilldown-current button.dropdown-item');
            focusHistory.current = [].concat(_toConsumableArray(focusHistory.current), [document.activeElement]);
            itemEl === null || itemEl === void 0 ? void 0 : itemEl.focus();
          }
        }
      }, [activeMenu, direction, innerRef, focusHistory, menus]);
      return (/*#__PURE__*/_react.default.createElement(_DropDown.default, {
          active: active,
          alignmentByViewport: alignmentByViewport,
          alignmentPosition: alignmentPosition,
          className: className,
          containerElement: containerElement,
          hasRightSymbols: true,
          menuElementAttrs: _objectSpread(_objectSpread({}, menuElementAttrs), {}, {
            className: (0, _classnames.default)(menuElementAttrs === null || menuElementAttrs === void 0 ? void 0 : menuElementAttrs.className, 'drilldown')
          }),
          menuHeight: menuHeight,
          menuWidth: menuWidth,
          offsetFn: offsetFn,
          onActiveChange: function onActiveChange(value) {
            if (!active) {
              setActiveMenu(defaultActiveMenu);
              focusHistory.current = [];
              setHistory([]);
              setDirection('prev');
            }

            setActive(value);
          },
          renderMenuOnClick: renderMenuOnClick,
          trigger: trigger
        }, /*#__PURE__*/_react.default.createElement(_drilldown.default.Inner, {
          ref: innerRef
        }, menuIds.map(function (menuKey) {
          return (/*#__PURE__*/_react.default.createElement(_drilldown.default.Menu, {
              active: activeMenu === menuKey,
              direction: direction,
              header: activeMenu === menuKey && !!history.length ? history.slice(-1)[0].title : undefined,
              items: menus[menuKey],
              key: menuKey,
              messages: messages,
              onBack: function onBack() {
                var _history$slice = history.slice(-1),
                    _history$slice2 = _slicedToArray(_history$slice, 1),
                    parent = _history$slice2[0];

                setHistory(history.slice(0, history.length - 1));
                setDirection('prev');
                setActiveMenu(parent.id);
              },
              onForward: function onForward(title, childId) {
                setHistory([].concat(_toConsumableArray(history), [{
                  id: activeMenu,
                  title: title
                }]));
                setDirection('next');
                setActiveMenu(childId);
              },
              spritemap: spritemap
            })
          );
        })))
      );
    };

    exports.ClayDropDownWithDrilldown = ClayDropDownWithDrilldown;
    ClayDropDownWithDrilldown.displayName = 'ClayDropDownWithDrilldown';
  }
});
//# sourceMappingURL=DropDownWithDrilldown.js.map