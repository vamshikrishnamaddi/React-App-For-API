"use strict";

Liferay.Loader.define("@my-react-app$clayui/drop-down@3.87.0/lib/Menu", ['module', 'exports', 'require', '@my-react-app$clayui/shared', 'my-react-app$classnames', 'my-react-app$react'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.Align = void 0;

    var _shared = require("@my-react-app$clayui/shared");

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireWildcard(require("my-react-app$react"));

    var _excluded = ["active", "alignElementRef", "alignmentByViewport", "alignmentPosition", "autoBestAlign", "children", "className", "closeOnClickOutside", "containerProps", "hasLeftSymbols", "hasRightSymbols", "height", "lock", "offsetFn", "onActiveChange", "onSetActive", "role", "suppress", "triggerRef", "width"];

    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }

    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {
        return cache.get(obj);
      }var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }newObj.default = obj;if (cache) {
        cache.set(obj, newObj);
      }return newObj;
    }

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }return obj;
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    var Align = {
      BottomCenter: 4,
      BottomLeft: 5,
      BottomRight: 3,
      LeftBottom: 11,
      LeftCenter: 6,
      LeftTop: 10,
      RightBottom: 9,
      RightCenter: 2,
      RightTop: 8,
      TopCenter: 0,
      TopLeft: 7,
      TopRight: 1
    };
    exports.Align = Align;

    var Menu = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
      var _classNames;

      var _ref$active = _ref.active,
          active = _ref$active === void 0 ? false : _ref$active,
          alignElementRef = _ref.alignElementRef,
          _ref$alignmentByViewp = _ref.alignmentByViewport,
          alignmentByViewport = _ref$alignmentByViewp === void 0 ? false : _ref$alignmentByViewp,
          _ref$alignmentPositio = _ref.alignmentPosition,
          alignmentPosition = _ref$alignmentPositio === void 0 ? Align.BottomLeft : _ref$alignmentPositio,
          _ref$autoBestAlign = _ref.autoBestAlign,
          autoBestAlign = _ref$autoBestAlign === void 0 ? true : _ref$autoBestAlign,
          children = _ref.children,
          className = _ref.className,
          _ref$closeOnClickOuts = _ref.closeOnClickOutside,
          closeOnClickOutside = _ref$closeOnClickOuts === void 0 ? true : _ref$closeOnClickOuts,
          _ref$containerProps = _ref.containerProps,
          containerProps = _ref$containerProps === void 0 ? {} : _ref$containerProps,
          hasLeftSymbols = _ref.hasLeftSymbols,
          hasRightSymbols = _ref.hasRightSymbols,
          height = _ref.height,
          _ref$lock = _ref.lock,
          lock = _ref$lock === void 0 ? false : _ref$lock,
          offsetFn = _ref.offsetFn,
          onActiveChange = _ref.onActiveChange,
          onSetActive = _ref.onSetActive,
          _ref$role = _ref.role,
          role = _ref$role === void 0 ? 'presentation' : _ref$role,
          suppress = _ref.suppress,
          triggerRef = _ref.triggerRef,
          width = _ref.width,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      var setActive = onActiveChange !== null && onActiveChange !== void 0 ? onActiveChange : onSetActive;
      var menuInternalRef = (0, _react.useRef)(null);
      var subPortalRef = (0, _react.useRef)(null);
      var menuRef = menuInternalRef;

      if (ref) {
        menuRef = ref;
      }

      (0, _shared.useOverlayPosition)({
        alignmentByViewport: alignmentByViewport,
        alignmentPosition: alignmentPosition,
        autoBestAlign: autoBestAlign,
        getOffset: offsetFn,
        isOpen: active,
        ref: menuRef,
        triggerRef: alignElementRef
      }, [active, children]);
      return (/*#__PURE__*/_react.default.createElement(_shared.Overlay, {
          isCloseOnInteractOutside: closeOnClickOutside,
          isKeyboardDismiss: true,
          isModal: lock,
          isOpen: active,
          menuRef: menuRef,
          onClose: function onClose() {
            return setActive(false);
          },
          portalRef: subPortalRef,
          suppress: suppress,
          triggerRef: triggerRef !== null && triggerRef !== void 0 ? triggerRef : alignElementRef
        }, /*#__PURE__*/_react.default.createElement("div", _extends({}, containerProps, {
          ref: subPortalRef
        }), /*#__PURE__*/_react.default.createElement("div", _extends({}, otherProps, {
          "aria-hidden": !active ? true : undefined,
          "aria-modal": lock ? true : undefined,
          className: (0, _classnames.default)('dropdown-menu', className, (_classNames = {
            'dropdown-menu-indicator-end': hasRightSymbols,
            'dropdown-menu-indicator-start': hasLeftSymbols
          }, _defineProperty(_classNames, "dropdown-menu-height-".concat(height), height), _defineProperty(_classNames, "dropdown-menu-width-".concat(width), width), _defineProperty(_classNames, "show", active), _classNames)),
          ref: menuRef,
          role: role
        }), children)))
      );
    });

    Menu.displayName = 'ClayDropDownMenu';
    var _default = Menu;
    exports.default = _default;
  }
});
//# sourceMappingURL=Menu.js.map