{"version":3,"sources":["factoryWithThrowingShims.js"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"AAAA;;;;;;;AAOA;;;;;;AAEA,QAAIA,uBAAuBC,QAAQ,4BAAR,CAA3B;;AAEA,aAASC,aAAT,GAAyB,CAAE;AAC3B,aAASC,sBAAT,GAAkC,CAAE;AACpCA,2BAAuBC,iBAAvB,GAA2CF,aAA3C;;AAEAG,WAAOC,OAAP,GAAiB,YAAW;AAC1B,eAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;AAC5E,YAAIA,WAAWb,oBAAf,EAAqC;AACnC;AACA;AACD;AACD,YAAIc,MAAM,IAAIC,KAAJ,CACR,yFACA,+CADA,GAEA,gDAHQ,CAAV;AAKAD,YAAIE,IAAJ,GAAW,qBAAX;AACA,cAAMF,GAAN;AACD;AACDP,WAAKU,UAAL,GAAkBV,IAAlB;AACA,eAASW,OAAT,GAAmB;AACjB,eAAOX,IAAP;AACD;AACD;AACA;AACA,UAAIY,iBAAiB;AACnBC,eAAOb,IADY;AAEnBc,gBAAQd,IAFW;AAGnBe,cAAMf,IAHa;AAInBgB,cAAMhB,IAJa;AAKnBiB,gBAAQjB,IALW;AAMnBkB,gBAAQlB,IANW;AAOnBmB,gBAAQnB,IAPW;AAQnBoB,gBAAQpB,IARW;;AAUnBqB,aAAKrB,IAVc;AAWnBsB,iBAASX,OAXU;AAYnBY,iBAASvB,IAZU;AAanBwB,qBAAaxB,IAbM;AAcnByB,oBAAYd,OAdO;AAenBe,cAAM1B,IAfa;AAgBnB2B,kBAAUhB,OAhBS;AAiBnBiB,eAAOjB,OAjBY;AAkBnBkB,mBAAWlB,OAlBQ;AAmBnBmB,eAAOnB,OAnBY;AAoBnBoB,eAAOpB,OApBY;;AAsBnBqB,wBAAgBpC,sBAtBG;AAuBnBC,2BAAmBF;AAvBA,OAArB;;AA0BAiB,qBAAeqB,SAAf,GAA2BrB,cAA3B;;AAEA,aAAOA,cAAP;AACD,KAjDD","file":"factoryWithThrowingShims.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]}