{"version":3,"sources":["text.js"],"names":["exports","__esModule","default","text","regExpNbspEntity","regExpNbspHex","regExpSpaces","node","trim","singleSpaces","elementText","textContent","replace","module"],"mappings":"AAAA;;;;;;AAEAA,YAAQC,UAAR,GAAqB,IAArB;AACAD,YAAQE,OAAR,GAAkBC,IAAlB;AACA,QAAIC,mBAAmB,UAAvB;AACA,QAAIC,gBAAgB,OAApB;AACA,QAAIC,eAAe,cAAnB;AACA;;;;;;;;AAQA,aAASH,IAAT,CAAcI,IAAd,EAAoBC,IAApB,EAA0BC,YAA1B,EAAwC;AACtC,UAAID,SAAS,KAAK,CAAlB,EAAqB;AACnBA,eAAO,IAAP;AACD;;AAED,UAAIC,iBAAiB,KAAK,CAA1B,EAA6B;AAC3BA,uBAAe,IAAf;AACD;;AAED,UAAIC,cAAc,EAAlB;;AAEA,UAAIH,IAAJ,EAAU;AACRG,sBAAc,CAACH,KAAKI,WAAL,IAAoB,EAArB,EAAyBC,OAAzB,CAAiCR,gBAAjC,EAAmD,GAAnD,EAAwDQ,OAAxD,CAAgEP,aAAhE,EAA+E,GAA/E,CAAd;;AAEA,YAAIG,IAAJ,EAAU;AACRE,wBAAcA,YAAYF,IAAZ,EAAd;AACD;;AAED,YAAIC,YAAJ,EAAkB;AAChBC,wBAAcA,YAAYE,OAAZ,CAAoBN,YAApB,EAAkC,KAAlC,CAAd;AACD;AACF;;AAED,aAAOI,WAAP;AACD;;AAEDG,WAAOb,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"text.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = text;\nvar regExpNbspEntity = /&nbsp;/gi;\nvar regExpNbspHex = /\\xA0/g;\nvar regExpSpaces = /\\s+([^\\s])/gm;\n/**\n * Collects the text content of a given element.\n * \n * @param node the element\n * @param trim whether to remove trailing whitespace chars\n * @param singleSpaces whether to convert multiple whitespace chars into a single space character\n */\n\nfunction text(node, trim, singleSpaces) {\n  if (trim === void 0) {\n    trim = true;\n  }\n\n  if (singleSpaces === void 0) {\n    singleSpaces = true;\n  }\n\n  var elementText = '';\n\n  if (node) {\n    elementText = (node.textContent || '').replace(regExpNbspEntity, ' ').replace(regExpNbspHex, ' ');\n\n    if (trim) {\n      elementText = elementText.trim();\n    }\n\n    if (singleSpaces) {\n      elementText = elementText.replace(regExpSpaces, ' $1');\n    }\n  }\n\n  return elementText;\n}\n\nmodule.exports = exports[\"default\"];"]}