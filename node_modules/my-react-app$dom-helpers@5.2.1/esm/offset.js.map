{"version":3,"sources":["offset.js"],"names":["contains","ownerDocument","scrollLeft","scrollTop","offset","node","doc","box","top","left","height","width","docElem","documentElement","getBoundingClientRect","undefined","clientTop","clientLeft"],"mappings":";;;;AAAA,WAAOA,QAAP,MAAqB,YAArB;AACA,WAAOC,aAAP,MAA0B,iBAA1B;AACA,WAAOC,UAAP,MAAuB,cAAvB;AACA,WAAOC,SAAP,MAAsB,aAAtB;AACA;;;;;;AAMA,mBAAe,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACnC,UAAIC,MAAML,cAAcI,IAAd,CAAV;AACA,UAAIE,MAAM;AACRC,aAAK,CADG;AAERC,cAAM,CAFE;AAGRC,gBAAQ,CAHA;AAIRC,eAAO;AAJC,OAAV;AAMA,UAAIC,UAAUN,OAAOA,IAAIO,eAAzB,CARmC,CAQO;;AAE1C,UAAI,CAACD,OAAD,IAAY,CAACZ,SAASY,OAAT,EAAkBP,IAAlB,CAAjB,EAA0C,OAAOE,GAAP;AAC1C,UAAIF,KAAKS,qBAAL,KAA+BC,SAAnC,EAA8CR,MAAMF,KAAKS,qBAAL,EAAN;AAC9CP,YAAM;AACJC,aAAKD,IAAIC,GAAJ,GAAUL,UAAUS,OAAV,CAAV,IAAgCA,QAAQI,SAAR,IAAqB,CAArD,CADD;AAEJP,cAAMF,IAAIE,IAAJ,GAAWP,WAAWU,OAAX,CAAX,IAAkCA,QAAQK,UAAR,IAAsB,CAAxD,CAFF;AAGJN,eAAOJ,IAAII,KAHP;AAIJD,gBAAQH,IAAIG;AAJR,OAAN;AAMA,aAAOH,GAAP;AACD","file":"offset.js","sourcesContent":["import contains from './contains';\nimport ownerDocument from './ownerDocument';\nimport scrollLeft from './scrollLeft';\nimport scrollTop from './scrollTop';\n/**\n * Returns the offset of a given element, including top and left positions, width and height.\n * \n * @param node the element\n */\n\nexport default function offset(node) {\n  var doc = ownerDocument(node);\n  var box = {\n    top: 0,\n    left: 0,\n    height: 0,\n    width: 0\n  };\n  var docElem = doc && doc.documentElement; // Make sure it's not a disconnected DOM node\n\n  if (!docElem || !contains(docElem, node)) return box;\n  if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect();\n  box = {\n    top: box.top + scrollTop(docElem) - (docElem.clientTop || 0),\n    left: box.left + scrollLeft(docElem) - (docElem.clientLeft || 0),\n    width: box.width,\n    height: box.height\n  };\n  return box;\n}"]}