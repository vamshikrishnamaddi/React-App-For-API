{"version":3,"sources":["triggerEvent.js"],"names":["triggerEvent","node","eventName","bubbles","cancelable","event","document","createEvent","initEvent","dispatchEvent"],"mappings":";;;;AAAA;;;;;;;;AAQA,mBAAe,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,UAAhD,EAA4D;AACzE,UAAID,YAAY,KAAK,CAArB,EAAwB;AACtBA,kBAAU,KAAV;AACD;;AAED,UAAIC,eAAe,KAAK,CAAxB,EAA2B;AACzBA,qBAAa,IAAb;AACD;;AAED,UAAIH,IAAJ,EAAU;AACR,YAAII,QAAQC,SAASC,WAAT,CAAqB,YAArB,CAAZ;AACAF,cAAMG,SAAN,CAAgBN,SAAhB,EAA2BC,OAA3B,EAAoCC,UAApC;AACAH,aAAKQ,aAAL,CAAmBJ,KAAnB;AACD;AACF","file":"triggerEvent.js","sourcesContent":["/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}"]}