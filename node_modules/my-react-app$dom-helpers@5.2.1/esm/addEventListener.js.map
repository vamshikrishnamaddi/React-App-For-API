{"version":3,"sources":["addEventListener.js"],"names":["canUseDOM","optionsSupported","onceSupported","options","passive","once","window","addEventListener","removeEventListener","e","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","call"],"mappings":";;;;AAAA;AACA,WAAOA,SAAP,MAAsB,aAAtB;AACA,WAAO,IAAIC,mBAAmB,KAAvB;AACP,WAAO,IAAIC,gBAAgB,KAApB;;AAEP,QAAI;AACF,UAAIC,UAAU;AACZ,YAAIC,OAAJ,GAAc;AACZ,iBAAOH,mBAAmB,IAA1B;AACD,SAHW;;AAKZ,YAAII,IAAJ,GAAW;AACT;AACA,iBAAOH,gBAAgBD,mBAAmB,IAA1C;AACD;;AARW,OAAd;;AAYA,UAAID,SAAJ,EAAe;AACbM,eAAOC,gBAAP,CAAwB,MAAxB,EAAgCJ,OAAhC,EAAyCA,OAAzC;AACAG,eAAOE,mBAAP,CAA2B,MAA3B,EAAmCL,OAAnC,EAA4C,IAA5C;AACD;AACF,KAjBD,CAiBE,OAAOM,CAAP,EAAU,CAEX;AADC;;;AAGF;;;;;;;;AAQA,aAASF,gBAAT,CAA0BG,IAA1B,EAAgCC,SAAhC,EAA2CC,OAA3C,EAAoDT,OAApD,EAA6D;AAC3D,UAAIA,WAAW,OAAOA,OAAP,KAAmB,SAA9B,IAA2C,CAACD,aAAhD,EAA+D;AAC7D,YAAIG,OAAOF,QAAQE,IAAnB;AAAA,YACIQ,UAAUV,QAAQU,OADtB;AAEA,YAAIC,iBAAiBF,OAArB;;AAEA,YAAI,CAACV,aAAD,IAAkBG,IAAtB,EAA4B;AAC1BS,2BAAiBF,QAAQG,MAAR,IAAkB,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC7D,iBAAKT,mBAAL,CAAyBG,SAAzB,EAAoCK,WAApC,EAAiDH,OAAjD;AACAD,oBAAQM,IAAR,CAAa,IAAb,EAAmBD,KAAnB;AACD,WAHD;;AAKAL,kBAAQG,MAAR,GAAiBD,cAAjB;AACD;;AAEDJ,aAAKH,gBAAL,CAAsBI,SAAtB,EAAiCG,cAAjC,EAAiDb,mBAAmBE,OAAnB,GAA6BU,OAA9E;AACD;;AAEDH,WAAKH,gBAAL,CAAsBI,SAAtB,EAAiCC,OAAjC,EAA0CT,OAA1C;AACD;;AAED,mBAAeI,gBAAf","file":"addEventListener.js","sourcesContent":["/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;"]}