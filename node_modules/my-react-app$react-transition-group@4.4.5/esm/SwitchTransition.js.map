{"version":3,"sources":["SwitchTransition.js"],"names":["_inheritsLoose","_leaveRenders","_enterRenders","React","PropTypes","ENTERED","ENTERING","EXITING","TransitionGroupContext","areChildrenDifferent","oldChildren","newChildren","isValidElement","key","modes","out","in","callHook","element","name","cb","_element$props","props","apply","arguments","leaveRenders","_ref","current","changeState","cloneElement","onExited","_ref2","children","onEntered","enterRenders","_ref3","_ref4","SwitchTransition","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","status","appeared","setState","_proto","prototype","componentDidMount","getDerivedStateFromProps","mode","render","_this$props","_this$state","data","component","createElement","Provider","value","isMounting","Component","propTypes","oneOf","oneOfType","isRequired","defaultProps"],"mappings":";;;;AAAA,WAAOA,cAAP,MAA2B,0CAA3B;;AAEA,QAAIC,aAAJ,EAAmBC,aAAnB;;AAEA,WAAOC,KAAP,MAAkB,OAAlB;AACA,WAAOC,SAAP,MAAsB,YAAtB;AACA,aAASC,OAAT,EAAkBC,QAAlB,EAA4BC,OAA5B,QAA2C,cAA3C;AACA,WAAOC,sBAAP,MAAmC,0BAAnC;;AAEA,aAASC,oBAAT,CAA8BC,WAA9B,EAA2CC,WAA3C,EAAwD;AACtD,UAAID,gBAAgBC,WAApB,EAAiC,OAAO,KAAP;;AAEjC,UAAIR,MAAMS,cAAN,CAAqBF,WAArB,KAAqCP,MAAMS,cAAN,CAAqBD,WAArB,CAArC,IAA0ED,YAAYG,GAAZ,IAAmB,IAA7F,IAAqGH,YAAYG,GAAZ,KAAoBF,YAAYE,GAAzI,EAA8I;AAC5I,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;AACD;;;;;AAMA,WAAO,IAAIC,QAAQ;AACjBC,WAAK,QADY;AAEjBC,UAAI;AAFa,KAAZ;;AAKP,QAAIC,WAAW,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiCC,EAAjC,EAAqC;AAClD,aAAO,YAAY;AACjB,YAAIC,cAAJ;;AAEAH,gBAAQI,KAAR,CAAcH,IAAd,KAAuB,CAACE,iBAAiBH,QAAQI,KAA1B,EAAiCH,IAAjC,EAAuCI,KAAvC,CAA6CF,cAA7C,EAA6DG,SAA7D,CAAvB;AACAJ;AACD,OALD;AAMD,KAPD;;AASA,QAAIK,gBAAgBxB,gBAAgB,EAAhB,EAAoBA,cAAca,MAAMC,GAApB,IAA2B,UAAUW,IAAV,EAAgB;AACjF,UAAIC,UAAUD,KAAKC,OAAnB;AAAA,UACIC,cAAcF,KAAKE,WADvB;AAEA,aAAOzB,MAAM0B,YAAN,CAAmBF,OAAnB,EAA4B;AACjCX,YAAI,KAD6B;AAEjCc,kBAAUb,SAASU,OAAT,EAAkB,UAAlB,EAA8B,YAAY;AAClDC,sBAAYtB,QAAZ,EAAsB,IAAtB;AACD,SAFS;AAFuB,OAA5B,CAAP;AAMD,KATmB,EASjBL,cAAca,MAAME,EAApB,IAA0B,UAAUe,KAAV,EAAiB;AAC5C,UAAIJ,UAAUI,MAAMJ,OAApB;AAAA,UACIC,cAAcG,MAAMH,WADxB;AAAA,UAEII,WAAWD,MAAMC,QAFrB;AAGA,aAAO,CAACL,OAAD,EAAUxB,MAAM0B,YAAN,CAAmBG,QAAnB,EAA6B;AAC5ChB,YAAI,IADwC;AAE5CiB,mBAAWhB,SAASe,QAAT,EAAmB,WAAnB,EAAgC,YAAY;AACrDJ,sBAAYtB,QAAZ;AACD,SAFU;AAFiC,OAA7B,CAAV,CAAP;AAMD,KAnBmB,EAmBjBL,aAnBC,CAAJ;AAoBA,QAAIiC,gBAAgBhC,gBAAgB,EAAhB,EAAoBA,cAAcY,MAAMC,GAApB,IAA2B,UAAUoB,KAAV,EAAiB;AAClF,UAAIH,WAAWG,MAAMH,QAArB;AAAA,UACIJ,cAAcO,MAAMP,WADxB;AAEA,aAAOzB,MAAM0B,YAAN,CAAmBG,QAAnB,EAA6B;AAClChB,YAAI,IAD8B;AAElCiB,mBAAWhB,SAASe,QAAT,EAAmB,WAAnB,EAAgC,YAAY;AACrDJ,sBAAYvB,OAAZ,EAAqBF,MAAM0B,YAAN,CAAmBG,QAAnB,EAA6B;AAChDhB,gBAAI;AAD4C,WAA7B,CAArB;AAGD,SAJU;AAFuB,OAA7B,CAAP;AAQD,KAXmB,EAWjBd,cAAcY,MAAME,EAApB,IAA0B,UAAUoB,KAAV,EAAiB;AAC5C,UAAIT,UAAUS,MAAMT,OAApB;AAAA,UACIK,WAAWI,MAAMJ,QADrB;AAAA,UAEIJ,cAAcQ,MAAMR,WAFxB;AAGA,aAAO,CAACzB,MAAM0B,YAAN,CAAmBF,OAAnB,EAA4B;AAClCX,YAAI,KAD8B;AAElCc,kBAAUb,SAASU,OAAT,EAAkB,UAAlB,EAA8B,YAAY;AAClDC,sBAAYvB,OAAZ,EAAqBF,MAAM0B,YAAN,CAAmBG,QAAnB,EAA6B;AAChDhB,gBAAI;AAD4C,WAA7B,CAArB;AAGD,SAJS;AAFwB,OAA5B,CAAD,EAOHb,MAAM0B,YAAN,CAAmBG,QAAnB,EAA6B;AAC/BhB,YAAI;AAD2B,OAA7B,CAPG,CAAP;AAUD,KAzBmB,EAyBjBd,aAzBC,CAAJ;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,QAAImC,mBAAmB,aAAa,UAAUC,gBAAV,EAA4B;AAC9DtC,qBAAeqC,gBAAf,EAAiCC,gBAAjC;;AAEA,eAASD,gBAAT,GAA4B;AAC1B,YAAIE,KAAJ;;AAEA,aAAK,IAAIC,OAAOhB,UAAUiB,MAArB,EAA6BC,OAAO,IAAIC,KAAJ,CAAUH,IAAV,CAApC,EAAqDI,OAAO,CAAjE,EAAoEA,OAAOJ,IAA3E,EAAiFI,MAAjF,EAAyF;AACvFF,eAAKE,IAAL,IAAapB,UAAUoB,IAAV,CAAb;AACD;;AAEDL,gBAAQD,iBAAiBO,IAAjB,CAAsBtB,KAAtB,CAA4Be,gBAA5B,EAA8C,CAAC,IAAD,EAAOQ,MAAP,CAAcJ,IAAd,CAA9C,KAAsE,IAA9E;AACAH,cAAMQ,KAAN,GAAc;AACZC,kBAAQ3C,OADI;AAEZsB,mBAAS;AAFG,SAAd;AAIAY,cAAMU,QAAN,GAAiB,KAAjB;;AAEAV,cAAMX,WAAN,GAAoB,UAAUoB,MAAV,EAAkBrB,OAAlB,EAA2B;AAC7C,cAAIA,YAAY,KAAK,CAArB,EAAwB;AACtBA,sBAAUY,MAAMQ,KAAN,CAAYpB,OAAtB;AACD;;AAEDY,gBAAMW,QAAN,CAAe;AACbF,oBAAQA,MADK;AAEbrB,qBAASA;AAFI,WAAf;AAID,SATD;;AAWA,eAAOY,KAAP;AACD;;AAED,UAAIY,SAASd,iBAAiBe,SAA9B;;AAEAD,aAAOE,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,aAAKJ,QAAL,GAAgB,IAAhB;AACD,OAFD;;AAIAZ,uBAAiBiB,wBAAjB,GAA4C,SAASA,wBAAT,CAAkChC,KAAlC,EAAyCyB,KAAzC,EAAgD;AAC1F,YAAIzB,MAAMU,QAAN,IAAkB,IAAtB,EAA4B;AAC1B,iBAAO;AACLL,qBAAS;AADJ,WAAP;AAGD;;AAED,YAAIoB,MAAMC,MAAN,KAAiB1C,QAAjB,IAA6BgB,MAAMiC,IAAN,KAAezC,MAAME,EAAtD,EAA0D;AACxD,iBAAO;AACLgC,oBAAQ1C;AADH,WAAP;AAGD;;AAED,YAAIyC,MAAMpB,OAAN,IAAiBlB,qBAAqBsC,MAAMpB,OAA3B,EAAoCL,MAAMU,QAA1C,CAArB,EAA0E;AACxE,iBAAO;AACLgB,oBAAQzC;AADH,WAAP;AAGD;;AAED,eAAO;AACLoB,mBAASxB,MAAM0B,YAAN,CAAmBP,MAAMU,QAAzB,EAAmC;AAC1ChB,gBAAI;AADsC,WAAnC;AADJ,SAAP;AAKD,OAxBD;;AA0BAmC,aAAOK,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,YAAIC,cAAc,KAAKnC,KAAvB;AAAA,YACIU,WAAWyB,YAAYzB,QAD3B;AAAA,YAEIuB,OAAOE,YAAYF,IAFvB;AAAA,YAGIG,cAAc,KAAKX,KAHvB;AAAA,YAIIC,SAASU,YAAYV,MAJzB;AAAA,YAKIrB,UAAU+B,YAAY/B,OAL1B;AAMA,YAAIgC,OAAO;AACT3B,oBAAUA,QADD;AAETL,mBAASA,OAFA;AAGTC,uBAAa,KAAKA,WAHT;AAIToB,kBAAQA;AAJC,SAAX;AAMA,YAAIY,SAAJ;;AAEA,gBAAQZ,MAAR;AACE,eAAK1C,QAAL;AACEsD,wBAAY1B,aAAaqB,IAAb,EAAmBI,IAAnB,CAAZ;AACA;;AAEF,eAAKpD,OAAL;AACEqD,wBAAYnC,aAAa8B,IAAb,EAAmBI,IAAnB,CAAZ;AACA;;AAEF,eAAKtD,OAAL;AACEuD,wBAAYjC,OAAZ;AAVJ;;AAaA,eAAO,cAAaxB,MAAM0D,aAAN,CAAoBrD,uBAAuBsD,QAA3C,EAAqD;AACvEC,mBAAO;AACLC,0BAAY,CAAC,KAAKf;AADb;AADgE,WAArD,EAIjBW,SAJiB;AAApB;AAKD,OAjCD;;AAmCA,aAAOvB,gBAAP;AACD,KAnGmC,CAmGlClC,MAAM8D,SAnG4B,CAApC;;AAqGA5B,qBAAiB6B,SAAjB,GAAqE;AACnE;;;;;;;AAOAX,YAAMnD,UAAU+D,KAAV,CAAgB,CAACrD,MAAME,EAAP,EAAWF,MAAMC,GAAjB,CAAhB,CAR6D;;AAUnE;;;AAGAiB,gBAAU5B,UAAUgE,SAAV,CAAoB,CAAChE,UAAUc,OAAV,CAAkBmD,UAAnB,CAApB;AAbyD,KAArE;AAeAhC,qBAAiBiC,YAAjB,GAAgC;AAC9Bf,YAAMzC,MAAMC;AADkB,KAAhC;AAGA,mBAAesB,gBAAf","file":"SwitchTransition.js","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;"]}