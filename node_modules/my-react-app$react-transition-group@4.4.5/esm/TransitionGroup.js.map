{"version":3,"sources":["TransitionGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_assertThisInitialized","_inheritsLoose","PropTypes","React","TransitionGroupContext","getChildMapping","getInitialChildMapping","getNextChildMapping","values","Object","obj","keys","map","k","defaultProps","component","childFactory","child","TransitionGroup","_React$Component","props","context","_this","call","handleExited","bind","state","contextValue","isMounting","firstRender","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","nextProps","_ref","prevChildMapping","children","node","currentChildMapping","key","onExited","render","_this$props","Component","appear","enter","exit","createElement","Provider","value","propTypes","any","bool","func"],"mappings":";;;;AAAA,WAAOA,6BAAP,MAA0C,yDAA1C;AACA,WAAOC,QAAP,MAAqB,oCAArB;AACA,WAAOC,sBAAP,MAAmC,kDAAnC;AACA,WAAOC,cAAP,MAA2B,0CAA3B;AACA,WAAOC,SAAP,MAAsB,YAAtB;AACA,WAAOC,KAAP,MAAkB,OAAlB;AACA,WAAOC,sBAAP,MAAmC,0BAAnC;AACA,aAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,mBAAlD,QAA6E,sBAA7E;;AAEA,QAAIC,SAASC,OAAOD,MAAP,IAAiB,UAAUE,GAAV,EAAe;AAC3C,aAAOD,OAAOE,IAAP,CAAYD,GAAZ,EAAiBE,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACvC,eAAOH,IAAIG,CAAJ,CAAP;AACD,OAFM,CAAP;AAGD,KAJD;;AAMA,QAAIC,eAAe;AACjBC,iBAAW,KADM;AAEjBC,oBAAc,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzC,eAAOA,KAAP;AACD;AAJgB,KAAnB;AAMA;;;;;;;;;;;;;;;AAeA,QAAIC,kBAAkB,aAAa,UAAUC,gBAAV,EAA4B;AAC7DlB,qBAAeiB,eAAf,EAAgCC,gBAAhC;;AAEA,eAASD,eAAT,CAAyBE,KAAzB,EAAgCC,OAAhC,EAAyC;AACvC,YAAIC,QAEIH,iBAAiBI,IAAjB,CAAsB,IAAtB,EAA4BH,KAA5B,EAAmCC,OAAnC,KAA+C,IAFvD;;AAIA,YAAIG,eAAeF,MAAME,YAAN,CAAmBC,IAAnB,CAAwBzB,uBAAuBsB,KAAvB,CAAxB,CAAnB,CALuC,CAKoC;;;AAG3EA,cAAMI,KAAN,GAAc;AACZC,wBAAc;AACZC,wBAAY;AADA,WADF;AAIZJ,wBAAcA,YAJF;AAKZK,uBAAa;AALD,SAAd;AAOA,eAAOP,KAAP;AACD;;AAED,UAAIQ,SAASZ,gBAAgBa,SAA7B;;AAEAD,aAAOE,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,aAAKC,OAAL,GAAe,IAAf;AACA,aAAKC,QAAL,CAAc;AACZP,wBAAc;AACZC,wBAAY;AADA;AADF,SAAd;AAKD,OAPD;;AASAE,aAAOK,oBAAP,GAA8B,SAASA,oBAAT,GAAgC;AAC5D,aAAKF,OAAL,GAAe,KAAf;AACD,OAFD;;AAIAf,sBAAgBkB,wBAAhB,GAA2C,SAASA,wBAAT,CAAkCC,SAAlC,EAA6CC,IAA7C,EAAmD;AAC5F,YAAIC,mBAAmBD,KAAKE,QAA5B;AAAA,YACIhB,eAAec,KAAKd,YADxB;AAAA,YAEIK,cAAcS,KAAKT,WAFvB;AAGA,eAAO;AACLW,oBAAUX,cAAcvB,uBAAuB+B,SAAvB,EAAkCb,YAAlC,CAAd,GAAgEjB,oBAAoB8B,SAApB,EAA+BE,gBAA/B,EAAiDf,YAAjD,CADrE;AAELK,uBAAa;AAFR,SAAP;AAID,OARD,CAQE;AARF;;AAWAC,aAAON,YAAP,GAAsB,SAASA,YAAT,CAAsBP,KAAtB,EAA6BwB,IAA7B,EAAmC;AACvD,YAAIC,sBAAsBrC,gBAAgB,KAAKe,KAAL,CAAWoB,QAA3B,CAA1B;AACA,YAAIvB,MAAM0B,GAAN,IAAaD,mBAAjB,EAAsC;;AAEtC,YAAIzB,MAAMG,KAAN,CAAYwB,QAAhB,EAA0B;AACxB3B,gBAAMG,KAAN,CAAYwB,QAAZ,CAAqBH,IAArB;AACD;;AAED,YAAI,KAAKR,OAAT,EAAkB;AAChB,eAAKC,QAAL,CAAc,UAAUR,KAAV,EAAiB;AAC7B,gBAAIc,WAAWzC,SAAS,EAAT,EAAa2B,MAAMc,QAAnB,CAAf;;AAEA,mBAAOA,SAASvB,MAAM0B,GAAf,CAAP;AACA,mBAAO;AACLH,wBAAUA;AADL,aAAP;AAGD,WAPD;AAQD;AACF,OAlBD;;AAoBAV,aAAOe,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,YAAIC,cAAc,KAAK1B,KAAvB;AAAA,YACI2B,YAAYD,YAAY/B,SAD5B;AAAA,YAEIC,eAAe8B,YAAY9B,YAF/B;AAAA,YAGII,QAAQtB,8BAA8BgD,WAA9B,EAA2C,CAAC,WAAD,EAAc,cAAd,CAA3C,CAHZ;;AAKA,YAAInB,eAAe,KAAKD,KAAL,CAAWC,YAA9B;AACA,YAAIa,WAAWhC,OAAO,KAAKkB,KAAL,CAAWc,QAAlB,EAA4B5B,GAA5B,CAAgCI,YAAhC,CAAf;AACA,eAAOI,MAAM4B,MAAb;AACA,eAAO5B,MAAM6B,KAAb;AACA,eAAO7B,MAAM8B,IAAb;;AAEA,YAAIH,cAAc,IAAlB,EAAwB;AACtB,iBAAO,cAAa5C,MAAMgD,aAAN,CAAoB/C,uBAAuBgD,QAA3C,EAAqD;AACvEC,qBAAO1B;AADgE,aAArD,EAEjBa,QAFiB;AAApB;AAGD;;AAED,eAAO,cAAarC,MAAMgD,aAAN,CAAoB/C,uBAAuBgD,QAA3C,EAAqD;AACvEC,mBAAO1B;AADgE,WAArD,EAEjB,aAAaxB,MAAMgD,aAAN,CAAoBJ,SAApB,EAA+B3B,KAA/B,EAAsCoB,QAAtC,CAFI;AAApB;AAGD,OArBD;;AAuBA,aAAOtB,eAAP;AACD,KA3FkC,CA2FjCf,MAAM4C,SA3F2B,CAAnC;;AA6FA7B,oBAAgBoC,SAAhB,GAAoE;AAClE;;;;;;;AAOAvC,iBAAWb,UAAUqD,GAR6C;;AAUlE;;;;;;;;;;;;;AAaAf,gBAAUtC,UAAUuC,IAvB8C;;AAyBlE;;;;;AAKAO,cAAQ9C,UAAUsD,IA9BgD;;AAgClE;;;;;AAKAP,aAAO/C,UAAUsD,IArCiD;;AAuClE;;;;;AAKAN,YAAMhD,UAAUsD,IA5CkD;;AA8ClE;;;;;;;;;;AAUAxC,oBAAcd,UAAUuD;AAxD0C,KAApE;AA0DAvC,oBAAgBJ,YAAhB,GAA+BA,YAA/B;AACA,mBAAeI,eAAf","file":"TransitionGroup.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;"]}