"use strict";

Liferay.Loader.define("@my-react-app$clayui/form@3.87.0/lib/SelectWithOption", ['module', 'exports', 'require', 'my-react-app$react', './Select'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;

    var _react = _interopRequireDefault(require("my-react-app$react"));

    var _Select = _interopRequireDefault(require("./Select"));

    var _excluded = ["options"];

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    var ClaySelectWithOption = function ClaySelectWithOption(_ref) {
      var _ref$options = _ref.options,
          options = _ref$options === void 0 ? [] : _ref$options,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      return (/*#__PURE__*/_react.default.createElement(_Select.default, otherProps, options.map(function (option, index) {
          if (option.type === 'group') {
            return (/*#__PURE__*/_react.default.createElement(_Select.default.OptGroup, {
                key: index,
                label: option.label
              }, option.options && option.options.map(function (item, j) {
                return (/*#__PURE__*/_react.default.createElement(_Select.default.Option, _extends({}, item, {
                    key: j
                  }))
                );
              }))
            );
          }

          return (/*#__PURE__*/_react.default.createElement(_Select.default.Option, _extends({}, option, {
              key: index
            }))
          );
        }))
      );
    };

    var _default = ClaySelectWithOption;
    exports.default = _default;
  }
});
//# sourceMappingURL=SelectWithOption.js.map