{"version":3,"sources":["wrapRegExp.js"],"names":["_typeof","setPrototypeOf","inherits","_wrapRegExp","re","groups","BabelRegExp","_super","RegExp","prototype","_groups","WeakMap","flags","_this","set","get","buildGroups","result","g","Object","keys","reduce","name","i","k","length","create","exec","str","call","indices","Symbol","replace","substitution","_","group","Array","isArray","join","args","arguments","slice","push","apply"],"mappings":"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","file":"wrapRegExp.js","sourcesContent":["import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n  var _super = RegExp.prototype,\n    _groups = new WeakMap();\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      var i = g[name];\n      if (\"number\" == typeof i) groups[name] = result[i];else {\n        for (var k = 0; void 0 === result[i[k]] && k + 1 < i.length;) k++;\n        groups[name] = result[i[k]];\n      }\n      return groups;\n    }, Object.create(null));\n  }\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) {\n      result.groups = buildGroups(result, this);\n      var indices = result.indices;\n      indices && (indices.groups = buildGroups(indices, this));\n    }\n    return result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        var group = groups[name];\n        return \"$\" + (Array.isArray(group) ? group.join(\"$\") : group);\n      }));\n    }\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}"]}