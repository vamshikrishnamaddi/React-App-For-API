{"version":3,"sources":["iterableToArrayLimitLoose.js"],"names":["_iterableToArrayLimitLoose","arr","i","_i","Symbol","iterator","_s","_arr","call","length","next","done","push","value"],"mappings":";;;;AAAA,mBAAe,SAASA,0BAAT,CAAoCC,GAApC,EAAyCC,CAAzC,EAA4C;AACzD,UAAIC,KAAKF,QAAQ,eAAe,OAAOG,MAAtB,IAAgCH,IAAIG,OAAOC,QAAX,CAAhC,IAAwDJ,IAAI,YAAJ,CAAhE,CAAT;AACA,UAAI,QAAQE,EAAZ,EAAgB;AACd,YAAIG,EAAJ;AAAA,YACEC,OAAO,EADT;AAEA,aAAKJ,KAAKA,GAAGK,IAAH,CAAQP,GAAR,CAAV,EAAwBA,IAAIQ,MAAJ,GAAaP,CAAb,IAAkB,CAAC,CAACI,KAAKH,GAAGO,IAAH,EAAN,EAAiBC,IAA5D,GAAmEJ,KAAKK,IAAL,CAAUN,GAAGO,KAAb;AACnE,eAAON,IAAP;AACD;AACF","file":"iterableToArrayLimitLoose.js","sourcesContent":["export default function _iterableToArrayLimitLoose(arr, i) {\n  var _i = arr && (\"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n  if (null != _i) {\n    var _s,\n      _arr = [];\n    for (_i = _i.call(arr); arr.length < i && !(_s = _i.next()).done;) _arr.push(_s.value);\n    return _arr;\n  }\n}"]}