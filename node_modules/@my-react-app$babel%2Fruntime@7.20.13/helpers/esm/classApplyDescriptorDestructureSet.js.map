{"version":3,"sources":["classApplyDescriptorDestructureSet.js"],"names":["_classApplyDescriptorDestructureSet","receiver","descriptor","set","__destrObj","value","v","call","writable","TypeError"],"mappings":";;;;AAAA,mBAAe,SAASA,mCAAT,CAA6CC,QAA7C,EAAuDC,UAAvD,EAAmE;AAChF,UAAIA,WAAWC,GAAf,EAAoB;AAClB,YAAI,EAAE,gBAAgBD,UAAlB,CAAJ,EAAmC;AACjCA,qBAAWE,UAAX,GAAwB;AACtB,gBAAIC,KAAJ,CAAUC,CAAV,EAAa;AACXJ,yBAAWC,GAAX,CAAeI,IAAf,CAAoBN,QAApB,EAA8BK,CAA9B;AACD;AAHqB,WAAxB;AAKD;AACD,eAAOJ,WAAWE,UAAlB;AACD,OATD,MASO;AACL,YAAI,CAACF,WAAWM,QAAhB,EAA0B;AACxB,gBAAM,IAAIC,SAAJ,CAAc,0CAAd,CAAN;AACD;AACD,eAAOP,UAAP;AACD;AACF","file":"classApplyDescriptorDestructureSet.js","sourcesContent":["export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {\n  if (descriptor.set) {\n    if (!(\"__destrObj\" in descriptor)) {\n      descriptor.__destrObj = {\n        set value(v) {\n          descriptor.set.call(receiver, v);\n        }\n      };\n    }\n    return descriptor.__destrObj;\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    return descriptor;\n  }\n}"]}