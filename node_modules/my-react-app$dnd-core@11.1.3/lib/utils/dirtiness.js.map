{"version":3,"sources":["dirtiness.js"],"names":["intersection","NONE","ALL","__IS_NONE__","__IS_ALL__","areDirty","dirtyIds","handlerIds","commonIds","length"],"mappings":";;;;AAAA,iBAASA,YAAT,QAA6B,YAA7B;AACA,eAAO,MAAMC,OAAO,EAAb;AACP,eAAO,MAAMC,MAAM,EAAZ;AACPD,aAAKE,WAAL,GAAmB,IAAnB;AACAD,YAAIE,UAAJ,GAAiB,IAAjB;AACA;;;;;;AAMA,eAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,UAA5B,EAAwC;AAC3C,gBAAID,aAAaL,IAAjB,EAAuB;AACnB,uBAAO,KAAP;AACH;AACD,gBAAIK,aAAaJ,GAAb,IAAoB,OAAOK,UAAP,KAAsB,WAA9C,EAA2D;AACvD,uBAAO,IAAP;AACH;AACD,kBAAMC,YAAYR,aAAaO,UAAb,EAAyBD,QAAzB,CAAlB;AACA,mBAAOE,UAAUC,MAAV,GAAmB,CAA1B;AACH","file":"dirtiness.js","sourcesContent":["import { intersection } from './js_utils';\nexport const NONE = [];\nexport const ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(dirtyIds, handlerIds) {\n    if (dirtyIds === NONE) {\n        return false;\n    }\n    if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n        return true;\n    }\n    const commonIds = intersection(handlerIds, dirtyIds);\n    return commonIds.length > 0;\n}\n"]}