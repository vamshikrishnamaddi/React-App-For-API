{"version":3,"sources":["coords.js"],"names":["add","a","b","x","y","subtract","getSourceClientOffset","state","clientOffset","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset"],"mappings":";;;;AAAA;;;;;AAKA,eAAO,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACtB,mBAAO;AACHC,mBAAGF,EAAEE,CAAF,GAAMD,EAAEC,CADR;AAEHC,mBAAGH,EAAEG,CAAF,GAAMF,EAAEE;AAFR,aAAP;AAIH;AACD;;;;;AAKA,eAAO,SAASC,QAAT,CAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB;AAC3B,mBAAO;AACHC,mBAAGF,EAAEE,CAAF,GAAMD,EAAEC,CADR;AAEHC,mBAAGH,EAAEG,CAAF,GAAMF,EAAEE;AAFR,aAAP;AAIH;AACD;;;;;;;;AAQA,eAAO,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AACzC,kBAAM,EAAEC,YAAF,EAAgBC,mBAAhB,EAAqCC,yBAArC,KAAmEH,KAAzE;AACA,gBAAI,CAACC,YAAD,IAAiB,CAACC,mBAAlB,IAAyC,CAACC,yBAA9C,EAAyE;AACrE,uBAAO,IAAP;AACH;AACD,mBAAOL,SAASL,IAAIQ,YAAJ,EAAkBE,yBAAlB,CAAT,EAAuDD,mBAAvD,CAAP;AACH;AACD;;;;;AAKA,eAAO,SAASE,8BAAT,CAAwCJ,KAAxC,EAA+C;AAClD,kBAAM,EAAEC,YAAF,EAAgBC,mBAAhB,KAAwCF,KAA9C;AACA,gBAAI,CAACC,YAAD,IAAiB,CAACC,mBAAtB,EAA2C;AACvC,uBAAO,IAAP;AACH;AACD,mBAAOJ,SAASG,YAAT,EAAuBC,mBAAvB,CAAP;AACH","file":"coords.js","sourcesContent":["/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a, b) {\n    return {\n        x: a.x + b.x,\n        y: a.y + b.y,\n    };\n}\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a, b) {\n    return {\n        x: a.x - b.x,\n        y: a.y - b.y,\n    };\n}\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state) {\n    const { clientOffset, initialClientOffset, initialSourceClientOffset } = state;\n    if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n        return null;\n    }\n    return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state) {\n    const { clientOffset, initialClientOffset } = state;\n    if (!clientOffset || !initialClientOffset) {\n        return null;\n    }\n    return subtract(clientOffset, initialClientOffset);\n}\n"]}