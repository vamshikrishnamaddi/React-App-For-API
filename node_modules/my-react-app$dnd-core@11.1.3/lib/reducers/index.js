Liferay.Loader.define('my-react-app$dnd-core@11.1.3/lib/reducers/index', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    var global = window;
    {
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }

            return target;
        };

        import { reduce as dragOffset } from './dragOffset';
        import { reduce as dragOperation } from './dragOperation';
        import { reduce as refCount } from './refCount';
        import { reduce as dirtyHandlerIds } from './dirtyHandlerIds';
        import { reduce as stateId } from './stateId';
        import { get } from '../utils/js_utils';
        export function reduce(state = {}, action) {
            return {
                dirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {
                    type: action.type,
                    payload: _extends({}, action.payload, {
                        prevTargetIds: get(state, 'dragOperation.targetIds', [])
                    })
                }),
                dragOffset: dragOffset(state.dragOffset, action),
                refCount: refCount(state.refCount, action),
                dragOperation: dragOperation(state.dragOperation, action),
                stateId: stateId(state.stateId)
            };
        }
    }
});
//# sourceMappingURL=index.js.map