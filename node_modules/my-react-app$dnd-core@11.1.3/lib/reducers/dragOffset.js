Liferay.Loader.define('my-react-app$dnd-core@11.1.3/lib/reducers/dragOffset', ['module', 'exports', 'require'], function (module, exports, require) {
    var define = undefined;
    var global = window;
    {
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }

            return target;
        };

        import { INIT_COORDS, BEGIN_DRAG, HOVER, END_DRAG, DROP } from '../actions/dragDrop';
        import { areCoordsEqual } from '../utils/equality';
        const initialState = {
            initialSourceClientOffset: null,
            initialClientOffset: null,
            clientOffset: null
        };
        export function reduce(state = initialState, action) {
            const { payload } = action;
            switch (action.type) {
                case INIT_COORDS:
                case BEGIN_DRAG:
                    return {
                        initialSourceClientOffset: payload.sourceClientOffset,
                        initialClientOffset: payload.clientOffset,
                        clientOffset: payload.clientOffset
                    };
                case HOVER:
                    if (areCoordsEqual(state.clientOffset, payload.clientOffset)) {
                        return state;
                    }
                    return _extends({}, state, {
                        clientOffset: payload.clientOffset
                    });
                case END_DRAG:
                case DROP:
                    return initialState;
                default:
                    return state;
            }
        }
    }
});
//# sourceMappingURL=dragOffset.js.map