{"version":3,"sources":["beginDrag.js"],"names":["Object","defineProperty","exports","value","createBeginDrag","_invariant","require","_setClientOffset","_js_utils","_types","ResetCoordinatesAction","type","INIT_COORDS","payload","clientOffset","sourceClientOffset","manager","beginDrag","sourceIds","arguments","length","undefined","options","publishSource","_options$publishSourc","getSourceClientOffset","monitor","getMonitor","registry","getRegistry","dispatch","setClientOffset","verifyInvariants","sourceId","getDraggableSource","Error","verifyGetSourceClientOffsetIsFunction","source","getSource","item","verifyItemIsObject","pinSource","itemType","getSourceType","BEGIN_DRAG","isSourcePublic","invariant","isDragging","forEach","isObject","i","canDragSource"],"mappings":"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","file":"beginDrag.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBeginDrag = createBeginDrag;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _setClientOffset = require(\"./local/setClientOffset\");\n\nvar _js_utils = require(\"../../utils/js_utils\");\n\nvar _types = require(\"./types\");\n\nvar ResetCoordinatesAction = {\n  type: _types.INIT_COORDS,\n  payload: {\n    clientOffset: null,\n    sourceClientOffset: null\n  }\n};\n\nfunction createBeginDrag(manager) {\n  return function beginDrag() {\n    var sourceIds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      publishSource: true\n    };\n    var _options$publishSourc = options.publishSource,\n        publishSource = _options$publishSourc === void 0 ? true : _options$publishSourc,\n        clientOffset = options.clientOffset,\n        getSourceClientOffset = options.getSourceClientOffset;\n    var monitor = manager.getMonitor();\n    var registry = manager.getRegistry(); // Initialize the coordinates using the client offset\n\n    manager.dispatch((0, _setClientOffset.setClientOffset)(clientOffset));\n    verifyInvariants(sourceIds, monitor, registry); // Get the draggable source\n\n    var sourceId = getDraggableSource(sourceIds, monitor);\n\n    if (sourceId === null) {\n      manager.dispatch(ResetCoordinatesAction);\n      return;\n    } // Get the source client offset\n\n\n    var sourceClientOffset = null;\n\n    if (clientOffset) {\n      if (!getSourceClientOffset) {\n        throw new Error('getSourceClientOffset must be defined');\n      }\n\n      verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n      sourceClientOffset = getSourceClientOffset(sourceId);\n    } // Initialize the full coordinates\n\n\n    manager.dispatch((0, _setClientOffset.setClientOffset)(clientOffset, sourceClientOffset));\n    var source = registry.getSource(sourceId);\n    var item = source.beginDrag(monitor, sourceId);\n    verifyItemIsObject(item);\n    registry.pinSource(sourceId);\n    var itemType = registry.getSourceType(sourceId);\n    return {\n      type: _types.BEGIN_DRAG,\n      payload: {\n        itemType: itemType,\n        item: item,\n        sourceId: sourceId,\n        clientOffset: clientOffset || null,\n        sourceClientOffset: sourceClientOffset || null,\n        isSourcePublic: !!publishSource\n      }\n    };\n  };\n}\n\nfunction verifyInvariants(sourceIds, monitor, registry) {\n  (0, _invariant.invariant)(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n  sourceIds.forEach(function (sourceId) {\n    (0, _invariant.invariant)(registry.getSource(sourceId), 'Expected sourceIds to be registered.');\n  });\n}\n\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n  (0, _invariant.invariant)(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\n\nfunction verifyItemIsObject(item) {\n  (0, _invariant.invariant)((0, _js_utils.isObject)(item), 'Item must be an object.');\n}\n\nfunction getDraggableSource(sourceIds, monitor) {\n  var sourceId = null;\n\n  for (var i = sourceIds.length - 1; i >= 0; i--) {\n    if (monitor.canDragSource(sourceIds[i])) {\n      sourceId = sourceIds[i];\n      break;\n    }\n  }\n\n  return sourceId;\n}"]}