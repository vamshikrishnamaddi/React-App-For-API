{"version":3,"sources":["hover.js"],"names":["Object","defineProperty","exports","value","createHover","_invariant","require","_matchesType","_types","manager","hover","targetIdsArg","_ref","arguments","length","undefined","clientOffset","verifyTargetIdsIsArray","targetIds","slice","monitor","getMonitor","registry","getRegistry","checkInvariants","draggedItemType","getItemType","removeNonMatchingTargetIds","hoverAllTargets","type","HOVER","payload","invariant","Array","isArray","isDragging","didDrop","i","targetId","lastIndexOf","target","getTarget","targetType","getTargetType","matchesType","splice","forEach"],"mappings":"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","file":"hover.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createHover = createHover;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _matchesType = require(\"../../utils/matchesType\");\n\nvar _types = require(\"./types\");\n\nfunction createHover(manager) {\n  return function hover(targetIdsArg) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        clientOffset = _ref.clientOffset;\n\n    verifyTargetIdsIsArray(targetIdsArg);\n    var targetIds = targetIdsArg.slice(0);\n    var monitor = manager.getMonitor();\n    var registry = manager.getRegistry();\n    checkInvariants(targetIds, monitor, registry);\n    var draggedItemType = monitor.getItemType();\n    removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n    hoverAllTargets(targetIds, monitor, registry);\n    return {\n      type: _types.HOVER,\n      payload: {\n        targetIds: targetIds,\n        clientOffset: clientOffset || null\n      }\n    };\n  };\n}\n\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n  (0, _invariant.invariant)(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\n\nfunction checkInvariants(targetIds, monitor, registry) {\n  (0, _invariant.invariant)(monitor.isDragging(), 'Cannot call hover while not dragging.');\n  (0, _invariant.invariant)(!monitor.didDrop(), 'Cannot call hover after drop.');\n\n  for (var i = 0; i < targetIds.length; i++) {\n    var targetId = targetIds[i];\n    (0, _invariant.invariant)(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n    var target = registry.getTarget(targetId);\n    (0, _invariant.invariant)(target, 'Expected targetIds to be registered.');\n  }\n}\n\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n  // Remove those targetIds that don't match the targetType.  This\n  // fixes shallow isOver which would only be non-shallow because of\n  // non-matching targets.\n  for (var i = targetIds.length - 1; i >= 0; i--) {\n    var targetId = targetIds[i];\n    var targetType = registry.getTargetType(targetId);\n\n    if (!(0, _matchesType.matchesType)(targetType, draggedItemType)) {\n      targetIds.splice(i, 1);\n    }\n  }\n}\n\nfunction hoverAllTargets(targetIds, monitor, registry) {\n  // Finally call hover on all matching targets.\n  targetIds.forEach(function (targetId) {\n    var target = registry.getTarget(targetId);\n    target.hover(monitor, targetId);\n  });\n}"]}