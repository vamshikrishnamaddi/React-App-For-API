{"version":3,"sources":["contracts.js"],"names":["Object","defineProperty","exports","value","validateSourceContract","validateTargetContract","validateType","_invariant","require","_typeof","obj","Symbol","iterator","constructor","prototype","source","invariant","canDrag","beginDrag","endDrag","target","canDrop","hover","drop","type","allowArray","Array","isArray","forEach","t"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;AAGAD,YAAQE,sBAAR,GAAiCA,sBAAjC;AACAF,YAAQG,sBAAR,GAAiCA,sBAAjC;AACAH,YAAQI,YAAR,GAAuBA,YAAvB;;AAEA,QAAIC,aAAaC,QAAQ,mCAAR,CAAjB;;AAEA,aAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;AAA2B,UAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,OAAOC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,kBAAU,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,iBAAO,OAAOA,GAAd;AAAoB,SAAtD;AAAyD,OAApI,MAA0I;AAAED,kBAAU,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,iBAAOA,OAAO,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,IAAIG,WAAJ,KAAoBF,MAA3D,IAAqED,QAAQC,OAAOG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,SAAjK;AAAoK,OAAC,OAAOD,QAAQC,GAAR,CAAP;AAAsB;;AAE1X,aAASN,sBAAT,CAAgCW,MAAhC,EAAwC;AACtC,OAAC,GAAGR,WAAWS,SAAf,EAA0B,OAAOD,OAAOE,OAAd,KAA0B,UAApD,EAAgE,oCAAhE;AACA,OAAC,GAAGV,WAAWS,SAAf,EAA0B,OAAOD,OAAOG,SAAd,KAA4B,UAAtD,EAAkE,sCAAlE;AACA,OAAC,GAAGX,WAAWS,SAAf,EAA0B,OAAOD,OAAOI,OAAd,KAA0B,UAApD,EAAgE,oCAAhE;AACD;;AAED,aAASd,sBAAT,CAAgCe,MAAhC,EAAwC;AACtC,OAAC,GAAGb,WAAWS,SAAf,EAA0B,OAAOI,OAAOC,OAAd,KAA0B,UAApD,EAAgE,oCAAhE;AACA,OAAC,GAAGd,WAAWS,SAAf,EAA0B,OAAOI,OAAOE,KAAd,KAAwB,UAAlD,EAA8D,kCAA9D;AACA,OAAC,GAAGf,WAAWS,SAAf,EAA0B,OAAOI,OAAOG,IAAd,KAAuB,UAAjD,EAA6D,sCAA7D;AACD;;AAED,aAASjB,YAAT,CAAsBkB,IAAtB,EAA4BC,UAA5B,EAAwC;AACtC,UAAIA,cAAcC,MAAMC,OAAN,CAAcH,IAAd,CAAlB,EAAuC;AACrCA,aAAKI,OAAL,CAAa,UAAUC,CAAV,EAAa;AACxB,iBAAOvB,aAAauB,CAAb,EAAgB,KAAhB,CAAP;AACD,SAFD;AAGA;AACD;;AAED,OAAC,GAAGtB,WAAWS,SAAf,EAA0B,OAAOQ,IAAP,KAAgB,QAAhB,IAA4Bf,QAAQe,IAAR,MAAkB,QAAxE,EAAkFC,aAAa,6DAAb,GAA6E,wCAA/J;AACD","file":"contracts.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSourceContract = validateSourceContract;\nexports.validateTargetContract = validateTargetContract;\nexports.validateType = validateType;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction validateSourceContract(source) {\n  (0, _invariant.invariant)(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n  (0, _invariant.invariant)(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n  (0, _invariant.invariant)(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\n\nfunction validateTargetContract(target) {\n  (0, _invariant.invariant)(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n  (0, _invariant.invariant)(typeof target.hover === 'function', 'Expected hover to be a function.');\n  (0, _invariant.invariant)(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\n\nfunction validateType(type, allowArray) {\n  if (allowArray && Array.isArray(type)) {\n    type.forEach(function (t) {\n      return validateType(t, false);\n    });\n    return;\n  }\n\n  (0, _invariant.invariant)(typeof type === 'string' || _typeof(type) === 'symbol', allowArray ? 'Type can only be a string, a symbol, or an array of either.' : 'Type can only be a string or a symbol.');\n}"]}