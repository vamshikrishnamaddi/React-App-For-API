{"version":3,"sources":["coords.js"],"names":["add","a","b","x","y","subtract","getSourceClientOffset","state","clientOffset","initialClientOffset","initialSourceClientOffset","getDifferenceFromInitialOffset"],"mappings":";;;;AAAA;;;;;AAKA,WAAO,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACxB,aAAO;AACLC,WAAGF,EAAEE,CAAF,GAAMD,EAAEC,CADN;AAELC,WAAGH,EAAEG,CAAF,GAAMF,EAAEE;AAFN,OAAP;AAID;AACD;;;;;;AAMA,WAAO,SAASC,QAAT,CAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB;AAC7B,aAAO;AACLC,WAAGF,EAAEE,CAAF,GAAMD,EAAEC,CADN;AAELC,WAAGH,EAAEG,CAAF,GAAMF,EAAEE;AAFN,OAAP;AAID;AACD;;;;;;;;;AASA,WAAO,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AAC3C,UAAIC,eAAeD,MAAMC,YAAzB;AAAA,UACIC,sBAAsBF,MAAME,mBADhC;AAAA,UAEIC,4BAA4BH,MAAMG,yBAFtC;;AAIA,UAAI,CAACF,YAAD,IAAiB,CAACC,mBAAlB,IAAyC,CAACC,yBAA9C,EAAyE;AACvE,eAAO,IAAP;AACD;;AAED,aAAOL,SAASL,IAAIQ,YAAJ,EAAkBE,yBAAlB,CAAT,EAAuDD,mBAAvD,CAAP;AACD;AACD;;;;;;AAMA,WAAO,SAASE,8BAAT,CAAwCJ,KAAxC,EAA+C;AACpD,UAAIC,eAAeD,MAAMC,YAAzB;AAAA,UACIC,sBAAsBF,MAAME,mBADhC;;AAGA,UAAI,CAACD,YAAD,IAAiB,CAACC,mBAAtB,EAA2C;AACzC,eAAO,IAAP;AACD;;AAED,aAAOJ,SAASG,YAAT,EAAuBC,mBAAvB,CAAP;AACD","file":"coords.js","sourcesContent":["/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a, b) {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n}\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\n\nexport function subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\n\nexport function getSourceClientOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset,\n      initialSourceClientOffset = state.initialSourceClientOffset;\n\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n    return null;\n  }\n\n  return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\n\nexport function getDifferenceFromInitialOffset(state) {\n  var clientOffset = state.clientOffset,\n      initialClientOffset = state.initialClientOffset;\n\n  if (!clientOffset || !initialClientOffset) {\n    return null;\n  }\n\n  return subtract(clientOffset, initialClientOffset);\n}"]}