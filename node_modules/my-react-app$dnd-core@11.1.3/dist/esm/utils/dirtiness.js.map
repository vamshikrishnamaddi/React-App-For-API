{"version":3,"sources":["dirtiness.js"],"names":["intersection","NONE","ALL","__IS_NONE__","__IS_ALL__","areDirty","dirtyIds","handlerIds","commonIds","length"],"mappings":";;;;AAAA,aAASA,YAAT,QAA6B,YAA7B;AACA,WAAO,IAAIC,OAAO,EAAX;AACP,WAAO,IAAIC,MAAM,EAAV;AACPD,SAAKE,WAAL,GAAmB,IAAnB;AACAD,QAAIE,UAAJ,GAAiB,IAAjB;AACA;;;;;;;AAOA,WAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,UAA5B,EAAwC;AAC7C,UAAID,aAAaL,IAAjB,EAAuB;AACrB,eAAO,KAAP;AACD;;AAED,UAAIK,aAAaJ,GAAb,IAAoB,OAAOK,UAAP,KAAsB,WAA9C,EAA2D;AACzD,eAAO,IAAP;AACD;;AAED,UAAIC,YAAYR,aAAaO,UAAb,EAAyBD,QAAzB,CAAhB;AACA,aAAOE,UAAUC,MAAV,GAAmB,CAA1B;AACD","file":"dirtiness.js","sourcesContent":["import { intersection } from './js_utils';\nexport var NONE = [];\nexport var ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\n\nexport function areDirty(dirtyIds, handlerIds) {\n  if (dirtyIds === NONE) {\n    return false;\n  }\n\n  if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n    return true;\n  }\n\n  var commonIds = intersection(handlerIds, dirtyIds);\n  return commonIds.length > 0;\n}"]}