{"version":3,"sources":["equality.js"],"names":["strictEquality","a","b","areCoordsEqual","offsetA","offsetB","x","y","areArraysEqual","isEqual","arguments","length","undefined","i"],"mappings":";;;;AAAA,WAAO,IAAIA,iBAAiB,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AACxD,aAAOD,MAAMC,CAAb;AACD,KAFM;AAGP;;;;;;AAMA,WAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;AAC/C,UAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;AACxB,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;AAC/B,eAAO,KAAP;AACD,OAFM,MAEA;AACL,eAAOD,QAAQE,CAAR,KAAcD,QAAQC,CAAtB,IAA2BF,QAAQG,CAAR,KAAcF,QAAQE,CAAxD;AACD;AACF;AACD;;;;;;AAMA,WAAO,SAASC,cAAT,CAAwBP,CAAxB,EAA2BC,CAA3B,EAA8B;AACnC,UAAIO,UAAUC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoEV,cAAlF;;AAEA,UAAIC,EAAEU,MAAF,KAAaT,EAAES,MAAnB,EAA2B;AACzB,eAAO,KAAP;AACD;;AAED,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIZ,EAAEU,MAAtB,EAA8B,EAAEE,CAAhC,EAAmC;AACjC,YAAI,CAACJ,QAAQR,EAAEY,CAAF,CAAR,EAAcX,EAAEW,CAAF,CAAd,CAAL,EAA0B;AACxB,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD","file":"equality.js","sourcesContent":["export var strictEquality = function strictEquality(a, b) {\n  return a === b;\n};\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\n\nexport function areCoordsEqual(offsetA, offsetB) {\n  if (!offsetA && !offsetB) {\n    return true;\n  } else if (!offsetA || !offsetB) {\n    return false;\n  } else {\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n  }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\n\nexport function areArraysEqual(a, b) {\n  var isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!isEqual(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}"]}