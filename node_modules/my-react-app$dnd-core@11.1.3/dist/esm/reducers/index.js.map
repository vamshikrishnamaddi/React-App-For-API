{"version":3,"sources":["index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","reduce","dragOffset","dragOperation","refCount","dirtyHandlerIds","stateId","get","state","undefined","action","type","payload","prevTargetIds"],"mappings":"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","file":"index.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { reduce as dragOffset } from './dragOffset';\nimport { reduce as dragOperation } from './dragOperation';\nimport { reduce as refCount } from './refCount';\nimport { reduce as dirtyHandlerIds } from './dirtyHandlerIds';\nimport { reduce as stateId } from './stateId';\nimport { get } from '../utils/js_utils';\nexport function reduce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    dirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n      type: action.type,\n      payload: _objectSpread(_objectSpread({}, action.payload), {}, {\n        prevTargetIds: get(state, 'dragOperation.targetIds', [])\n      })\n    }),\n    dragOffset: dragOffset(state.dragOffset, action),\n    refCount: refCount(state.refCount, action),\n    dragOperation: dragOperation(state.dragOperation, action),\n    stateId: stateId(state.stateId)\n  };\n}"]}