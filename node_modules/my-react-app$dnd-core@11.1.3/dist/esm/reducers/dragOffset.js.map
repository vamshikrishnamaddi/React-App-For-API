{"version":3,"sources":["dragOffset.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","INIT_COORDS","BEGIN_DRAG","HOVER","END_DRAG","DROP","areCoordsEqual","initialState","initialSourceClientOffset","initialClientOffset","clientOffset","reduce","state","undefined","action","payload","type","sourceClientOffset"],"mappings":";;;;AAAA,aAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,UAAIC,OAAOC,OAAOD,IAAP,CAAYF,MAAZ,CAAX,CAAgC,IAAIG,OAAOC,qBAAX,EAAkC;AAAE,YAAIC,UAAUF,OAAOC,qBAAP,CAA6BJ,MAA7B,CAAd,CAAoD,IAAIC,cAAJ,EAAoBI,UAAUA,QAAQC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,iBAAOJ,OAAOK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,SAAjG,CAAV,CAA8GP,KAAKQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC,OAAC,OAAOH,IAAP;AAAc;;AAErV,aAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIC,UAAUC,MAA9B,EAAsCF,GAAtC,EAA2C;AAAE,YAAIG,SAASF,UAAUD,CAAV,KAAgB,IAAhB,GAAuBC,UAAUD,CAAV,CAAvB,GAAsC,EAAnD,CAAuD,IAAIA,IAAI,CAAR,EAAW;AAAEf,kBAAQI,OAAOc,MAAP,CAAR,EAAwB,IAAxB,EAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,4BAAgBP,MAAhB,EAAwBM,GAAxB,EAA6BF,OAAOE,GAAP,CAA7B;AAA4C,WAAnG;AAAuG,SAApH,MAA0H,IAAIhB,OAAOkB,yBAAX,EAAsC;AAAElB,iBAAOmB,gBAAP,CAAwBT,MAAxB,EAAgCV,OAAOkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,SAApH,MAA0H;AAAElB,kBAAQI,OAAOc,MAAP,CAAR,EAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,mBAAOoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,OAAOK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,WAApI;AAAwI;AAAE,OAAC,OAAON,MAAP;AAAgB;;AAEthB,aAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,UAAIN,OAAOK,GAAX,EAAgB;AAAErB,eAAOoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC,EAAEM,OAAOA,KAAT,EAAgBhB,YAAY,IAA5B,EAAkCiB,cAAc,IAAhD,EAAsDC,UAAU,IAAhE,EAAhC;AAA0G,OAA5H,MAAkI;AAAEH,YAAIL,GAAJ,IAAWM,KAAX;AAAmB,OAAC,OAAOD,GAAP;AAAa;;AAEjN,aAASI,WAAT,EAAsBC,UAAtB,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,IAAnD,QAA+D,qBAA/D;AACA,aAASC,cAAT,QAA+B,mBAA/B;AACA,QAAIC,eAAe;AACjBC,iCAA2B,IADV;AAEjBC,2BAAqB,IAFJ;AAGjBC,oBAAc;AAHG,KAAnB;AAKA,WAAO,SAASC,MAAT,GAAkB;AACvB,UAAIC,QAAQxB,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiByB,SAAzC,GAAqDzB,UAAU,CAAV,CAArD,GAAoEmB,YAAhF;AACA,UAAIO,SAAS1B,UAAUC,MAAV,GAAmB,CAAnB,GAAuBD,UAAU,CAAV,CAAvB,GAAsCyB,SAAnD;AACA,UAAIE,UAAUD,OAAOC,OAArB;;AAEA,cAAQD,OAAOE,IAAf;AACE,aAAKf,WAAL;AACA,aAAKC,UAAL;AACE,iBAAO;AACLM,uCAA2BO,QAAQE,kBAD9B;AAELR,iCAAqBM,QAAQL,YAFxB;AAGLA,0BAAcK,QAAQL;AAHjB,WAAP;;AAMF,aAAKP,KAAL;AACE,cAAIG,eAAeM,MAAMF,YAArB,EAAmCK,QAAQL,YAA3C,CAAJ,EAA8D;AAC5D,mBAAOE,KAAP;AACD;;AAED,iBAAO3B,cAAcA,cAAc,EAAd,EAAkB2B,KAAlB,CAAd,EAAwC,EAAxC,EAA4C;AACjDF,0BAAcK,QAAQL;AAD2B,WAA5C,CAAP;;AAIF,aAAKN,QAAL;AACA,aAAKC,IAAL;AACE,iBAAOE,YAAP;;AAEF;AACE,iBAAOK,KAAP;AAvBJ;AAyBD","file":"dragOffset.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { INIT_COORDS, BEGIN_DRAG, HOVER, END_DRAG, DROP } from '../actions/dragDrop';\nimport { areCoordsEqual } from '../utils/equality';\nvar initialState = {\n  initialSourceClientOffset: null,\n  initialClientOffset: null,\n  clientOffset: null\n};\nexport function reduce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case INIT_COORDS:\n    case BEGIN_DRAG:\n      return {\n        initialSourceClientOffset: payload.sourceClientOffset,\n        initialClientOffset: payload.clientOffset,\n        clientOffset: payload.clientOffset\n      };\n\n    case HOVER:\n      if (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n        return state;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clientOffset: payload.clientOffset\n      });\n\n    case END_DRAG:\n    case DROP:\n      return initialState;\n\n    default:\n      return state;\n  }\n}"]}