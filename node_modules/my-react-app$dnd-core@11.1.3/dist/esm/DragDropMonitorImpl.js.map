{"version":3,"sources":["DragDropMonitorImpl.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","invariant","matchesType","getSourceClientOffset","_getSourceClientOffset","getDifferenceFromInitialOffset","_getDifferenceFromInitialOffset","areDirty","DragDropMonitorImpl","store","registry","value","subscribeToStateChange","listener","_this","options","arguments","undefined","handlerIds","Array","isArray","prevStateId","getState","stateId","handleChange","state","currentStateId","canSkipListener","dirtyHandlerIds","subscribe","subscribeToOffsetChange","_this2","previousState","dragOffset","nextState","canDragSource","sourceId","source","getSource","isDragging","canDrag","canDropOnTarget","targetId","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset"],"mappings":"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","file":"DragDropMonitorImpl.js","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { matchesType } from './utils/matchesType';\nimport { getSourceClientOffset as _getSourceClientOffset, getDifferenceFromInitialOffset as _getDifferenceFromInitialOffset } from './utils/coords';\nimport { areDirty } from './utils/dirtiness';\nexport var DragDropMonitorImpl = /*#__PURE__*/function () {\n  function DragDropMonitorImpl(store, registry) {\n    _classCallCheck(this, DragDropMonitorImpl);\n\n    this.store = store;\n    this.registry = registry;\n  }\n\n  _createClass(DragDropMonitorImpl, [{\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        handlerIds: undefined\n      };\n      var handlerIds = options.handlerIds;\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !areDirty(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId);\n      invariant(source, 'Expected to find a valid source.');\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var target = this.registry.getTarget(targetId);\n      invariant(target, 'Expected to find a valid target.');\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return matchesType(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      // undefined on initial render\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId, true);\n      invariant(source, 'Expected to find a valid source.');\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      };\n\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return Boolean(this.store.getState().dragOperation.isSourcePublic);\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return _getSourceClientOffset(this.store.getState().dragOffset);\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return _getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitorImpl;\n}();"]}