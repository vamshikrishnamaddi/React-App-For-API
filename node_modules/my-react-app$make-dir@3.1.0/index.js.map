{"version":3,"sources":["index.js"],"names":["fs","require","path","promisify","semver","useNativeRecursiveOption","satisfies","process","version","checkPath","pth","platform","pathHasInvalidWinCharacters","test","replace","parse","root","error","Error","code","processOptions","options","mode","permissionError","errno","syscall","makeDir","input","mkdir","stat","resolve","recursive","make","dirname","message","includes","stats","isDirectory","_","module","exports","sync","mkdirSync","statSync"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AACA,QAAMA,KAAKC,QAAQ,iBAAR,CAAX;AACA,QAAMC,OAAOD,QAAQ,mBAAR,CAAb;AACA,QAAM,EAACE,SAAD,KAAcF,QAAQ,mBAAR,CAApB;AACA,QAAMG,SAASH,QAAQ,qBAAR,CAAf;;AAEA,QAAMI,2BAA2BD,OAAOE,SAAP,CAAiBC,QAAQC,OAAzB,EAAkC,WAAlC,CAAjC;;AAEA;AACA;AACA,QAAMC,YAAYC,OAAO;AACxB,OAAIH,QAAQI,QAAR,KAAqB,OAAzB,EAAkC;AACjC,UAAMC,8BAA8B,YAAYC,IAAZ,CAAiBH,IAAII,OAAJ,CAAYZ,KAAKa,KAAL,CAAWL,GAAX,EAAgBM,IAA5B,EAAkC,EAAlC,CAAjB,CAApC;;AAEA,QAAIJ,2BAAJ,EAAiC;AAChC,WAAMK,QAAQ,IAAIC,KAAJ,CAAW,qCAAoCR,GAAI,EAAnD,CAAd;AACAO,WAAME,IAAN,GAAa,QAAb;AACA,WAAMF,KAAN;AACA;AACD;AACD,GAVD;;AAYA,QAAMG,iBAAiBC,WAAW;;AAOjC,uBALiB;AAChBC,UAAM,KADU;AAEhBtB;AAFgB,IAKjB,EAEIqB,OAFJ;AANA;AAUA,GAXD;;AAaA,QAAME,kBAAkBb,OAAO;AAC9B;AACA;AACA,SAAMO,QAAQ,IAAIC,KAAJ,CAAW,mCAAkCR,GAAI,GAAjD,CAAd;AACAO,SAAME,IAAN,GAAa,OAAb;AACAF,SAAMO,KAAN,GAAc,CAAC,IAAf;AACAP,SAAMf,IAAN,GAAaQ,GAAb;AACAO,SAAMQ,OAAN,GAAgB,OAAhB;AACA,UAAOR,KAAP;AACA,GATD;;AAWA,QAAMS,UAAU,OAAOC,KAAP,EAAcN,OAAd,KAA0B;AACzCZ,aAAUkB,KAAV;AACAN,aAAUD,eAAeC,OAAf,CAAV;;AAEA,SAAMO,QAAQzB,UAAUkB,QAAQrB,EAAR,CAAW4B,KAArB,CAAd;AACA,SAAMC,OAAO1B,UAAUkB,QAAQrB,EAAR,CAAW6B,IAArB,CAAb;;AAEA,OAAIxB,4BAA4BgB,QAAQrB,EAAR,CAAW4B,KAAX,KAAqB5B,GAAG4B,KAAxD,EAA+D;AAC9D,UAAMlB,MAAMR,KAAK4B,OAAL,CAAaH,KAAb,CAAZ;;AAEA,UAAMC,MAAMlB,GAAN,EAAW;AAChBY,WAAMD,QAAQC,IADE;AAEhBS,gBAAW;AAFK,KAAX,CAAN;;AAKA,WAAOrB,GAAP;AACA;;AAED,SAAMsB,OAAO,MAAMtB,GAAN,IAAa;AACzB,QAAI;AACH,WAAMkB,MAAMlB,GAAN,EAAWW,QAAQC,IAAnB,CAAN;;AAEA,YAAOZ,GAAP;AACA,KAJD,CAIE,OAAOO,KAAP,EAAc;AACf,SAAIA,MAAME,IAAN,KAAe,OAAnB,EAA4B;AAC3B,YAAMF,KAAN;AACA;;AAED,SAAIA,MAAME,IAAN,KAAe,QAAnB,EAA6B;AAC5B,UAAIjB,KAAK+B,OAAL,CAAavB,GAAb,MAAsBA,GAA1B,EAA+B;AAC9B,aAAMa,gBAAgBb,GAAhB,CAAN;AACA;;AAED,UAAIO,MAAMiB,OAAN,CAAcC,QAAd,CAAuB,YAAvB,CAAJ,EAA0C;AACzC,aAAMlB,KAAN;AACA;;AAED,YAAMe,KAAK9B,KAAK+B,OAAL,CAAavB,GAAb,CAAL,CAAN;;AAEA,aAAOsB,KAAKtB,GAAL,CAAP;AACA;;AAED,SAAI;AACH,YAAM0B,QAAQ,MAAMP,KAAKnB,GAAL,CAApB;AACA,UAAI,CAAC0B,MAAMC,WAAN,EAAL,EAA0B;AACzB,aAAM,IAAInB,KAAJ,CAAU,6BAAV,CAAN;AACA;AACD,MALD,CAKE,OAAOoB,CAAP,EAAU;AACX,YAAMrB,KAAN;AACA;;AAED,YAAOP,GAAP;AACA;AACD,IAnCD;;AAqCA,UAAOsB,KAAK9B,KAAK4B,OAAL,CAAaH,KAAb,CAAL,CAAP;AACA,GAxDD;;AA0DAY,SAAOC,OAAP,GAAiBd,OAAjB;;AAEAa,SAAOC,OAAP,CAAeC,IAAf,GAAsB,CAACd,KAAD,EAAQN,OAAR,KAAoB;AACzCZ,aAAUkB,KAAV;AACAN,aAAUD,eAAeC,OAAf,CAAV;;AAEA,OAAIhB,4BAA4BgB,QAAQrB,EAAR,CAAW0C,SAAX,KAAyB1C,GAAG0C,SAA5D,EAAuE;AACtE,UAAMhC,MAAMR,KAAK4B,OAAL,CAAaH,KAAb,CAAZ;;AAEA3B,OAAG0C,SAAH,CAAahC,GAAb,EAAkB;AACjBY,WAAMD,QAAQC,IADG;AAEjBS,gBAAW;AAFM,KAAlB;;AAKA,WAAOrB,GAAP;AACA;;AAED,SAAMsB,OAAOtB,OAAO;AACnB,QAAI;AACHW,aAAQrB,EAAR,CAAW0C,SAAX,CAAqBhC,GAArB,EAA0BW,QAAQC,IAAlC;AACA,KAFD,CAEE,OAAOL,KAAP,EAAc;AACf,SAAIA,MAAME,IAAN,KAAe,OAAnB,EAA4B;AAC3B,YAAMF,KAAN;AACA;;AAED,SAAIA,MAAME,IAAN,KAAe,QAAnB,EAA6B;AAC5B,UAAIjB,KAAK+B,OAAL,CAAavB,GAAb,MAAsBA,GAA1B,EAA+B;AAC9B,aAAMa,gBAAgBb,GAAhB,CAAN;AACA;;AAED,UAAIO,MAAMiB,OAAN,CAAcC,QAAd,CAAuB,YAAvB,CAAJ,EAA0C;AACzC,aAAMlB,KAAN;AACA;;AAEDe,WAAK9B,KAAK+B,OAAL,CAAavB,GAAb,CAAL;AACA,aAAOsB,KAAKtB,GAAL,CAAP;AACA;;AAED,SAAI;AACH,UAAI,CAACW,QAAQrB,EAAR,CAAW2C,QAAX,CAAoBjC,GAApB,EAAyB2B,WAAzB,EAAL,EAA6C;AAC5C,aAAM,IAAInB,KAAJ,CAAU,6BAAV,CAAN;AACA;AACD,MAJD,CAIE,OAAOoB,CAAP,EAAU;AACX,YAAMrB,KAAN;AACA;AACD;;AAED,WAAOP,GAAP;AACA,IA/BD;;AAiCA,UAAOsB,KAAK9B,KAAK4B,OAAL,CAAaH,KAAb,CAAL,CAAP;AACA,GAjDD","file":"index.js","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst {promisify} = require('util');\nconst semver = require('semver');\n\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst error = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terror.code = 'EINVAL';\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nconst processOptions = options => {\n\t// https://github.com/sindresorhus/make-dir/issues/18\n\tconst defaults = {\n\t\tmode: 0o777,\n\t\tfs\n\t};\n\n\treturn {\n\t\t...defaults,\n\t\t...options\n\t};\n};\n\nconst permissionError = pth => {\n\t// This replicates the exception of `fs.mkdir` with native the\n\t// `recusive` option when run on an invalid drive under Windows.\n\tconst error = new Error(`operation not permitted, mkdir '${pth}'`);\n\terror.code = 'EPERM';\n\terror.errno = -4048;\n\terror.path = pth;\n\terror.syscall = 'mkdir';\n\treturn error;\n};\n\nconst makeDir = async (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tconst mkdir = promisify(options.fs.mkdir);\n\tconst stat = promisify(options.fs.stat);\n\n\tif (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n\t\tconst pth = path.resolve(input);\n\n\t\tawait mkdir(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = async pth => {\n\t\ttry {\n\t\t\tawait mkdir(pth, options.mode);\n\n\t\t\treturn pth;\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tawait make(path.dirname(pth));\n\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst stats = await stat(pth);\n\t\t\t\tif (!stats.isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn pth;\n\t\t}\n\t};\n\n\treturn make(path.resolve(input));\n};\n\nmodule.exports = makeDir;\n\nmodule.exports.sync = (input, options) => {\n\tcheckPath(input);\n\toptions = processOptions(options);\n\n\tif (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n\t\tconst pth = path.resolve(input);\n\n\t\tfs.mkdirSync(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\toptions.fs.mkdirSync(pth, options.mode);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!options.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"]}