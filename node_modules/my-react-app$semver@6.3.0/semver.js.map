{"version":3,"sources":["semver.js"],"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","t","tokens","R","tok","n","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","RegExp","LONETILDE","TILDETRIM","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","compareBuild","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","comparators","result","remainingComparators","testComparator","pop","otherComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce","String","rtl","next","exec","index","lastIndex"],"mappings":"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","file":"semver.js","sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n"]}