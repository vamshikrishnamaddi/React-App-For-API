{"version":3,"sources":["index.js"],"names":["uniqNoSet","arr","ret","i","length","indexOf","push","uniqSet","seen","Set","filter","el","has","add","uniqSetWithForEach","forEach","doesForEachActuallyWork","global","prototype","module","exports"],"mappings":"AAAA;;AAEA;;AAEA;;;;;;AACA,WAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACvB,OAAIC,MAAM,EAAV;;AAEA,QAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,IAAIG,MAAxB,EAAgCD,GAAhC,EAAqC;AACpC,QAAID,IAAIG,OAAJ,CAAYJ,IAAIE,CAAJ,CAAZ,MAAwB,CAAC,CAA7B,EAAgC;AAC/BD,SAAII,IAAJ,CAASL,IAAIE,CAAJ,CAAT;AACA;AACD;;AAED,UAAOD,GAAP;AACA;;AAED;AACA,WAASK,OAAT,CAAiBN,GAAjB,EAAsB;AACrB,OAAIO,OAAO,IAAIC,GAAJ,EAAX;AACA,UAAOR,IAAIS,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAC/B,QAAI,CAACH,KAAKI,GAAL,CAASD,EAAT,CAAL,EAAmB;AAClBH,UAAKK,GAAL,CAASF,EAAT;AACA,YAAO,IAAP;AACA;;AAED,WAAO,KAAP;AACA,IAPM,CAAP;AAQA;;AAED;AACA,WAASG,kBAAT,CAA4Bb,GAA5B,EAAiC;AAChC,OAAIC,MAAM,EAAV;;AAEC,OAAIO,GAAJ,CAAQR,GAAR,CAAD,CAAec,OAAf,CAAuB,UAAUJ,EAAV,EAAc;AACpCT,QAAII,IAAJ,CAASK,EAAT;AACA,IAFD;;AAIA,UAAOT,GAAP;AACA;;AAED;AACA;AACA,WAASc,uBAAT,GAAmC;AAClC,OAAId,MAAM,KAAV;;AAEC,OAAIO,GAAJ,CAAQ,CAAC,IAAD,CAAR,CAAD,CAAkBM,OAAlB,CAA0B,UAAUJ,EAAV,EAAc;AACvCT,UAAMS,EAAN;AACA,IAFD;;AAIA,UAAOT,QAAQ,IAAf;AACA;;AAED,MAAI,SAASe,MAAb,EAAqB;AACpB,OAAI,OAAOR,IAAIS,SAAJ,CAAcH,OAArB,KAAiC,UAAjC,IAA+CC,yBAAnD,EAA8E;AAC7EG,WAAOC,OAAP,GAAiBN,kBAAjB;AACA,IAFD,MAEO;AACNK,WAAOC,OAAP,GAAiBb,OAAjB;AACA;AACD,GAND,MAMO;AACNY,UAAOC,OAAP,GAAiBpB,SAAjB;AACA","file":"index.js","sourcesContent":["'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n"]}