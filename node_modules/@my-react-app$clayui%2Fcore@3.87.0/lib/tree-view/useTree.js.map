{"version":3,"sources":["useTree.js"],"names":["Object","defineProperty","exports","value","createImmutableTree","useTree","_shared","require","_react","_useLayout","_useMultipleSelection","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","_i","_arr","_n","_d","_s","_e","next","done","err","props","_props$defaultItems","_useInternalState","useInternalState","defaultName","defaultValue","defaultItems","handleName","onChange","onItemsChange","items","_useInternalState2","setItems","cursors","useRef","Map","layout","useLayout","selection","useMultipleSelection","defaultSelectedKeys","indeterminate","layoutKeys","nestedKey","onSelectionChange","selectedKeys","selectionMode","_useInternalState3","defaultExpandedKeys","selectionHydrationMode","size","expand","expandSelectedItems","replaceIndeterminateKeys","has","Set","concat","onExpandedChange","expandedKeys","_useInternalState4","setExpandedKeys","useEffect","close","useCallback","expanded","delete","remove","path","tree","produce","op","applyPatches","replace","item","reorder","insert","toggle","add","open","currentSelected","visit","callback","hasContinue","currentPath","undefined","queue","_item2","shift","_path","initialTree","patches","immutableTree","pointer","index","nodeByPath","rootIndex","parent","patch","_path2","_value","node","_from","_path3","nodeToRemove","_item","pathToAdd","isSameParent","join","_path4","_nodeToRemove","_item3","_path5","nodeToReplace","splice"],"mappings":"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","file":"useTree.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createImmutableTree = createImmutableTree;\nexports.useTree = useTree;\n\nvar _shared = require(\"@clayui/shared\");\n\nvar _react = require(\"react\");\n\nvar _useLayout = require(\"./useLayout\");\n\nvar _useMultipleSelection = require(\"./useMultipleSelection\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction useTree(props) {\n  var _props$defaultItems;\n\n  var _useInternalState = (0, _shared.useInternalState)({\n    defaultName: 'defaultItems',\n    defaultValue: (_props$defaultItems = props.defaultItems) !== null && _props$defaultItems !== void 0 ? _props$defaultItems : [],\n    handleName: 'onItemsChange',\n    name: 'items',\n    onChange: props.onItemsChange,\n    value: props.items\n  }),\n      _useInternalState2 = _slicedToArray(_useInternalState, 2),\n      items = _useInternalState2[0],\n      setItems = _useInternalState2[1];\n\n  var cursors = (0, _react.useRef)(new Map());\n  var layout = (0, _useLayout.useLayout)();\n  var selection = (0, _useMultipleSelection.useMultipleSelection)({\n    defaultSelectedKeys: props.defaultSelectedKeys,\n    indeterminate: props.indeterminate,\n    items: items,\n    layoutKeys: layout.layoutKeys,\n    nestedKey: props.nestedKey,\n    onSelectionChange: props.onSelectionChange,\n    selectedKeys: props.selectedKeys,\n    selectionMode: props.selectionMode\n  });\n\n  var _useInternalState3 = (0, _shared.useInternalState)({\n    defaultName: 'defaultExpandedKeys',\n    defaultValue: function defaultValue() {\n      var defaultExpandedKeys = props.defaultExpandedKeys,\n          indeterminate = props.indeterminate,\n          nestedKey = props.nestedKey,\n          selectionHydrationMode = props.selectionHydrationMode,\n          selectionMode = props.selectionMode;\n\n      if (selectionHydrationMode === 'hydrate-first' && items && selection.selectedKeys.size) {\n        var expand = expandSelectedItems(items, nestedKey, // TODO try to make it configurable or be able to infer the name of\n        // the property from the key passed in the React rendering.\n        'id', selection.selectedKeys);\n\n        if (selectionMode === 'multiple-recursive' && indeterminate) {\n          selection.replaceIndeterminateKeys(expand.filter(function (key) {\n            return !selection.selectedKeys.has(key);\n          }));\n        }\n\n        return new Set(defaultExpandedKeys ? Array.from(defaultExpandedKeys).concat(expand) : expand);\n      }\n\n      return defaultExpandedKeys !== null && defaultExpandedKeys !== void 0 ? defaultExpandedKeys : new Set();\n    },\n    handleName: 'onExpandedChange',\n    name: 'expandedKeys',\n    onChange: props.onExpandedChange,\n    value: props.expandedKeys\n  }),\n      _useInternalState4 = _slicedToArray(_useInternalState3, 2),\n      expandedKeys = _useInternalState4[0],\n      setExpandedKeys = _useInternalState4[1];\n\n  (0, _react.useEffect)(function () {\n    var defaultExpandedKeys = props.defaultExpandedKeys,\n        indeterminate = props.indeterminate,\n        nestedKey = props.nestedKey,\n        selectionHydrationMode = props.selectionHydrationMode,\n        selectionMode = props.selectionMode;\n\n    if (selectionHydrationMode === 'render-first' && items && selection.selectedKeys.size) {\n      var expand = expandSelectedItems(items, nestedKey, // TODO try to make it configurable or be able to infer the name of\n      // the property from the key passed in the React rendering.\n      'id', selection.selectedKeys);\n\n      if (selectionMode === 'multiple-recursive' && indeterminate) {\n        selection.replaceIndeterminateKeys(expand.filter(function (key) {\n          return !selection.selectedKeys.has(key);\n        }));\n      }\n\n      setExpandedKeys(new Set(defaultExpandedKeys ? Array.from(defaultExpandedKeys).concat(expand) : expand));\n    }\n  }, []);\n  var close = (0, _react.useCallback)(function (key) {\n    var expanded = new Set(expandedKeys);\n\n    if (expanded.has(key)) {\n      expanded.delete(key);\n      setExpandedKeys(expanded);\n      return true;\n    }\n\n    return false;\n  }, [expandedKeys]);\n  var remove = (0, _react.useCallback)(function (path) {\n    var tree = createImmutableTree(items, props.nestedKey);\n    tree.produce({\n      op: 'remove',\n      path: path\n    });\n    setItems(tree.applyPatches());\n  }, [items]);\n  var replace = (0, _react.useCallback)(function (path, item) {\n    var tree = createImmutableTree(items, props.nestedKey);\n    tree.produce({\n      item: item,\n      op: 'replace',\n      path: path\n    });\n    setItems(tree.applyPatches());\n  }, [items]);\n  var reorder = (0, _react.useCallback)(function (from, path) {\n    var tree = createImmutableTree(items, props.nestedKey);\n    tree.produce({\n      from: from,\n      op: 'move',\n      path: path\n    });\n    setItems(tree.applyPatches());\n  }, [items]);\n  var insert = (0, _react.useCallback)(function (path, value) {\n    var tree = createImmutableTree(items, props.nestedKey);\n    tree.produce({\n      op: 'add',\n      path: path,\n      value: value\n    });\n    setItems(tree.applyPatches());\n  }, [items]);\n  var toggle = (0, _react.useCallback)(function (key) {\n    var expanded = new Set(expandedKeys);\n\n    if (expanded.has(key)) {\n      expanded.delete(key);\n    } else {\n      expanded.add(key);\n    }\n\n    setExpandedKeys(expanded);\n  }, [expandedKeys]);\n  var open = (0, _react.useCallback)(function (key) {\n    var expanded = new Set(expandedKeys);\n\n    if (!expanded.has(key)) {\n      expanded.add(key);\n      setExpandedKeys(expanded);\n      return true;\n    }\n\n    return false;\n  }, [expandedKeys]);\n  return {\n    close: close,\n    cursors: cursors,\n    expandedKeys: expandedKeys,\n    insert: insert,\n    items: items,\n    layout: layout,\n    open: open,\n    remove: remove,\n    reorder: reorder,\n    replace: replace,\n    selection: selection,\n    toggle: toggle\n  };\n}\n\nfunction expandSelectedItems(items, nestedKey, key, selectedKeys) {\n  var expand = [];\n  var currentSelected = 0;\n  visit(nestedKey, key, function (item, path) {\n    if (selectedKeys.has(item[key])) {\n      currentSelected++;\n      expand.push.apply(expand, _toConsumableArray(path));\n    }\n\n    return selectedKeys.size === currentSelected;\n  }).iter(items);\n  return expand;\n}\n\nfunction visit(nestedKey, key, callback) {\n  var hasContinue = false;\n\n  function iter(items) {\n    var currentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (hasContinue) {\n      return;\n    }\n\n    var queue = _toConsumableArray(items);\n\n    while (queue.length) {\n      var _item2 = queue.shift();\n\n      var _path = currentPath.concat(_item2[key]);\n\n      hasContinue = callback(_item2, _path);\n\n      if (hasContinue) {\n        break;\n      }\n\n      if (_item2[nestedKey]) {\n        iter(_item2[nestedKey], _path);\n      }\n    }\n  }\n\n  return {\n    iter: iter\n  };\n} // Operation of `move` value to the same document structure, removing from\n// `from` and then adding to `path`.\n// RFC 6902 (JSON Patch) 4.4\n\n\nfunction createImmutableTree(initialTree, nestedKey) {\n  var patches = [];\n\n  var immutableTree = _toConsumableArray(initialTree);\n\n  function pointer(tree, index, item) {\n    return [].concat(_toConsumableArray(tree.slice(0, index)), [item], _toConsumableArray(tree.slice(index + 1)));\n  }\n\n  function nodeByPath(path) {\n    var queue = _toConsumableArray(path);\n\n    var rootIndex = queue.shift(); // In an operation of moving an item from the root, it affects the indexes\n    // by having to delete first and then add. This is the same behavior\n    // as below.\n\n    if (!immutableTree[rootIndex]) {\n      rootIndex -= 1;\n    }\n\n    var item = _objectSpread({}, immutableTree[rootIndex]);\n\n    var parent = null;\n    var index = rootIndex;\n    immutableTree = pointer(immutableTree, index, item);\n\n    while (queue.length) {\n      index = queue.shift();\n\n      if (Array.isArray(item[nestedKey]) && item[nestedKey].length) {\n        // This fixes the index when there is a case to move an item\n        // that can be at the same level of the hierarchy inside the\n        // other item at the same level, this causes the array size to\n        // change and the index value to become stale.\n        //\n        // 1. Item A\n        //   1. Item B\n        //   2. Item C\n        //   3. Item D\n        //\n        // Op:\n        // from=[1, 1] path=[1, 3]\n        //\n        // 1. Item A\n        //   ~1. Item B~ <- Remove item to move\n        //   1. Item C\n        //   2. Item D\n        if (index > item[nestedKey].length - 1) {\n          index -= 1;\n        } // The Index may still not exist after it's fixed because the\n        // index is to move the item below the last item.\n\n\n        if (item[nestedKey][index]) {\n          parent = item;\n          item = _objectSpread({}, item[nestedKey][index]);\n          parent[nestedKey] = pointer(parent[nestedKey], index, item);\n          continue;\n        }\n      }\n\n      if (!item[nestedKey]) {\n        item[nestedKey] = [];\n      }\n\n      parent = item;\n    }\n\n    return {\n      index: index,\n      item: item,\n      parent: parent\n    };\n  }\n\n  function applyPatches() {\n    patches.forEach(function (patch) {\n      switch (patch.op) {\n        case 'add':\n          {\n            var _path2 = patch.path,\n                _value = patch.value;\n            var node = nodeByPath(_path2);\n\n            if (node.parent) {\n              if (node.parent[nestedKey]) {\n                node.parent[nestedKey] = [].concat(_toConsumableArray(node.parent[nestedKey]), _toConsumableArray(_value));\n              } else {\n                node.parent[nestedKey] = _value;\n              }\n            }\n\n            break;\n          }\n        // Applies the operation on the tree, the move is functionally\n        // identical to a \"remove\" operation on the `from` location and\n        // immediately followed by the \"add\" operation at the target\n        // location with the value that was removed.\n\n        case 'move':\n          {\n            var _from = patch.from,\n                _path3 = patch.path;\n            var nodeToRemove = nodeByPath(_from);\n\n            if (nodeToRemove.parent) {\n              nodeToRemove.parent[nestedKey] = nodeToRemove.parent[nestedKey].filter(function (_item, index) {\n                return index !== nodeToRemove.index;\n              });\n            } else {\n              immutableTree = immutableTree.filter(function (_item, index) {\n                return index !== nodeToRemove.index;\n              });\n            }\n\n            var pathToAdd = nodeByPath(_path3); // It has the same parent the index can change\n\n            var isSameParent = _toConsumableArray(_from).slice(0, -1).join('') === _toConsumableArray(_path3).slice(0, -1).join('');\n\n            var index = _path3[_path3.length - 1]; // If moving an item within the same parent and the drop position of\n            // the item is greater than the origin it affects the position\n            // because the item is always removed first, we just fix the position\n            // by decreasing.\n\n            if (isSameParent && nodeToRemove.index < pathToAdd.index) {\n              index -= 1;\n            }\n\n            if (pathToAdd.parent) {\n              pathToAdd.parent[nestedKey] = [].concat(_toConsumableArray(pathToAdd.parent[nestedKey].slice(0, index)), [nodeToRemove.item], _toConsumableArray(pathToAdd.parent[nestedKey].slice(index)));\n            } else {\n              immutableTree = [].concat(_toConsumableArray(immutableTree.slice(0, index)), [nodeToRemove.item], _toConsumableArray(immutableTree.slice(index)));\n            }\n\n            break;\n          }\n\n        case 'remove':\n          {\n            var _path4 = patch.path;\n\n            var _nodeToRemove = nodeByPath(_path4);\n\n            if (_nodeToRemove.parent) {\n              _nodeToRemove.parent[nestedKey] = _nodeToRemove.parent[nestedKey].filter(function (_item, index) {\n                return index !== _nodeToRemove.index;\n              });\n            } else {\n              immutableTree = immutableTree.filter(function (_item, index) {\n                return index !== _nodeToRemove.index;\n              });\n            }\n\n            break;\n          }\n\n        case 'replace':\n          {\n            var _item3 = patch.item,\n                _path5 = patch.path;\n            var nodeToReplace = nodeByPath(_path5);\n\n            if (nodeToReplace.parent) {\n              nodeToReplace.parent[nestedKey] = nodeToReplace.parent[nestedKey].filter(function (_item, index) {\n                return index !== nodeToReplace.index;\n              });\n              nodeToReplace.parent[nestedKey].splice(nodeToReplace.index, 0, _item3);\n            } else {\n              immutableTree.splice(nodeToReplace.index, 1);\n              immutableTree.splice(nodeToReplace.index, 0, _item3);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    });\n    return immutableTree;\n  }\n\n  function produce(patch) {\n    patches.push(patch);\n  }\n\n  return {\n    applyPatches: applyPatches,\n    nodeByPath: nodeByPath,\n    produce: produce\n  };\n}"]}