/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
export interface ITreeViewItemProps extends Omit<React.HTMLAttributes<HTMLLIElement>, 'children'> {
    /**
     * Flag to set the node to the active state.
     */
    active?: boolean;
    /**
     * Property for rendering actions on a Node.
     */
    actions?: React.ReactElement;
    /**
     * Item content.
     */
    children: React.ReactNode;
    /**
     * Flag to define if the item is draggable and dropable.
     */
    draggable?: boolean;
    /**
     * Flag indicating that the component is disabled.
     */
    disabled?: boolean;
    /**
     * Flag to indicate if the item is expandable. This renders the arrow
     * button on the item.
     */
    expandable?: boolean;
    /**
     * @ignore
     */
    isDragging?: boolean;
    /**
     * Flag to remove the visual of the hover over the item.
     */
    noHover?: boolean;
    /**
     * @ignore
     */
    overPosition?: string;
    /**
     * @ignore
     */
    overTarget?: boolean;
}
export declare const TreeViewItem: React.ForwardRefExoticComponent<ITreeViewItemProps & React.RefAttributes<HTMLDivElement>>;
interface ITreeViewItemStackProps extends React.HTMLAttributes<HTMLDivElement> {
    /**
     * Flag to set the node to the active state.
     */
    active?: boolean;
    /**
     * @ignore
     */
    actions?: React.ReactElement;
    /**
     * Item content.
     */
    children: React.ReactNode;
    /**
     * Flag to define if the item is draggable and dropable.
     */
    draggable?: boolean;
    /**
     * Flag indicating that the component is disabled.
     */
    disabled?: boolean;
    /**
     * Flag indicating if Expander is disabled, by default it has the
     * value of the disabled prop.
     */
    expanderDisabled?: boolean;
    /**
     * Flag to indicate if the item is expandable. This renders the arrow
     * button on the item.
     */
    expandable?: boolean;
    /**
     * Flag to remove the visual of the hover over the item.
     */
    noHover?: boolean;
    /**
     * @ignore
     */
    loading?: boolean;
    /**
     * @ignore
     */
    onLoadMore?: () => void;
}
export declare function TreeViewItemStack({ actions, children, disabled, expandable, expanderDisabled, loading, onLoadMore, ...otherProps }: ITreeViewItemStackProps): JSX.Element;
export declare namespace TreeViewItemStack {
    var displayName: string;
}
export {};
