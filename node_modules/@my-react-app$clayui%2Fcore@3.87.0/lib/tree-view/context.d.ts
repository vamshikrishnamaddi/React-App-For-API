/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React, { Key } from 'react';
import type { ChildrenFunction } from './Collection';
import type { ITreeState } from './useTree';
export declare type Icons = {
    open: React.ReactElement;
    close: React.ReactElement;
};
declare type LoadMoreCursor = {
    cursor: unknown;
    items: Array<unknown>;
};
export declare type OnLoadMore<T> = (item: T, cursor?: any) => Promise<Array<any> | undefined> | Promise<LoadMoreCursor | undefined>;
export declare type MoveItemIndex = {
    next: number;
    previous: number;
};
export interface ITreeViewContext<T> extends ITreeState<T> {
    childrenRoot: React.MutableRefObject<ChildrenFunction<Object> | null>;
    dragAndDrop?: boolean;
    expandDoubleClick?: boolean;
    expandOnCheck?: boolean;
    expanderClassName?: string;
    expanderIcons?: Icons;
    nestedKey?: string;
    onItemMove?: (item: T, parentItem: T, index: MoveItemIndex) => boolean;
    onItemHover?: (item: T, parentItem: T, index: MoveItemIndex) => void;
    onLoadMore?: OnLoadMore<T>;
    onSelect?: (item: T) => void;
    onRenameItem?: (item: T) => Promise<any>;
    rootRef: React.RefObject<HTMLUListElement>;
    selectionMode?: 'single' | 'multiple' | 'multiple-recursive' | null;
    showExpanderOnHover?: boolean;
}
export declare const TreeViewContext: React.Context<ITreeViewContext<any>>;
export declare function useTreeViewContext(): ITreeViewContext<unknown>;
declare type SelectionToggleOptions = {
    selectionMode?: 'single' | 'multiple' | 'multiple-recursive' | null;
    parentSelection?: boolean;
};
export declare type Selection = {
    toggle: (key: Key, options?: SelectionToggleOptions) => void;
    has: (key: Key) => boolean;
};
export declare type Expand = {
    toggle: (key: Key) => void;
    has: (key: Key) => boolean;
};
export declare type LoadMore = {
    get: (key: Key) => any;
    loadMore: <T>(id: React.Key, item: T, willToggle?: boolean) => Promise<void> | undefined;
};
export declare function useAPI(): [Selection, Expand, LoadMore];
export {};
