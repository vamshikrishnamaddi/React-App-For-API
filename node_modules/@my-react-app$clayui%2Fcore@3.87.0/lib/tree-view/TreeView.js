"use strict";

Liferay.Loader.define("@my-react-app$clayui/core@3.87.0/lib/tree-view/TreeView", ['module', 'exports', 'require', '@my-react-app$clayui/shared', 'my-react-app$classnames', 'my-react-app$react', 'my-react-app$react-dnd', 'my-react-app$react-dnd-html5-backend', './Collection', './DragLayer', './TreeViewGroup', './TreeViewItem', './context', './useTree'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TreeView = TreeView;

    var _shared = require("@my-react-app$clayui/shared");

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireWildcard(require("my-react-app$react"));

    var _reactDnd = require("my-react-app$react-dnd");

    var _reactDndHtml5Backend = require("my-react-app$react-dnd-html5-backend");

    var _Collection = require("./Collection");

    var _DragLayer = _interopRequireDefault(require("./DragLayer"));

    var _TreeViewGroup = require("./TreeViewGroup");

    var _TreeViewItem = require("./TreeViewItem");

    var _context = require("./context");

    var _useTree = require("./useTree");

    var _excluded = ["children", "className", "defaultExpandedKeys", "defaultItems", "defaultSelectedKeys", "displayType", "dragAndDrop", "dragAndDropContext", "expandDoubleClick", "expandedKeys", "expanderClassName", "expanderIcons", "expandOnCheck", "indeterminate", "itemNameKey", "items", "nestedKey", "onExpandedChange", "onItemHover", "onItemMove", "onItemsChange", "onLoadMore", "onRenameItem", "onSelect", "onSelectionChange", "selectedKeys", "selectionHydrationMode", "selectionMode", "showExpanderOnHover"];

    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }

    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {
        return cache.get(obj);
      }var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }newObj.default = obj;if (cache) {
        cache.set(obj, newObj);
      }return newObj;
    }

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);enumerableOnly && (symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
      }return keys;
    }

    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }return target;
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }return obj;
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    function TreeView(_ref) {
      var _classNames;

      var children = _ref.children,
          className = _ref.className,
          defaultExpandedKeys = _ref.defaultExpandedKeys,
          defaultItems = _ref.defaultItems,
          defaultSelectedKeys = _ref.defaultSelectedKeys,
          _ref$displayType = _ref.displayType,
          displayType = _ref$displayType === void 0 ? 'light' : _ref$displayType,
          _ref$dragAndDrop = _ref.dragAndDrop,
          dragAndDrop = _ref$dragAndDrop === void 0 ? false : _ref$dragAndDrop,
          _ref$dragAndDropConte = _ref.dragAndDropContext,
          dragAndDropContext = _ref$dragAndDropConte === void 0 ? window : _ref$dragAndDropConte,
          _ref$expandDoubleClic = _ref.expandDoubleClick,
          expandDoubleClick = _ref$expandDoubleClic === void 0 ? false : _ref$expandDoubleClic,
          expandedKeys = _ref.expandedKeys,
          expanderClassName = _ref.expanderClassName,
          expanderIcons = _ref.expanderIcons,
          _ref$expandOnCheck = _ref.expandOnCheck,
          expandOnCheck = _ref$expandOnCheck === void 0 ? false : _ref$expandOnCheck,
          _ref$indeterminate = _ref.indeterminate,
          indeterminate = _ref$indeterminate === void 0 ? true : _ref$indeterminate,
          _ref$itemNameKey = _ref.itemNameKey,
          itemNameKey = _ref$itemNameKey === void 0 ? 'name' : _ref$itemNameKey,
          items = _ref.items,
          _ref$nestedKey = _ref.nestedKey,
          nestedKey = _ref$nestedKey === void 0 ? 'children' : _ref$nestedKey,
          onExpandedChange = _ref.onExpandedChange,
          onItemHover = _ref.onItemHover,
          onItemMove = _ref.onItemMove,
          onItemsChange = _ref.onItemsChange,
          onLoadMore = _ref.onLoadMore,
          onRenameItem = _ref.onRenameItem,
          onSelect = _ref.onSelect,
          onSelectionChange = _ref.onSelectionChange,
          selectedKeys = _ref.selectedKeys,
          _ref$selectionHydrati = _ref.selectionHydrationMode,
          selectionHydrationMode = _ref$selectionHydrati === void 0 ? 'hydrate-first' : _ref$selectionHydrati,
          _ref$selectionMode = _ref.selectionMode,
          selectionMode = _ref$selectionMode === void 0 ? 'single' : _ref$selectionMode,
          _ref$showExpanderOnHo = _ref.showExpanderOnHover,
          showExpanderOnHover = _ref$showExpanderOnHo === void 0 ? true : _ref$showExpanderOnHo,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      var rootRef = _react.default.useRef(null);

      var state = (0, _useTree.useTree)({
        defaultExpandedKeys: defaultExpandedKeys,
        defaultItems: defaultItems,
        defaultSelectedKeys: defaultSelectedKeys,
        expandedKeys: expandedKeys,
        indeterminate: indeterminate,
        items: items,
        nestedKey: nestedKey,
        onExpandedChange: onExpandedChange,
        onItemsChange: onItemsChange,
        onSelectionChange: onSelectionChange,
        selectedKeys: selectedKeys,
        selectionHydrationMode: selectionHydrationMode,
        selectionMode: selectionMode
      });
      var childrenRootRef = (0, _react.useRef)(typeof children === 'function' ? children : null);

      var context = _objectSpread({
        childrenRoot: childrenRootRef,
        dragAndDrop: dragAndDrop,
        expandDoubleClick: expandDoubleClick,
        expandOnCheck: expandOnCheck,
        expanderClassName: expanderClassName,
        expanderIcons: expanderIcons,
        nestedKey: nestedKey,
        onItemHover: onItemHover,
        onItemMove: onItemMove,
        onLoadMore: onLoadMore,
        onRenameItem: onRenameItem,
        onSelect: onSelect,
        rootRef: rootRef,
        selectionMode: selectionMode,
        showExpanderOnHover: showExpanderOnHover
      }, state);

      return (/*#__PURE__*/_react.default.createElement(_shared.FocusScope, null, /*#__PURE__*/_react.default.createElement("ul", _extends({}, otherProps, {
          className: (0, _classnames.default)('treeview show-quick-actions-on-hover', className, (_classNames = {}, _defineProperty(_classNames, "treeview-".concat(displayType), displayType), _defineProperty(_classNames, 'show-component-expander-on-hover', showExpanderOnHover), _classNames)),
          ref: rootRef,
          role: "tree"
        }), /*#__PURE__*/_react.default.createElement(_reactDnd.DndProvider, {
          backend: _reactDndHtml5Backend.HTML5Backend,
          context: dragAndDropContext
        }, /*#__PURE__*/_react.default.createElement(_context.TreeViewContext.Provider, {
          value: context
        }, /*#__PURE__*/_react.default.createElement(_Collection.Collection, {
          items: state.items
        }, children), /*#__PURE__*/_react.default.createElement(_DragLayer.default, {
          itemNameKey: itemNameKey
        })))))
      );
    }

    TreeView.Group = _TreeViewGroup.TreeViewGroup;
    TreeView.Item = _TreeViewItem.TreeViewItem;
    TreeView.ItemStack = _TreeViewItem.TreeViewItemStack;
  }
});
//# sourceMappingURL=TreeView.js.map