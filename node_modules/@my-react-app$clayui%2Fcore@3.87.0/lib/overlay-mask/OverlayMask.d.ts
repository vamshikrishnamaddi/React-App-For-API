/**
 * SPDX-FileCopyrightText: Â© 2022 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
declare type Bounds = {
    height: number;
    width: number;
    x: number;
    y: number;
};
declare type Props<T> = {
    /**
     * Sets the current value of bounds to define the highlight area (controlled).
     */
    bounds?: Bounds;
    /**
     * Sets the element that will receive the highlight.
     */
    children?: React.ReactNode | ((ref: React.RefObject<T>) => React.ReactNode);
    /**
     * Callback is called when the overlay is clicked.
     */
    onClick?: (event: React.MouseEvent<SVGRectElement>) => void;
    /**
     * Set the highlight padding.
     */
    padding?: number;
    /**
     * Sets the current visibility of the overlay.
     */
    visible?: boolean;
    /**
     * Sets the default value of bounds (uncontrolled).
     */
    defaultBounds?: Bounds;
    /**
     * Callback is called when the bounds changes (controlled).
     */
    onBoundsChange?: InternalDispatch<Bounds>;
};
export declare function OverlayMask<T>({ defaultBounds, bounds, children, onClick, onBoundsChange, padding, visible, }: Props<T>): JSX.Element;
export {};
