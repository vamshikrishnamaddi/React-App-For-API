"use strict";

Liferay.Loader.define("@my-react-app$clayui/core@3.87.0/lib/picker/Picker", ['module', 'exports', 'require', '@my-react-app$clayui/shared', 'my-react-app$classnames', 'my-react-app$react', '../collection', '../live-announcer', './context'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Picker = Picker;

    var _shared = require("@my-react-app$clayui/shared");

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireWildcard(require("my-react-app$react"));

    var _collection = require("../collection");

    var _liveAnnouncer = require("../live-announcer");

    var _context = require("./context");

    var _excluded = ["UNSAFE_menuClassName", "active", "as", "children", "className", "defaultActive", "defaultSelectedKey", "direction", "disabled", "id", "items", "messages", "native", "onActiveChange", "onSelectionChange", "placeholder", "selectedKey"];

    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }

    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { default: obj };
      }var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {
        return cache.get(obj);
      }var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }newObj.default = obj;if (cache) {
        cache.set(obj, newObj);
      }return newObj;
    }

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }

    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }return arr2;
    }

    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];if (_i == null) return;var _arr = [];var _n = true;var _d = false;var _s, _e;try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;_e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }return _arr;
    }

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    function Picker(_ref) {
      var UNSAFE_menuClassName = _ref.UNSAFE_menuClassName,
          externalActive = _ref.active,
          _ref$as = _ref.as,
          As = _ref$as === void 0 ? 'button' : _ref$as,
          children = _ref.children,
          className = _ref.className,
          _ref$defaultActive = _ref.defaultActive,
          defaultActive = _ref$defaultActive === void 0 ? false : _ref$defaultActive,
          defaultSelectedKey = _ref.defaultSelectedKey,
          _ref$direction = _ref.direction,
          direction = _ref$direction === void 0 ? 'bottom' : _ref$direction,
          disabled = _ref.disabled,
          id = _ref.id,
          items = _ref.items,
          _ref$messages = _ref.messages,
          messages = _ref$messages === void 0 ? {
        itemDescribedby: 'You are currently on a text element, inside of a list box.',
        itemSelected: '{0}, selected'
      } : _ref$messages,
          _ref$native = _ref.native,
          native = _ref$native === void 0 ? false : _ref$native,
          onActiveChange = _ref.onActiveChange,
          onSelectionChange = _ref.onSelectionChange,
          _ref$placeholder = _ref.placeholder,
          placeholder = _ref$placeholder === void 0 ? 'Select an option' : _ref$placeholder,
          externalSelectedKey = _ref.selectedKey,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      var _useInternalState = (0, _shared.useInternalState)({
        defaultName: 'defaultActive',
        defaultValue: defaultActive,
        handleName: 'onActiveChange',
        name: 'active',
        onChange: onActiveChange,
        value: externalActive
      }),
          _useInternalState2 = _slicedToArray(_useInternalState, 2),
          active = _useInternalState2[0],
          setActive = _useInternalState2[1];

      var _useInternalState3 = (0, _shared.useInternalState)({
        defaultName: 'defaultSelectedKey',
        defaultValue: defaultSelectedKey,
        handleName: 'onSelectionChange',
        name: 'selectedKey',
        onChange: onSelectionChange,
        value: externalSelectedKey
      }),
          _useInternalState4 = _slicedToArray(_useInternalState3, 2),
          selectedKey = _useInternalState4[0],
          setSelectedKey = _useInternalState4[1]; // We initialize the collection in the picker and then pass it down so the
      // collection can be cached even before the listbox is not mounted.


      var collection = (0, _collection.useCollection)({
        children: children,
        items: items,
        suppressTextValueWarning: false
      });

      var _useState = (0, _react.useState)(function () {
        return typeof selectedKey !== 'undefined' ? String(selectedKey) : collection.getFirstItem().key;
      }),
          _useState2 = _slicedToArray(_useState, 2),
          activeDescendant = _useState2[0],
          setActiveDescendant = _useState2[1];

      var ariaControls = (0, _shared.useId)();
      var triggerRef = (0, _react.useRef)(null);
      var menuRef = (0, _react.useRef)(null);
      var announcerAPI = (0, _react.useRef)(null);

      var _useInteractionFocus = (0, _shared.useInteractionFocus)(),
          isFocusVisible = _useInteractionFocus.isFocusVisible;

      (0, _shared.useOverlayPosition)({
        alignmentByViewport: true,
        alignmentPosition: direction === 'bottom' ? 5 : 7,
        autoBestAlign: true,
        isOpen: active,
        ref: menuRef,
        triggerRef: triggerRef
      }, [active, children]);
      var isMobile = (0, _shared.useIsMobileDevice)();

      var _useNavigation = (0, _shared.useNavigation)({
        activation: 'manual',
        active: activeDescendant,
        containerRef: menuRef,
        onNavigate: function onNavigate(tab) {
          return setActiveDescendant(tab.getAttribute('id'));
        },
        orientation: 'vertical',
        typeahead: true,
        visible: active
      }),
          accessibilityFocus = _useNavigation.accessibilityFocus,
          navigationProps = _useNavigation.navigationProps;

      var onPress = (0, _react.useCallback)(function () {
        if (menuRef.current && activeDescendant) {
          var item = document.getElementById(activeDescendant);

          if (item) {
            item.click();
          }
        }
      }, [activeDescendant]); // Apple devices with VoiceOver do not announce correctly when the menu is
      // opened. There is a bug with `aria-activedescendant` when the element is
      // not an input and uses `aria-controls` or `aria-owns`.
      // https://github.com/liferay/clay/issues/5281#issuecomment-1399151900

      (0, _react.useEffect)(function () {
        if (announcerAPI.current && (0, _shared.isAppleDevice)() && activeDescendant && active) {
          var value = collection.getItem(activeDescendant);
          announcerAPI.current.announce(selectedKey === activeDescendant ? (0, _shared.sub)(messages.itemSelected, [value]) : "".concat(value)); // Announces item description with delay to replace combobox description.

          setTimeout(function () {
            announcerAPI.current.announce(messages.itemDescribedby);
          }, 1000);
        }
      }, [active]);
      var context = {
        activeDescendant: activeDescendant,
        isMobile: isMobile && native,
        onActiveDescendant: setActiveDescendant,
        onSelectionChange: function onSelectionChange(key) {
          triggerRef.current.focus();
          setActiveDescendant(String(key));
          setSelectedKey(key);
          setActive(false);
        },
        selectedKey: selectedKey
      };

      if (context.isMobile) {
        return (/*#__PURE__*/_react.default.createElement("select", _extends({}, otherProps, {
            className: (0, _classnames.default)('form-control form-control-select form-control-select-secondary', className),
            onChange: function onChange(event) {
              return setSelectedKey(event.target.value);
            },
            value: selectedKey
          }), /*#__PURE__*/_react.default.createElement(_context.PickerContext.Provider, {
            value: context
          }, /*#__PURE__*/_react.default.createElement(_collection.Collection, {
            collection: collection
          })))
        );
      }

      return (/*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_liveAnnouncer.LiveAnnouncer, {
          ref: announcerAPI
        }), /*#__PURE__*/_react.default.createElement(As, _extends({}, otherProps, {
          "aria-activedescendant": active ? activeDescendant : '',
          "aria-controls": active && (0, _shared.isAppleDevice)() ? ariaControls : undefined,
          "aria-expanded": active,
          "aria-haspopup": "listbox",
          "aria-owns": active && !(0, _shared.isAppleDevice)() ? ariaControls : undefined,
          className: (0, _classnames.default)('form-control form-control-select form-control-select-secondary', className, {
            show: active
          }),
          disabled: disabled,
          id: id,
          onClick: function onClick() {
            return setActive(!active);
          },
          onKeyDown: function onKeyDown(event) {
            switch (event.key) {
              case _shared.Keys.Enter:
              case _shared.Keys.Spacebar:
                {
                  event.preventDefault();
                  setActive(true);

                  if (active && activeDescendant) {
                    onPress();
                  }

                  break;
                }

              case _shared.Keys.Tab:
                onPress();
                break;

              case _shared.Keys.Home:
              case _shared.Keys.End:
                {
                  if (!active) {
                    setActive(true);
                  }

                  navigationProps.onKeyDown(event);
                  break;
                }

              case _shared.Keys.Up:
              case _shared.Keys.Down:
                {
                  if (active && event.altKey && event.key === _shared.Keys.Up) {
                    event.stopPropagation();
                    onPress();
                    setActive(false);
                    return;
                  }

                  if (!active) {
                    return setActive(true);
                  }

                  navigationProps.onKeyDown(event);
                  break;
                }

              case 'PageUp':
              case 'PageDown':
                {
                  var _list;

                  if (!active) {
                    return;
                  }

                  event.preventDefault();
                  var list = (0, _shared.getFocusableList)(menuRef);
                  var position = list.findIndex(function (element) {
                    return element.getAttribute('id') === activeDescendant;
                  });

                  if (position === -1) {
                    break;
                  }

                  var option = (_list = list[event.key === 'PageUp' ? position - 10 : position + 10]) !== null && _list !== void 0 ? _list : list[event.key === 'PageUp' ? 0 : list.length - 1];
                  accessibilityFocus(option);
                  break;
                }

              default:
                {
                  if ((0, _shared.isTypeahead)(event)) {
                    setActive(true);
                  }

                  navigationProps.onKeyDown(event);
                  break;
                }
            }
          },
          ref: triggerRef,
          role: "combobox",
          tabIndex: 0
        }), selectedKey ? collection.getItem(selectedKey) : placeholder), active && /*#__PURE__*/_react.default.createElement(_shared.Overlay, {
          isCloseOnInteractOutside: true,
          isKeyboardDismiss: true,
          isOpen: true,
          menuClassName: UNSAFE_menuClassName,
          menuRef: menuRef,
          onClose: function onClose(action) {
            if (isFocusVisible() && activeDescendant && action === 'blur') {
              onPress();
            } else {
              var _key = String(selectedKey) === 'undefined' ? collection.getFirstItem().key : String(selectedKey);

              if (_key !== activeDescendant) {
                setActiveDescendant(_key);
              }
            }

            setActive(false);
          },
          portalRef: menuRef,
          suppress: [triggerRef, menuRef],
          triggerRef: triggerRef
        }, /*#__PURE__*/_react.default.createElement("div", {
          className: "dropdown-menu dropdown-menu-indicator-start dropdown-menu-select show",
          ref: menuRef,
          role: "presentation"
        }, /*#__PURE__*/_react.default.createElement("ul", {
          "aria-labelledby": otherProps['aria-labelledby'],
          className: "inline-scroller list-unstyled",
          id: ariaControls,
          onFocus: function onFocus() {
            var _triggerRef$current;

            return (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.focus();
          },
          role: "listbox",
          tabIndex: -1
        }, /*#__PURE__*/_react.default.createElement(_context.PickerContext.Provider, {
          value: context
        }, /*#__PURE__*/_react.default.createElement(_collection.Collection, {
          collection: collection
        }))))))
      );
    }
  }
});
//# sourceMappingURL=Picker.js.map