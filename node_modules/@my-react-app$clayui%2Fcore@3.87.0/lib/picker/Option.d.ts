/**
 * SPDX-FileCopyrightText: Â© 2022 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
declare type Props = {
    /**
     * The global aria-describedby attribute identifies the element (or elements)
     * that describes the element on which the attribute is set.
     */
    'aria-describedby'?: string;
    /**
     * The `aria-label` attribute defines a string value that labels an interactive
     * element.
     */
    'aria-label'?: string;
    /**
     * The `aria-labelledby` attribute identifies the element (or elements) that
     * labels the element it is applied to.
     */
    'aria-labelledby'?: string;
    /**
     * Sets the number or position in the current set of listitems
     * or treeitems when not all items are present in the DOM.
     */
    'aria-posinset'?: number;
    /**
     * Sets the number of items in the current set of listitems
     * or treeitems when not all items in the set are present in the DOM.
     */
    'aria-setsize'?: number;
    /**
     * The contents of the component.
     */
    children?: React.ReactNode;
    /**
     * Flag that indicates if option is disabled.
     */
    disabled?: boolean;
    /**
     * Internal property.
     * @ignore
     */
    keyValue?: React.Key;
    /**
     * Sets a text value if the component's content is not plain text. This value
     * is used in the combobox element to show the selected option.
     */
    textValue?: string;
};
export declare function Option({ 'aria-describedby': ariaDescribedby, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, 'aria-posinset': ariaPosInset, 'aria-setsize': ariaSetSize, children, disabled, keyValue, textValue, }: Props): JSX.Element;
export declare namespace Option {
    var passthroughKey: boolean;
    var displayName: string;
}
export {};
