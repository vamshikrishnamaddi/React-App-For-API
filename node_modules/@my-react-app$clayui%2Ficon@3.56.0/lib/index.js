"use strict";

Liferay.Loader.define("@my-react-app$clayui/icon@3.56.0/lib/index", ['module', 'exports', 'require', 'my-react-app$classnames', 'my-react-app$react', 'my-react-app$warning'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.ClayIconSpriteContext = void 0;

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireDefault(require("my-react-app$react"));

    var _warning = _interopRequireDefault(require("my-react-app$warning"));

    var _excluded = ["className", "spritemap", "symbol"];

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    var ClayIconSpriteContext = /*#__PURE__*/_react.default.createContext('');

    exports.ClayIconSpriteContext = ClayIconSpriteContext;

    var ClayIcon = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
      var className = _ref.className,
          spritemap = _ref.spritemap,
          symbol = _ref.symbol,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      var spriteMapVal = _react.default.useContext(ClayIconSpriteContext);

      if (spritemap) {
        spriteMapVal = spritemap;
      }

      void 0;
      return (/*#__PURE__*/_react.default.createElement("svg", _extends({}, otherProps, {
          className: (0, _classnames.default)("lexicon-icon lexicon-icon-".concat(symbol), className),
          key: symbol,
          ref: ref,
          role: "presentation"
        }), /*#__PURE__*/_react.default.createElement("use", {
          xlinkHref: "".concat(spriteMapVal, "#").concat(symbol)
        }))
      );
    });

    ClayIcon.displayName = 'ClayIcon';
    var _default = ClayIcon;
    exports.default = _default;
  }
});
//# sourceMappingURL=index.js.map