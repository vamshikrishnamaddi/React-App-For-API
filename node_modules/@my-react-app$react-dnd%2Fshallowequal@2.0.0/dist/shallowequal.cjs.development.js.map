{"version":3,"sources":["../src/index.ts"],"names":["shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","Object","keysB","bHasOwnProperty","idx","key","valueA","valueB"],"mappings":";;;;;;aAAgBA,Y,CACdC,I,EACAC,I,EACAC,O,EACAC,c,EAAAA;UAEIC,gBAAgBF,UAChBA,QAAAA,IAAAA,CAAAA,cAAAA,EAAAA,IAAAA,EADuB,IACvBA,CADgBA,GAEhB,KAFJ,C;;UAGIE,kBAAkB,KAAtB,C,EAA8B;eACrB,CAAC,CAAR,a;;;UAGEJ,SAAJ,I,EAAmB;eACjB,I;;;UAGE,OAAA,IAAA,KAAA,QAAA,IAA4B,CAA5B,IAAA,IAAqC,OAAA,IAAA,KAArC,QAAA,IAAiE,CAArE,I,EAA4E;eAC1E,K;;;UAGEK,QAAQC,OAAAA,IAAAA,CAAZ,IAAYA,C;UACRC,QAAQD,OAAAA,IAAAA,CAAZ,IAAYA,C;;UAERD,MAAAA,MAAAA,KAAiBE,MAArB,M,EAAmC;eACjC,K;;;UAGEC,kBAAkBF,OAAAA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAtB,IAAsBA,C,CAxBtBH,CAwBA;;WAGK,IAAIM,MAAT,C,EAAkBA,MAAMJ,MAAxB,M,EAAA,K,EAA6C;YACvCK,MAAML,MAAV,GAAUA,C;;YAEN,CAACG,gBAAL,GAAKA,C,EAAsB;iBACzB,K;;;YAGEG,SAAUX,KAAd,GAAcA,C;YACVY,SAAUX,KAAd,GAAcA,C;AAEdG,wBAAgBF,UACZA,QAAAA,IAAAA,CAAAA,cAAAA,EAAAA,MAAAA,EAAAA,MAAAA,EADmB,GACnBA,CADYA,GAEZ,KAFJE,CAAAA;;YAKEA,kBAAAA,KAAAA,IACCA,kBAAkB,KAAlBA,CAAAA,IAA4BO,WAF/B,M,EAGE;iBACA,K;;;;aAIJ,I","sourcesContent":["export function shallowEqual<T>(\n  objA: T,\n  objB: T,\n  compare?: (a: T, b: T, key?: string) => boolean | void,\n  compareContext?: any\n) {\n  var compareResult = compare\n    ? compare.call(compareContext, objA, objB)\n    : void 0;\n  if (compareResult !== void 0) {\n    return !!compareResult;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = (objA as any)[key];\n    var valueB = (objB as any)[key];\n\n    compareResult = compare\n      ? compare.call(compareContext, valueA, valueB, key)\n      : void 0;\n\n    if (\n      compareResult === false ||\n      (compareResult === void 0 && valueA !== valueB)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"]}