{"version":3,"sources":["NativeDragSource.js"],"names":["NativeDragSource","constructor","config","item","initializeExposedProperties","Object","keys","exposeProperties","forEach","property","defineProperty","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag"],"mappings":";;;;AAAA,eAAO,MAAMA,gBAAN,CAAuB;AAC1BC,wBAAYC,MAAZ,EAAoB;AAChB,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKC,IAAL,GAAY,EAAZ;AACA,qBAAKC,2BAAL;AACH;AACDA,0CAA8B;AAC1BC,uBAAOC,IAAP,CAAY,KAAKJ,MAAL,CAAYK,gBAAxB,EAA0CC,OAA1C,CAAmDC,QAAD,IAAc;AAC5DJ,2BAAOK,cAAP,CAAsB,KAAKP,IAA3B,EAAiCM,QAAjC,EAA2C;AACvCE,sCAAc,IADyB;AAEvCC,oCAAY,IAF2B;AAGvCC,8BAAM;AACF;AACAC,oCAAQC,IAAR,CAAc,kCAAiCN,QAAS,yBAAxD;AACA,mCAAO,IAAP;AACH;AAPsC,qBAA3C;AASH,iBAVD;AAWH;AACDO,6BAAiBC,YAAjB,EAA+B;AAC3B,oBAAIA,YAAJ,EAAkB;AACd,0BAAMC,gBAAgB,EAAtB;AACAb,2BAAOC,IAAP,CAAY,KAAKJ,MAAL,CAAYK,gBAAxB,EAA0CC,OAA1C,CAAmDC,QAAD,IAAc;AAC5DS,sCAAcT,QAAd,IAA0B;AACtBU,mCAAO,KAAKjB,MAAL,CAAYK,gBAAZ,CAA6BE,QAA7B,EAAuCQ,YAAvC,EAAqD,KAAKf,MAAL,CAAYkB,YAAjE,CADe;AAEtBT,0CAAc,IAFQ;AAGtBC,wCAAY;AAHU,yBAA1B;AAKH,qBAND;AAOAP,2BAAOgB,gBAAP,CAAwB,KAAKlB,IAA7B,EAAmCe,aAAnC;AACH;AACJ;AACDI,sBAAU;AACN,uBAAO,IAAP;AACH;AACDC,wBAAY;AACR,uBAAO,KAAKpB,IAAZ;AACH;AACDqB,uBAAWC,OAAX,EAAoBC,MAApB,EAA4B;AACxB,uBAAOA,WAAWD,QAAQE,WAAR,EAAlB;AACH;AACDC,sBAAU;AACN;AACH;AA3CyB","file":"NativeDragSource.js","sourcesContent":["export class NativeDragSource {\n    constructor(config) {\n        this.config = config;\n        this.item = {};\n        this.initializeExposedProperties();\n    }\n    initializeExposedProperties() {\n        Object.keys(this.config.exposeProperties).forEach((property) => {\n            Object.defineProperty(this.item, property, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    // eslint-disable-next-line no-console\n                    console.warn(`Browser doesn't allow reading \"${property}\" until the drop event.`);\n                    return null;\n                },\n            });\n        });\n    }\n    loadDataTransfer(dataTransfer) {\n        if (dataTransfer) {\n            const newProperties = {};\n            Object.keys(this.config.exposeProperties).forEach((property) => {\n                newProperties[property] = {\n                    value: this.config.exposeProperties[property](dataTransfer, this.config.matchesTypes),\n                    configurable: true,\n                    enumerable: true,\n                };\n            });\n            Object.defineProperties(this.item, newProperties);\n        }\n    }\n    canDrag() {\n        return true;\n    }\n    beginDrag() {\n        return this.item;\n    }\n    isDragging(monitor, handle) {\n        return handle === monitor.getSourceId();\n    }\n    endDrag() {\n        // empty\n    }\n}\n"]}