{"version":3,"sources":["index.js"],"names":["findCacheDir","require","Git","filenamify","copy","getUser","fs","globby","path","util","log","debuglog","getCacheDir","optPath","dir","name","join","exports","getRepo","options","repo","Promise","resolve","git","process","cwd","getRemoteUrl","remote","defaults","dest","add","depth","dotfiles","branch","src","remove","push","history","message","silent","publish","basePath","config","callback","Object","assign","only","err","done","err2","statSync","isDirectory","Error","reject","files","sync","dot","filter","file","Array","isArray","length","repoUrl","userPromise","user","then","clone","url","clean","fetch","checkout","deleteRef","map","rm","beforeAdd","exec","email","commit","tag","catch","error","removeSync"],"mappings":"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","file":"index.js","sourcesContent":["const findCacheDir = require('find-cache-dir');\nconst Git = require('./git.js');\nconst filenamify = require('filenamify');\nconst copy = require('./util.js').copy;\nconst getUser = require('./util.js').getUser;\nconst fs = require('fs-extra');\nconst globby = require('globby');\nconst path = require('path');\nconst util = require('util');\n\nconst log = util.debuglog('gh-pages');\n\n/**\n * Get the cache directory.\n * @param {string} [optPath] Optional path.\n * @return {string} The full path to the cache directory.\n */\nfunction getCacheDir(optPath) {\n  const dir = findCacheDir({name: 'gh-pages'});\n  if (!optPath) {\n    return dir;\n  }\n\n  return path.join(dir, filenamify(optPath));\n}\nexports.getCacheDir = getCacheDir;\n\nfunction getRepo(options) {\n  if (options.repo) {\n    return Promise.resolve(options.repo);\n  } else {\n    const git = new Git(process.cwd(), options.git);\n    return git.getRemoteUrl(options.remote);\n  }\n}\n\nexports.defaults = {\n  dest: '.',\n  add: false,\n  git: 'git',\n  depth: 1,\n  dotfiles: false,\n  branch: 'gh-pages',\n  remote: 'origin',\n  src: '**/*',\n  remove: '.',\n  push: true,\n  history: true,\n  message: 'Updates',\n  silent: false,\n};\n\n/**\n * Push a git branch to a remote (pushes gh-pages by default).\n * @param {string} basePath The base path.\n * @param {object} config Publish options.\n * @param {Function} callback Callback.\n * @return {Promise} A promise.\n */\nexports.publish = function publish(basePath, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = {};\n  }\n\n  const options = Object.assign({}, exports.defaults, config);\n\n  // For backward compatibility before fixing #334\n  if (options.only) {\n    options.remove = options.only;\n  }\n\n  if (!callback) {\n    callback = function (err) {\n      if (err) {\n        log(err.message);\n      }\n    };\n  }\n\n  function done(err) {\n    try {\n      callback(err);\n    } catch (err2) {\n      log('Publish callback threw: %s', err2.message);\n    }\n  }\n\n  try {\n    if (!fs.statSync(basePath).isDirectory()) {\n      const err = new Error('The \"base\" option must be an existing directory');\n      done(err);\n      return Promise.reject(err);\n    }\n  } catch (err) {\n    done(err);\n    return Promise.reject(err);\n  }\n\n  const files = globby\n    .sync(options.src, {\n      cwd: basePath,\n      dot: options.dotfiles,\n    })\n    .filter((file) => {\n      return !fs.statSync(path.join(basePath, file)).isDirectory();\n    });\n\n  if (!Array.isArray(files) || files.length === 0) {\n    done(\n      new Error('The pattern in the \"src\" property didn\\'t match any files.')\n    );\n    return;\n  }\n\n  let repoUrl;\n  let userPromise;\n  if (options.user) {\n    userPromise = Promise.resolve(options.user);\n  } else {\n    userPromise = getUser();\n  }\n  return userPromise.then((user) =>\n    getRepo(options)\n      .then((repo) => {\n        repoUrl = repo;\n        const clone = getCacheDir(repo);\n        log('Cloning %s into %s', repo, clone);\n        return Git.clone(repo, clone, options.branch, options);\n      })\n      .then((git) => {\n        return git.getRemoteUrl(options.remote).then((url) => {\n          if (url !== repoUrl) {\n            const message =\n              'Remote url mismatch.  Got \"' +\n              url +\n              '\" ' +\n              'but expected \"' +\n              repoUrl +\n              '\" in ' +\n              git.cwd +\n              '.  Try running the `gh-pages-clean` script first.';\n            throw new Error(message);\n          }\n          return git;\n        });\n      })\n      .then((git) => {\n        // only required if someone mucks with the checkout between builds\n        log('Cleaning');\n        return git.clean();\n      })\n      .then((git) => {\n        log('Fetching %s', options.remote);\n        return git.fetch(options.remote);\n      })\n      .then((git) => {\n        log('Checking out %s/%s ', options.remote, options.branch);\n        return git.checkout(options.remote, options.branch);\n      })\n      .then((git) => {\n        if (!options.history) {\n          return git.deleteRef(options.branch);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.add) {\n          return git;\n        }\n\n        log('Removing files');\n        const files = globby\n          .sync(options.remove, {\n            cwd: path.join(git.cwd, options.dest),\n          })\n          .map((file) => path.join(options.dest, file));\n        if (files.length > 0) {\n          return git.rm(files);\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        log('Copying files');\n        return copy(files, basePath, path.join(git.cwd, options.dest)).then(\n          function () {\n            return git;\n          }\n        );\n      })\n      .then((git) => {\n        return Promise.resolve(\n          options.beforeAdd && options.beforeAdd(git)\n        ).then(() => git);\n      })\n      .then((git) => {\n        log('Adding all');\n        return git.add('.');\n      })\n      .then((git) => {\n        if (!user) {\n          return git;\n        }\n        return git.exec('config', 'user.email', user.email).then(() => {\n          if (!user.name) {\n            return git;\n          }\n          return git.exec('config', 'user.name', user.name);\n        });\n      })\n      .then((git) => {\n        log('Committing');\n        return git.commit(options.message);\n      })\n      .then((git) => {\n        if (options.tag) {\n          log('Tagging');\n          return git.tag(options.tag).catch((error) => {\n            // tagging failed probably because this tag alredy exists\n            log(error);\n            log('Tagging failed, continuing');\n            return git;\n          });\n        } else {\n          return git;\n        }\n      })\n      .then((git) => {\n        if (options.push) {\n          log('Pushing');\n          return git.push(options.remote, options.branch, !options.history);\n        } else {\n          return git;\n        }\n      })\n      .then(\n        () => done(),\n        (error) => {\n          if (options.silent) {\n            error = new Error(\n              'Unspecified error (run without silent option for detail)'\n            );\n          }\n          done(error);\n        }\n      )\n  );\n};\n\n/**\n * Clean the cache directory.\n */\nexports.clean = function clean() {\n  fs.removeSync(getCacheDir());\n};\n"]}