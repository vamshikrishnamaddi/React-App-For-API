{"version":3,"sources":["wrappy.js"],"names":["module","exports","wrappy","fn","cb","TypeError","Object","keys","forEach","k","wrapper","args","Array","arguments","length","i","ret","apply"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACAA,WAAOC,OAAP,GAAiBC,MAAjB;AACA,aAASA,MAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AACvB,UAAID,MAAMC,EAAV,EAAc,OAAOF,OAAOC,EAAP,EAAWC,EAAX,CAAP;;AAEd,UAAI,OAAOD,EAAP,KAAc,UAAlB,EACE,MAAM,IAAIE,SAAJ,CAAc,uBAAd,CAAN;;AAEFC,aAAOC,IAAP,CAAYJ,EAAZ,EAAgBK,OAAhB,CAAwB,UAAUC,CAAV,EAAa;AACnCC,gBAAQD,CAAR,IAAaN,GAAGM,CAAH,CAAb;AACD,OAFD;;AAIA,aAAOC,OAAP;;AAEA,eAASA,OAAT,GAAmB;AACjB,YAAIC,OAAO,IAAIC,KAAJ,CAAUC,UAAUC,MAApB,CAAX;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAAKG,MAAzB,EAAiCC,GAAjC,EAAsC;AACpCJ,eAAKI,CAAL,IAAUF,UAAUE,CAAV,CAAV;AACD;AACD,YAAIC,MAAMb,GAAGc,KAAH,CAAS,IAAT,EAAeN,IAAf,CAAV;AACA,YAAIP,KAAKO,KAAKA,KAAKG,MAAL,GAAY,CAAjB,CAAT;AACA,YAAI,OAAOE,GAAP,KAAe,UAAf,IAA6BA,QAAQZ,EAAzC,EAA6C;AAC3CE,iBAAOC,IAAP,CAAYH,EAAZ,EAAgBI,OAAhB,CAAwB,UAAUC,CAAV,EAAa;AACnCO,gBAAIP,CAAJ,IAASL,GAAGK,CAAH,CAAT;AACD,WAFD;AAGD;AACD,eAAOO,GAAP;AACD;AACF","file":"wrappy.js","sourcesContent":["// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"]}