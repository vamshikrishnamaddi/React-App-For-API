{"version":3,"sources":["DropTarget.js"],"names":["invariant","isPlainObject","registerTarget","isValidType","TargetConnector","DropTargetMonitorImpl","checkDecoratorArguments","decorateHandler","createTargetFactory","DropTarget","type","spec","collect","options","getType","createTarget","decorateTarget","DecoratedComponent","containerDisplayName","createHandler","registerHandler","createMonitor","manager","createConnector","backend"],"mappings":";;;;AAAA,iBAASA,SAAT,QAA0B,sBAA1B;AACA,iBAASC,aAAT,QAA8B,mBAA9B;AACA,iBAASC,cAAT,QAA+B,wBAA/B;AACA,iBAASC,WAAT,QAA4B,sBAA5B;AACA,iBAASC,eAAT,QAAgC,2BAAhC;AACA,iBAASC,qBAAT,QAAsC,iCAAtC;AACA,iBAASC,uBAAT,QAAwC,SAAxC;AACA,iBAASC,eAAT,QAAgC,mBAAhC;AACA,iBAASC,mBAAT,QAAoC,uBAApC;AACA,eAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAU,EAAnD,EAAuD;AAC1DP,oCAAwB,YAAxB,EAAsC,gCAAtC,EAAwEI,IAAxE,EAA8EC,IAA9E,EAAoFC,OAApF,EAA6FC,OAA7F;AACA,gBAAIC,UAAUJ,IAAd;AACA,gBAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC5BV,0BAAUG,YAAYO,IAAZ,EAAkB,IAAlB,CAAV,EAAmC,wEAC/B,yEAD+B,GAE/B,2CAF+B,GAG/B,sEAHJ,EAG4EA,IAH5E;AAIAI,0BAAU,MAAMJ,IAAhB;AACH;AACDV,sBAAUC,cAAcU,IAAd,CAAV,EAA+B,yEAC3B,wCAD2B,GAE3B,sEAFJ,EAE4EA,IAF5E;AAGA,kBAAMI,eAAeP,oBAAoBG,IAApB,CAArB;AACAX,sBAAU,OAAOY,OAAP,KAAmB,UAA7B,EAAyC,2EACrC,6DADqC,GAErC,wBAFqC,GAGrC,sEAHJ,EAG4EA,OAH5E;AAIAZ,sBAAUC,cAAcY,OAAd,CAAV,EAAkC,4EAC9B,iCAD8B,GAE9B,wBAF8B,GAG9B,sEAHJ,EAG4ED,OAH5E;AAIA,mBAAO,SAASI,cAAT,CAAwBC,kBAAxB,EAA4C;AAC/C,uBAAOV,gBAAgB;AACnBW,0CAAsB,YADH;AAEnBC,mCAAeJ,YAFI;AAGnBK,qCAAiBlB,cAHE;AAInBmB,mCAAgBC,OAAD,IAAa,IAAIjB,qBAAJ,CAA0BiB,OAA1B,CAJT;AAKnBC,qCAAkBC,OAAD,IAAa,IAAIpB,eAAJ,CAAoBoB,OAApB,CALX;AAMnBP,sCANmB;AAOnBH,2BAPmB;AAQnBF,2BARmB;AASnBC;AATmB,iBAAhB,CAAP;AAWH,aAZD;AAaH","file":"DropTarget.js","sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { registerTarget } from '../common/registration';\nimport { isValidType } from '../utils/isValidType';\nimport { TargetConnector } from '../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../common/DropTargetMonitorImpl';\nimport { checkDecoratorArguments } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createTargetFactory } from './createTargetFactory';\nexport function DropTarget(type, spec, collect, options = {}) {\n    checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n    let getType = type;\n    if (typeof type !== 'function') {\n        invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' +\n            'a string, an array of strings, or a function that returns either given ' +\n            'the current props. Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n        getType = () => type;\n    }\n    invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n    const createTarget = createTargetFactory(spec);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    return function decorateTarget(DecoratedComponent) {\n        return decorateHandler({\n            containerDisplayName: 'DropTarget',\n            createHandler: createTarget,\n            registerHandler: registerTarget,\n            createMonitor: (manager) => new DropTargetMonitorImpl(manager),\n            createConnector: (backend) => new TargetConnector(backend),\n            DecoratedComponent,\n            getType,\n            collect,\n            options,\n        });\n    };\n}\n"]}