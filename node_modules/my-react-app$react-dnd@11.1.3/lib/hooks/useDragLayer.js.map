{"version":3,"sources":["useDragLayer.js"],"names":["useEffect","useDragDropManager","useCollector","useDragLayer","collect","dragDropManager","monitor","getMonitor","collected","updateCollected","subscribeToOffsetChange","subscribeToStateChange"],"mappings":";;;;AAAA,iBAASA,SAAT,QAA0B,OAA1B;AACA,iBAASC,kBAAT,QAAmC,sBAAnC;AACA,iBAASC,YAAT,QAA6B,yBAA7B;AACA;;;;AAIA,eAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAClC,kBAAMC,kBAAkBJ,oBAAxB;AACA,kBAAMK,UAAUD,gBAAgBE,UAAhB,EAAhB;AACA,kBAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BP,aAAaI,OAAb,EAAsBF,OAAtB,CAArC;AACAJ,sBAAU,MAAMM,QAAQI,uBAAR,CAAgCD,eAAhC,CAAhB;AACAT,sBAAU,MAAMM,QAAQK,sBAAR,CAA+BF,eAA/B,CAAhB;AACA,mBAAOD,SAAP;AACH","file":"useDragLayer.js","sourcesContent":["import { useEffect } from 'react';\nimport { useDragDropManager } from './useDragDropManager';\nimport { useCollector } from './internal/useCollector';\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer(collect) {\n    const dragDropManager = useDragDropManager();\n    const monitor = dragDropManager.getMonitor();\n    const [collected, updateCollected] = useCollector(monitor, collect);\n    useEffect(() => monitor.subscribeToOffsetChange(updateCollected));\n    useEffect(() => monitor.subscribeToStateChange(updateCollected));\n    return collected;\n}\n"]}