{"version":3,"sources":["useDrop.js"],"names":["useRef","useMemo","invariant","useMonitorOutput","useIsomorphicLayoutEffect","useDropHandler","useDropTargetMonitor","useDrop","spec","specRef","current","accept","monitor","connector","result","collect","reconnect","connectDropTarget","hooks","dropTarget","dropTargetOptions","options"],"mappings":";;;;AAAA,iBAASA,MAAT,EAAiBC,OAAjB,QAAgC,OAAhC;AACA,iBAASC,SAAT,QAA0B,sBAA1B;AACA,iBAASC,gBAAT,QAAiC,6BAAjC;AACA,iBAASC,yBAAT,QAA0C,sCAA1C;AACA,iBAASC,cAAT,EAAyBC,oBAAzB,QAAqD,iBAArD;AACA;;;;AAIA,eAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,kBAAMC,UAAUT,OAAOQ,IAAP,CAAhB;AACAC,oBAAQC,OAAR,GAAkBF,IAAlB;AACAN,sBAAUM,KAAKG,MAAL,IAAe,IAAzB,EAA+B,wBAA/B;AACA,kBAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBP,sBAA7B;AACAD,2BAAeI,OAAf,EAAwBG,OAAxB,EAAiCC,SAAjC;AACA,kBAAMC,SAASX,iBAAiBS,OAAjB,EAA0BH,QAAQC,OAAR,CAAgBK,OAAhB,KAA4B,OAAO,EAAP,CAA5B,CAA1B,EAAmE,MAAMF,UAAUG,SAAV,EAAzE,CAAf;AACA,kBAAMC,oBAAoBhB,QAAQ,MAAMY,UAAUK,KAAV,CAAgBC,UAAhB,EAAd,EAA4C,CAClEN,SADkE,CAA5C,CAA1B;AAGAT,sCAA0B,MAAM;AAC5BS,0BAAUO,iBAAV,GAA8BZ,KAAKa,OAAL,IAAgB,IAA9C;AACAR,0BAAUG,SAAV;AACH,aAHD,EAGG,CAACR,KAAKa,OAAN,CAHH;AAIA,mBAAO,CAACP,MAAD,EAASG,iBAAT,CAAP;AACH","file":"useDrop.js","sourcesContent":["import { useRef, useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useIsomorphicLayoutEffect } from './internal/useIsomorphicLayoutEffect';\nimport { useDropHandler, useDropTargetMonitor } from './internal/drop';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification\n */\nexport function useDrop(spec) {\n    const specRef = useRef(spec);\n    specRef.current = spec;\n    invariant(spec.accept != null, 'accept must be defined');\n    const [monitor, connector] = useDropTargetMonitor();\n    useDropHandler(specRef, monitor, connector);\n    const result = useMonitorOutput(monitor, specRef.current.collect || (() => ({})), () => connector.reconnect());\n    const connectDropTarget = useMemo(() => connector.hooks.dropTarget(), [\n        connector,\n    ]);\n    useIsomorphicLayoutEffect(() => {\n        connector.dropTargetOptions = spec.options || null;\n        connector.reconnect();\n    }, [spec.options]);\n    return [result, connectDropTarget];\n}\n"]}