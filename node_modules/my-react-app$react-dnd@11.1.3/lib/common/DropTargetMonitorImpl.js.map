{"version":3,"sources":["DropTargetMonitorImpl.js"],"names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","constructor","manager","targetId","internalMonitor","getMonitor","receiveHandlerId","getHandlerId","subscribeToStateChange","listener","options","canDrop","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"mappings":";;;;AAAA,iBAASA,SAAT,QAA0B,sBAA1B;AACA,YAAIC,mBAAmB,KAAvB;AACA,eAAO,MAAMC,qBAAN,CAA4B;AAC/BC,wBAAYC,OAAZ,EAAqB;AACjB,qBAAKC,QAAL,GAAgB,IAAhB;AACA,qBAAKC,eAAL,GAAuBF,QAAQG,UAAR,EAAvB;AACH;AACDC,6BAAiBH,QAAjB,EAA2B;AACvB,qBAAKA,QAAL,GAAgBA,QAAhB;AACH;AACDI,2BAAe;AACX,uBAAO,KAAKJ,QAAZ;AACH;AACDK,mCAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;AACtC,uBAAO,KAAKN,eAAL,CAAqBI,sBAArB,CAA4CC,QAA5C,EAAsDC,OAAtD,CAAP;AACH;AACDC,sBAAU;AACN;AACA;AACA;AACA,oBAAI,CAAC,KAAKR,QAAV,EAAoB;AAChB,2BAAO,KAAP;AACH;AACDL,0BAAU,CAACC,gBAAX,EAA6B,8EACzB,8EADJ;AAEA,oBAAI;AACAA,uCAAmB,IAAnB;AACA,2BAAO,KAAKK,eAAL,CAAqBQ,eAArB,CAAqC,KAAKT,QAA1C,CAAP;AACH,iBAHD,SAIQ;AACJJ,uCAAmB,KAAnB;AACH;AACJ;AACDc,mBAAOH,OAAP,EAAgB;AACZ,oBAAI,CAAC,KAAKP,QAAV,EAAoB;AAChB,2BAAO,KAAP;AACH;AACD,uBAAO,KAAKC,eAAL,CAAqBU,YAArB,CAAkC,KAAKX,QAAvC,EAAiDO,OAAjD,CAAP;AACH;AACDK,0BAAc;AACV,uBAAO,KAAKX,eAAL,CAAqBW,WAArB,EAAP;AACH;AACDC,sBAAU;AACN,uBAAO,KAAKZ,eAAL,CAAqBY,OAArB,EAAP;AACH;AACDC,4BAAgB;AACZ,uBAAO,KAAKb,eAAL,CAAqBa,aAArB,EAAP;AACH;AACDC,sBAAU;AACN,uBAAO,KAAKd,eAAL,CAAqBc,OAArB,EAAP;AACH;AACDC,qCAAyB;AACrB,uBAAO,KAAKf,eAAL,CAAqBe,sBAArB,EAAP;AACH;AACDC,2CAA+B;AAC3B,uBAAO,KAAKhB,eAAL,CAAqBgB,4BAArB,EAAP;AACH;AACDC,oCAAwB;AACpB,uBAAO,KAAKjB,eAAL,CAAqBiB,qBAArB,EAAP;AACH;AACDC,8BAAkB;AACd,uBAAO,KAAKlB,eAAL,CAAqBkB,eAArB,EAAP;AACH;AACDC,6CAAiC;AAC7B,uBAAO,KAAKnB,eAAL,CAAqBmB,8BAArB,EAAP;AACH;AA/D8B","file":"DropTargetMonitorImpl.js","sourcesContent":["import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    constructor(manager) {\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        }\n        finally {\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n}\n"]}