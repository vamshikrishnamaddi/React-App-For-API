{"version":3,"sources":["DropTarget.js"],"names":["invariant","isPlainObject","registerTarget","isValidType","TargetConnector","DropTargetMonitorImpl","checkDecoratorArguments","decorateHandler","createTargetFactory","DropTarget","type","spec","collect","options","arguments","length","undefined","getType","createTarget","decorateTarget","DecoratedComponent","containerDisplayName","createHandler","registerHandler","createMonitor","manager","createConnector","backend"],"mappings":";;;;AAAA,aAASA,SAAT,QAA0B,sBAA1B;AACA,aAASC,aAAT,QAA8B,mBAA9B;AACA,aAASC,cAAT,QAA+B,wBAA/B;AACA,aAASC,WAAT,QAA4B,sBAA5B;AACA,aAASC,eAAT,QAAgC,2BAAhC;AACA,aAASC,qBAAT,QAAsC,iCAAtC;AACA,aAASC,uBAAT,QAAwC,SAAxC;AACA,aAASC,eAAT,QAAgC,mBAAhC;AACA,aAASC,mBAAT,QAAoC,uBAApC;AACA,WAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AAC9C,UAAIC,UAAUC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAAlF;AACAR,8BAAwB,YAAxB,EAAsC,gCAAtC,EAAwEI,IAAxE,EAA8EC,IAA9E,EAAoFC,OAApF,EAA6FC,OAA7F;AACA,UAAII,UAAUP,IAAd;;AAEA,UAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9BV,kBAAUG,YAAYO,IAAZ,EAAkB,IAAlB,CAAV,EAAmC,wEAAwE,yEAAxE,GAAoJ,2CAApJ,GAAkM,sEAArO,EAA6SA,IAA7S;;AAEAO,kBAAU,SAASA,OAAT,GAAmB;AAC3B,iBAAOP,IAAP;AACD,SAFD;AAGD;;AAEDV,gBAAUC,cAAcU,IAAd,CAAV,EAA+B,yEAAyE,wCAAzE,GAAoH,sEAAnJ,EAA2NA,IAA3N;AACA,UAAIO,eAAeV,oBAAoBG,IAApB,CAAnB;AACAX,gBAAU,OAAOY,OAAP,KAAmB,UAA7B,EAAyC,2EAA2E,6DAA3E,GAA2I,wBAA3I,GAAsK,sEAA/M,EAAuRA,OAAvR;AACAZ,gBAAUC,cAAcY,OAAd,CAAV,EAAkC,4EAA4E,iCAA5E,GAAgH,wBAAhH,GAA2I,sEAA7K,EAAqPD,OAArP;AACA,aAAO,SAASO,cAAT,CAAwBC,kBAAxB,EAA4C;AACjD,eAAOb,gBAAgB;AACrBc,gCAAsB,YADD;AAErBC,yBAAeJ,YAFM;AAGrBK,2BAAiBrB,cAHI;AAIrBsB,yBAAe,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC7C,mBAAO,IAAIpB,qBAAJ,CAA0BoB,OAA1B,CAAP;AACD,WANoB;AAOrBC,2BAAiB,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACjD,mBAAO,IAAIvB,eAAJ,CAAoBuB,OAApB,CAAP;AACD,WAToB;AAUrBP,8BAAoBA,kBAVC;AAWrBH,mBAASA,OAXY;AAYrBL,mBAASA,OAZY;AAarBC,mBAASA;AAbY,SAAhB,CAAP;AAeD,OAhBD;AAiBD","file":"DropTarget.js","sourcesContent":["import { invariant } from '@react-dnd/invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { registerTarget } from '../common/registration';\nimport { isValidType } from '../utils/isValidType';\nimport { TargetConnector } from '../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../common/DropTargetMonitorImpl';\nimport { checkDecoratorArguments } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createTargetFactory } from './createTargetFactory';\nexport function DropTarget(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' + 'a string, an array of strings, or a function that returns either given ' + 'the current props. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n  var createTarget = createTargetFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n  return function decorateTarget(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DropTarget',\n      createHandler: createTarget,\n      registerHandler: registerTarget,\n      createMonitor: function createMonitor(manager) {\n        return new DropTargetMonitorImpl(manager);\n      },\n      createConnector: function createConnector(backend) {\n        return new TargetConnector(backend);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}"]}