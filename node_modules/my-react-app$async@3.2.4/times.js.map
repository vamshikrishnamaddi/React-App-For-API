{"version":3,"sources":["times.js"],"names":["Object","defineProperty","exports","value","default","times","_timesLimit","require","_timesLimit2","_interopRequireDefault","obj","__esModule","n","iteratee","callback","Infinity","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;AAGAD,YAAQE,OAAR,GAAkBC,KAAlB;;AAEA,QAAIC,cAAcC,QAAQ,cAAR,CAAlB;;AAEA,QAAIC,eAAeC,uBAAuBH,WAAvB,CAAnB;;AAEA,aAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEN,SAASM,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,aAASL,KAAT,CAAeO,CAAf,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsC;AACpC,aAAO,CAAC,GAAGN,aAAaJ,OAAjB,EAA0BQ,CAA1B,EAA6BG,QAA7B,EAAuCF,QAAvC,EAAiDC,QAAjD,CAAP;AACD;AACDE,WAAOd,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"times.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = times;\n\nvar _timesLimit = require('./timesLimit.js');\n\nvar _timesLimit2 = _interopRequireDefault(_timesLimit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times(n, iteratee, callback) {\n  return (0, _timesLimit2.default)(n, Infinity, iteratee, callback);\n}\nmodule.exports = exports['default'];"]}