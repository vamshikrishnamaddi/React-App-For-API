{"version":3,"sources":["timesLimit.js"],"names":["Object","defineProperty","exports","value","default","timesLimit","_mapLimit","require","_mapLimit2","_interopRequireDefault","_range","_range2","_wrapAsync","_wrapAsync2","obj","__esModule","count","limit","iteratee","callback","_iteratee","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;AAGAD,YAAQE,OAAR,GAAkBC,UAAlB;;AAEA,QAAIC,YAAYC,QAAQ,YAAR,CAAhB;;AAEA,QAAIC,aAAaC,uBAAuBH,SAAvB,CAAjB;;AAEA,QAAII,SAASH,QAAQ,kBAAR,CAAb;;AAEA,QAAII,UAAUF,uBAAuBC,MAAvB,CAAd;;AAEA,QAAIE,aAAaL,QAAQ,sBAAR,CAAjB;;AAEA,QAAIM,cAAcJ,uBAAuBG,UAAvB,CAAlB;;AAEA,aAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;AAiBA,aAAST,UAAT,CAAoBW,KAApB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsD;AACpD,UAAIC,YAAY,CAAC,GAAGP,YAAYT,OAAhB,EAAyBc,QAAzB,CAAhB;AACA,aAAO,CAAC,GAAGV,WAAWJ,OAAf,EAAwB,CAAC,GAAGO,QAAQP,OAAZ,EAAqBY,KAArB,CAAxB,EAAqDC,KAArD,EAA4DG,SAA5D,EAAuED,QAAvE,CAAP;AACD;AACDE,WAAOnB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"timesLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = timesLimit;\n\nvar _mapLimit = require('./mapLimit.js');\n\nvar _mapLimit2 = _interopRequireDefault(_mapLimit);\n\nvar _range = require('./internal/range.js');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n  var _iteratee = (0, _wrapAsync2.default)(iteratee);\n  return (0, _mapLimit2.default)((0, _range2.default)(count), limit, _iteratee, callback);\n}\nmodule.exports = exports['default'];"]}