{"version":3,"sources":["flatMapSeries.js"],"names":["Object","defineProperty","exports","value","_concatLimit","require","_concatLimit2","_interopRequireDefault","_awaitify","_awaitify2","obj","__esModule","default","concatSeries","coll","iteratee","callback","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;;AAIA,QAAIC,eAAeC,QAAQ,eAAR,CAAnB;;AAEA,QAAIC,gBAAgBC,uBAAuBH,YAAvB,CAApB;;AAEA,QAAII,YAAYH,QAAQ,qBAAR,CAAhB;;AAEA,QAAII,aAAaF,uBAAuBC,SAAvB,CAAjB;;AAEA,aAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;AAoBA,aAASG,YAAT,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgD;AAC9C,aAAO,CAAC,GAAGV,cAAcM,OAAlB,EAA2BE,IAA3B,EAAiC,CAAjC,EAAoCC,QAApC,EAA8CC,QAA9C,CAAP;AACD;AACDd,YAAQU,OAAR,GAAkB,CAAC,GAAGH,WAAWG,OAAf,EAAwBC,YAAxB,EAAsC,CAAtC,CAAlB;AACAI,WAAOf,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"flatMapSeries.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _concatLimit = require('./concatLimit.js');\n\nvar _concatLimit2 = _interopRequireDefault(_concatLimit);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n  return (0, _concatLimit2.default)(coll, 1, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(concatSeries, 3);\nmodule.exports = exports['default'];"]}