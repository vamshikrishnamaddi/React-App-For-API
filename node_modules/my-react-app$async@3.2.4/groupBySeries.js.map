{"version":3,"sources":["groupBySeries.js"],"names":["Object","defineProperty","exports","value","default","groupBySeries","_groupByLimit","require","_groupByLimit2","_interopRequireDefault","obj","__esModule","coll","iteratee","callback","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;AAGAD,YAAQE,OAAR,GAAkBC,aAAlB;;AAEA,QAAIC,gBAAgBC,QAAQ,gBAAR,CAApB;;AAEA,QAAIC,iBAAiBC,uBAAuBH,aAAvB,CAArB;;AAEA,aAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEN,SAASM,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;AAmBA,aAASL,aAAT,CAAuBO,IAAvB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiD;AAC/C,aAAO,CAAC,GAAGN,eAAeJ,OAAnB,EAA4BQ,IAA5B,EAAkC,CAAlC,EAAqCC,QAArC,EAA+CC,QAA/C,CAAP;AACD;AACDC,WAAOb,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"groupBySeries.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = groupBySeries;\n\nvar _groupByLimit = require('./groupByLimit.js');\n\nvar _groupByLimit2 = _interopRequireDefault(_groupByLimit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries(coll, iteratee, callback) {\n  return (0, _groupByLimit2.default)(coll, 1, iteratee, callback);\n}\nmodule.exports = exports['default'];"]}