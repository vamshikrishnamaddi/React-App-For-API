{"version":3,"sources":["forEachLimit.js"],"names":["Object","defineProperty","exports","value","_eachOfLimit","require","_eachOfLimit2","_interopRequireDefault","_withoutIndex","_withoutIndex2","_wrapAsync","_wrapAsync2","_awaitify","_awaitify2","obj","__esModule","default","eachLimit","coll","limit","iteratee","callback","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;;AAIA,QAAIC,eAAeC,QAAQ,wBAAR,CAAnB;;AAEA,QAAIC,gBAAgBC,uBAAuBH,YAAvB,CAApB;;AAEA,QAAII,gBAAgBH,QAAQ,yBAAR,CAApB;;AAEA,QAAII,iBAAiBF,uBAAuBC,aAAvB,CAArB;;AAEA,QAAIE,aAAaL,QAAQ,sBAAR,CAAjB;;AAEA,QAAIM,cAAcJ,uBAAuBG,UAAvB,CAAlB;;AAEA,QAAIE,YAAYP,QAAQ,qBAAR,CAAhB;;AAEA,QAAIQ,aAAaN,uBAAuBK,SAAvB,CAAjB;;AAEA,aAASL,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;AAqBA,aAASG,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAClD,aAAO,CAAC,GAAGf,cAAcU,OAAlB,EAA2BG,KAA3B,EAAkCD,IAAlC,EAAwC,CAAC,GAAGT,eAAeO,OAAnB,EAA4B,CAAC,GAAGL,YAAYK,OAAhB,EAAyBI,QAAzB,CAA5B,CAAxC,EAAyGC,QAAzG,CAAP;AACD;AACDnB,YAAQc,OAAR,GAAkB,CAAC,GAAGH,WAAWG,OAAf,EAAwBC,SAAxB,EAAmC,CAAnC,CAAlB;AACAK,WAAOpB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"forEachLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachOfLimit = require('./internal/eachOfLimit.js');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _withoutIndex = require('./internal/withoutIndex.js');\n\nvar _withoutIndex2 = _interopRequireDefault(_withoutIndex);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit(coll, limit, iteratee, callback) {\n  return (0, _eachOfLimit2.default)(limit)(coll, (0, _withoutIndex2.default)((0, _wrapAsync2.default)(iteratee)), callback);\n}\nexports.default = (0, _awaitify2.default)(eachLimit, 4);\nmodule.exports = exports['default'];"]}