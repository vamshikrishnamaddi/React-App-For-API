{"version":3,"sources":["unmemoize.js"],"names":["Object","defineProperty","exports","value","default","unmemoize","fn","args","unmemoized","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;AAGAD,gBAAQE,OAAR,GAAkBC,SAAlB;AACA;;;;;;;;;;;;;AAaA,iBAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACnB,mBAAO,CAAC,GAAGC,IAAJ,KAAa;AAChB,uBAAO,CAACD,GAAGE,UAAH,IAAiBF,EAAlB,EAAsB,GAAGC,IAAzB,CAAP;AACH,aAFD;AAGH;AACDE,eAAOP,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"unmemoize.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = unmemoize;\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\nmodule.exports = exports[\"default\"];"]}