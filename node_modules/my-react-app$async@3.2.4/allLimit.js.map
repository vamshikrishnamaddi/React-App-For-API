{"version":3,"sources":["allLimit.js"],"names":["Object","defineProperty","exports","value","_createTester","require","_createTester2","_interopRequireDefault","_eachOfLimit","_eachOfLimit2","_awaitify","_awaitify2","obj","__esModule","default","everyLimit","coll","limit","iteratee","callback","bool","res","module"],"mappings":"AAAA;;;;;;AAEAA,WAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,aAAO;AADoC,KAA7C;;AAIA,QAAIC,gBAAgBC,QAAQ,yBAAR,CAApB;;AAEA,QAAIC,iBAAiBC,uBAAuBH,aAAvB,CAArB;;AAEA,QAAII,eAAeH,QAAQ,wBAAR,CAAnB;;AAEA,QAAII,gBAAgBF,uBAAuBC,YAAvB,CAApB;;AAEA,QAAIE,YAAYL,QAAQ,qBAAR,CAAhB;;AAEA,QAAIM,aAAaJ,uBAAuBG,SAAvB,CAAjB;;AAEA,aAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,aAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;AAqBA,aAASG,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqD;AACnD,aAAO,CAAC,GAAGb,eAAeQ,OAAnB,EAA4BM,QAAQ,CAACA,IAArC,EAA2CC,OAAO,CAACA,GAAnD,EAAwD,CAAC,GAAGZ,cAAcK,OAAlB,EAA2BG,KAA3B,CAAxD,EAA2FD,IAA3F,EAAiGE,QAAjG,EAA2GC,QAA3G,CAAP;AACD;AACDjB,YAAQY,OAAR,GAAkB,CAAC,GAAGH,WAAWG,OAAf,EAAwBC,UAAxB,EAAoC,CAApC,CAAlB;AACAO,WAAOpB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"allLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createTester = require('./internal/createTester.js');\n\nvar _createTester2 = _interopRequireDefault(_createTester);\n\nvar _eachOfLimit = require('./internal/eachOfLimit.js');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n  return (0, _createTester2.default)(bool => !bool, res => !res)((0, _eachOfLimit2.default)(limit), coll, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(everyLimit, 4);\nmodule.exports = exports['default'];"]}