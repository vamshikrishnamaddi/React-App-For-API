{"version":3,"sources":["forever.js"],"names":["Object","defineProperty","exports","value","_onlyOnce","require","_onlyOnce2","_interopRequireDefault","_ensureAsync","_ensureAsync2","_wrapAsync","_wrapAsync2","_awaitify","_awaitify2","obj","__esModule","default","forever","fn","errback","done","task","next","err","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;;AAIA,YAAIC,YAAYC,QAAQ,qBAAR,CAAhB;;AAEA,YAAIC,aAAaC,uBAAuBH,SAAvB,CAAjB;;AAEA,YAAII,eAAeH,QAAQ,eAAR,CAAnB;;AAEA,YAAII,gBAAgBF,uBAAuBC,YAAvB,CAApB;;AAEA,YAAIE,aAAaL,QAAQ,sBAAR,CAAjB;;AAEA,YAAIM,cAAcJ,uBAAuBG,UAAvB,CAAlB;;AAEA,YAAIE,YAAYP,QAAQ,qBAAR,CAAhB;;AAEA,YAAIQ,aAAaN,uBAAuBK,SAAvB,CAAjB;;AAEA,iBAASL,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,mBAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,iBAASG,OAAT,CAAiBC,EAAjB,EAAqBC,OAArB,EAA8B;AAC1B,gBAAIC,OAAO,CAAC,GAAGd,WAAWU,OAAf,EAAwBG,OAAxB,CAAX;AACA,gBAAIE,OAAO,CAAC,GAAGV,YAAYK,OAAhB,EAAyB,CAAC,GAAGP,cAAcO,OAAlB,EAA2BE,EAA3B,CAAzB,CAAX;;AAEA,qBAASI,IAAT,CAAcC,GAAd,EAAmB;AACf,oBAAIA,GAAJ,EAAS,OAAOH,KAAKG,GAAL,CAAP;AACT,oBAAIA,QAAQ,KAAZ,EAAmB;AACnBF,qBAAKC,IAAL;AACH;AACD,mBAAOA,MAAP;AACH;AACDpB,gBAAQc,OAAR,GAAkB,CAAC,GAAGH,WAAWG,OAAf,EAAwBC,OAAxB,EAAiC,CAAjC,CAAlB;AACAO,eAAOtB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"forever.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _onlyOnce = require('./internal/onlyOnce.js');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _ensureAsync = require('./ensureAsync.js');\n\nvar _ensureAsync2 = _interopRequireDefault(_ensureAsync);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = (0, _onlyOnce2.default)(errback);\n    var task = (0, _wrapAsync2.default)((0, _ensureAsync2.default)(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nexports.default = (0, _awaitify2.default)(forever, 2);\nmodule.exports = exports['default'];"]}