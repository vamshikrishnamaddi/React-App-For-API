{"version":3,"sources":["memoize.js"],"names":["Object","defineProperty","exports","value","default","memoize","_setImmediate","require","_setImmediate2","_interopRequireDefault","_initialParams","_initialParams2","_wrapAsync","_wrapAsync2","obj","__esModule","fn","hasher","v","memo","create","queues","_fn","memoized","args","callback","key","push","err","resultArgs","q","i","l","length","unmemoized","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;AAGAD,gBAAQE,OAAR,GAAkBC,OAAlB;;AAEA,YAAIC,gBAAgBC,QAAQ,yBAAR,CAApB;;AAEA,YAAIC,iBAAiBC,uBAAuBH,aAAvB,CAArB;;AAEA,YAAII,iBAAiBH,QAAQ,0BAAR,CAArB;;AAEA,YAAII,kBAAkBF,uBAAuBC,cAAvB,CAAtB;;AAEA,YAAIE,aAAaL,QAAQ,sBAAR,CAAjB;;AAEA,YAAIM,cAAcJ,uBAAuBG,UAAvB,CAAlB;;AAEA,iBAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,mBAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,iBAAST,OAAT,CAAiBW,EAAjB,EAAqBC,SAASC,KAAKA,CAAnC,EAAsC;AAClC,gBAAIC,OAAOnB,OAAOoB,MAAP,CAAc,IAAd,CAAX;AACA,gBAAIC,SAASrB,OAAOoB,MAAP,CAAc,IAAd,CAAb;AACA,gBAAIE,MAAM,CAAC,GAAGT,YAAYT,OAAhB,EAAyBY,EAAzB,CAAV;AACA,gBAAIO,WAAW,CAAC,GAAGZ,gBAAgBP,OAApB,EAA6B,CAACoB,IAAD,EAAOC,QAAP,KAAoB;AAC5D,oBAAIC,MAAMT,OAAO,GAAGO,IAAV,CAAV;AACA,oBAAIE,OAAOP,IAAX,EAAiB;AACb,qBAAC,GAAGX,eAAeJ,OAAnB,EAA4B,MAAMqB,SAAS,IAAT,EAAe,GAAGN,KAAKO,GAAL,CAAlB,CAAlC;AACH,iBAFD,MAEO,IAAIA,OAAOL,MAAX,EAAmB;AACtBA,2BAAOK,GAAP,EAAYC,IAAZ,CAAiBF,QAAjB;AACH,iBAFM,MAEA;AACHJ,2BAAOK,GAAP,IAAc,CAACD,QAAD,CAAd;AACAH,wBAAI,GAAGE,IAAP,EAAa,CAACI,GAAD,EAAM,GAAGC,UAAT,KAAwB;AACjC;AACA,4BAAI,CAACD,GAAL,EAAU;AACNT,iCAAKO,GAAL,IAAYG,UAAZ;AACH;AACD,4BAAIC,IAAIT,OAAOK,GAAP,CAAR;AACA,+BAAOL,OAAOK,GAAP,CAAP;AACA,6BAAK,IAAIK,IAAI,CAAR,EAAWC,IAAIF,EAAEG,MAAtB,EAA8BF,IAAIC,CAAlC,EAAqCD,GAArC,EAA0C;AACtCD,8BAAEC,CAAF,EAAKH,GAAL,EAAU,GAAGC,UAAb;AACH;AACJ,qBAVD;AAWH;AACJ,aApBc,CAAf;AAqBAN,qBAASJ,IAAT,GAAgBA,IAAhB;AACAI,qBAASW,UAAT,GAAsBlB,EAAtB;AACA,mBAAOO,QAAP;AACH;AACDY,eAAOjC,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"memoize.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = memoize;\n\nvar _setImmediate = require('./internal/setImmediate.js');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _initialParams = require('./internal/initialParams.js');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = (0, _wrapAsync2.default)(fn);\n    var memoized = (0, _initialParams2.default)((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            (0, _setImmediate2.default)(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\nmodule.exports = exports['default'];"]}