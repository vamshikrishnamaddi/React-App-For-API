{"version":3,"sources":["constant.js"],"names":["Object","defineProperty","exports","value","default","args","ignoredArgs","callback","pop","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;;AAIAD,gBAAQE,OAAR,GAAkB,UAAU,GAAGC,IAAb,EAAmB;AACjC,mBAAO,UAAU,GAAGC,WAAb,CAAyB,cAAzB,EAAyC;AAC5C,oBAAIC,WAAWD,YAAYE,GAAZ,EAAf;AACA,uBAAOD,SAAS,IAAT,EAAe,GAAGF,IAAlB,CAAP;AACH,aAHD;AAIH,SALD;;AAOAI,eAAOP,OAAP,GAAiBA,QAAQ,SAAR,CAAjB,C,CAAqC","file":"constant.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (...args) {\n    return function (...ignoredArgs /*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n};\n\nmodule.exports = exports[\"default\"]; /**\n                                      * Returns a function that when called, calls-back with the values provided.\n                                      * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n                                      * [`auto`]{@link module:ControlFlow.auto}.\n                                      *\n                                      * @name constant\n                                      * @static\n                                      * @memberOf module:Utils\n                                      * @method\n                                      * @category Util\n                                      * @param {...*} arguments... - Any number of arguments to automatically invoke\n                                      * callback with.\n                                      * @returns {AsyncFunction} Returns a function that when invoked, automatically\n                                      * invokes the callback with the previous given arguments.\n                                      * @example\n                                      *\n                                      * async.waterfall([\n                                      *     async.constant(42),\n                                      *     function (value, next) {\n                                      *         // value === 42\n                                      *     },\n                                      *     //...\n                                      * ], callback);\n                                      *\n                                      * async.waterfall([\n                                      *     async.constant(filename, \"utf8\"),\n                                      *     fs.readFile,\n                                      *     function (fileData, next) {\n                                      *         //...\n                                      *     }\n                                      *     //...\n                                      * ], callback);\n                                      *\n                                      * async.auto({\n                                      *     hostname: async.constant(\"https://server.net/\"),\n                                      *     port: findFreePort,\n                                      *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n                                      *         startServer(options, cb);\n                                      *     }],\n                                      *     //...\n                                      * }, callback);\n                                      */"]}