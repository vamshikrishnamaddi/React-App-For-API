{"version":3,"sources":["reflect.js"],"names":["Object","defineProperty","exports","value","default","reflect","_initialParams","require","_initialParams2","_interopRequireDefault","_wrapAsync","_wrapAsync2","obj","__esModule","fn","_fn","reflectOn","args","reflectCallback","push","error","cbArgs","retVal","length","apply","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;AAGAD,gBAAQE,OAAR,GAAkBC,OAAlB;;AAEA,YAAIC,iBAAiBC,QAAQ,0BAAR,CAArB;;AAEA,YAAIC,kBAAkBC,uBAAuBH,cAAvB,CAAtB;;AAEA,YAAII,aAAaH,QAAQ,sBAAR,CAAjB;;AAEA,YAAII,cAAcF,uBAAuBC,UAAvB,CAAlB;;AAEA,iBAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,mBAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAER,SAASQ,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,iBAASP,OAAT,CAAiBS,EAAjB,EAAqB;AACjB,gBAAIC,MAAM,CAAC,GAAGJ,YAAYP,OAAhB,EAAyBU,EAAzB,CAAV;AACA,mBAAO,CAAC,GAAGN,gBAAgBJ,OAApB,EAA6B,SAASY,SAAT,CAAmBC,IAAnB,EAAyBC,eAAzB,EAA0C;AAC1ED,qBAAKE,IAAL,CAAU,CAACC,KAAD,EAAQ,GAAGC,MAAX,KAAsB;AAC5B,wBAAIC,SAAS,EAAb;AACA,wBAAIF,KAAJ,EAAW;AACPE,+BAAOF,KAAP,GAAeA,KAAf;AACH;AACD,wBAAIC,OAAOE,MAAP,GAAgB,CAApB,EAAuB;AACnB,4BAAIpB,QAAQkB,MAAZ;AACA,4BAAIA,OAAOE,MAAP,IAAiB,CAArB,EAAwB;AACpB,6BAACpB,KAAD,IAAUkB,MAAV;AACH;AACDC,+BAAOnB,KAAP,GAAeA,KAAf;AACH;AACDe,oCAAgB,IAAhB,EAAsBI,MAAtB;AACH,iBAbD;;AAeA,uBAAOP,IAAIS,KAAJ,CAAU,IAAV,EAAgBP,IAAhB,CAAP;AACH,aAjBM,CAAP;AAkBH;AACDQ,eAAOvB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"reflect.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = reflect;\n\nvar _initialParams = require('./internal/initialParams.js');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = (0, _wrapAsync2.default)(fn);\n    return (0, _initialParams2.default)(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0) {\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\nmodule.exports = exports['default'];"]}