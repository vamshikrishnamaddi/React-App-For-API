{"version":3,"sources":["tryEach.js"],"names":["Object","defineProperty","exports","value","_eachSeries","require","_eachSeries2","_interopRequireDefault","_wrapAsync","_wrapAsync2","_awaitify","_awaitify2","obj","__esModule","default","tryEach","tasks","callback","error","result","task","taskCb","err","args","length","module"],"mappings":"AAAA;;;;;;AAEAA,eAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,mBAAO;AADkC,SAA7C;;AAIA,YAAIC,cAAcC,QAAQ,cAAR,CAAlB;;AAEA,YAAIC,eAAeC,uBAAuBH,WAAvB,CAAnB;;AAEA,YAAII,aAAaH,QAAQ,sBAAR,CAAjB;;AAEA,YAAII,cAAcF,uBAAuBC,UAAvB,CAAlB;;AAEA,YAAIE,YAAYL,QAAQ,qBAAR,CAAhB;;AAEA,YAAIM,aAAaJ,uBAAuBG,SAAvB,CAAjB;;AAEA,iBAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,mBAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,iBAASG,OAAT,CAAiBC,KAAjB,EAAwBC,QAAxB,EAAkC;AAC9B,gBAAIC,QAAQ,IAAZ;AACA,gBAAIC,MAAJ;AACA,mBAAO,CAAC,GAAGb,aAAaQ,OAAjB,EAA0BE,KAA1B,EAAiC,CAACI,IAAD,EAAOC,MAAP,KAAkB;AACtD,iBAAC,GAAGZ,YAAYK,OAAhB,EAAyBM,IAAzB,EAA+B,CAACE,GAAD,EAAM,GAAGC,IAAT,KAAkB;AAC7C,wBAAID,QAAQ,KAAZ,EAAmB,OAAOD,OAAOC,GAAP,CAAP;;AAEnB,wBAAIC,KAAKC,MAAL,GAAc,CAAlB,EAAqB;AACjB,yBAACL,MAAD,IAAWI,IAAX;AACH,qBAFD,MAEO;AACHJ,iCAASI,IAAT;AACH;AACDL,4BAAQI,GAAR;AACAD,2BAAOC,MAAM,IAAN,GAAa,EAApB;AACH,iBAVD;AAWH,aAZM,EAYJ,MAAML,SAASC,KAAT,EAAgBC,MAAhB,CAZF,CAAP;AAaH;;AAEDjB,gBAAQY,OAAR,GAAkB,CAAC,GAAGH,WAAWG,OAAf,EAAwBC,OAAxB,CAAlB;AACAU,eAAOvB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"tryEach.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _eachSeries = require('./eachSeries.js');\n\nvar _eachSeries2 = _interopRequireDefault(_eachSeries);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify.js');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return (0, _eachSeries2.default)(tasks, (task, taskCb) => {\n        (0, _wrapAsync2.default)(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nexports.default = (0, _awaitify2.default)(tryEach);\nmodule.exports = exports['default'];"]}