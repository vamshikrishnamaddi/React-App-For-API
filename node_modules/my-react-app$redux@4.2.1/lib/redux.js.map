{"version":3,"sources":["redux.js"],"names":["Object","defineProperty","exports","value","_objectSpread","require","_interopDefaultLegacy","e","_objectSpread__default","formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","getPrototypeOf","miniKindOf","val","type","Array","isArray","isDate","isError","constructorName","ctorName","slice","toLowerCase","replace","constructor","name","Error","message","stackTraceLimit","Date","toDateString","getDate","setDate","kindOf","typeOfVal","createStore","reducer","preloadedState","enhancer","_ref2","arguments","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","push","unsubscribe","index","indexOf","splice","dispatch","action","listeners","i","length","replaceReducer","nextReducer","_ref","outerSubscribe","observer","observeState","next","legacy_createStore","warning","console","error","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","unexpectedKeys","filter","key","hasOwnProperty","forEach","assertReducerShape","initialState","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","combination","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","actionType","String","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","__DO_NOT_USE__ActionTypes"],"mappings":"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","file":"redux.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _objectSpread = require('@babel/runtime/helpers/objectSpread2');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar _objectSpread__default = /*#__PURE__*/_interopDefaultLegacy(_objectSpread);\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread__default['default'](_objectSpread__default['default']({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexports.__DO_NOT_USE__ActionTypes = ActionTypes;\nexports.applyMiddleware = applyMiddleware;\nexports.bindActionCreators = bindActionCreators;\nexports.combineReducers = combineReducers;\nexports.compose = compose;\nexports.createStore = createStore;\nexports.legacy_createStore = legacy_createStore;\n"]}