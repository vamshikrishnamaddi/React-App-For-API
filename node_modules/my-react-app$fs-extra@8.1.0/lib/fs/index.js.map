{"version":3,"sources":["index.js"],"names":["u","require","fromCallback","fs","api","filter","key","Object","keys","forEach","exports","method","exists","filename","callback","Promise","resolve","read","fd","buffer","offset","length","position","reject","err","bytesRead","write","args","bytesWritten","realpath","native"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'lchmod',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// fs.realpath.native only available in Node v9.2+\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n}\n"]}