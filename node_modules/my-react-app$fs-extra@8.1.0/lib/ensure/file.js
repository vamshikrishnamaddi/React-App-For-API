'use strict';

Liferay.Loader.define('my-react-app$fs-extra@8.1.0/lib/ensure/file', ['module', 'exports', 'require', 'my-react-app$universalify', 'my-react-app$path', 'my-react-app$graceful-fs', '../mkdirs', '../path-exists'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    const u = require('my-react-app$universalify').fromCallback;
    const path = require('my-react-app$path');
    const fs = require('my-react-app$graceful-fs');
    const mkdir = require('../mkdirs');
    const pathExists = require('../path-exists').pathExists;

    function createFile(file, callback) {
      function makeFile() {
        fs.writeFile(file, '', err => {
          if (err) return callback(err);
          callback();
        });
      }

      fs.stat(file, (err, stats) => {
        // eslint-disable-line handle-callback-err
        if (!err && stats.isFile()) return callback();
        const dir = path.dirname(file);
        pathExists(dir, (err, dirExists) => {
          if (err) return callback(err);
          if (dirExists) return makeFile();
          mkdir.mkdirs(dir, err => {
            if (err) return callback(err);
            makeFile();
          });
        });
      });
    }

    function createFileSync(file) {
      let stats;
      try {
        stats = fs.statSync(file);
      } catch (e) {}
      if (stats && stats.isFile()) return;

      const dir = path.dirname(file);
      if (!fs.existsSync(dir)) {
        mkdir.mkdirsSync(dir);
      }

      fs.writeFileSync(file, '');
    }

    module.exports = {
      createFile: u(createFile),
      createFileSync
    };
  }
});
//# sourceMappingURL=file.js.map