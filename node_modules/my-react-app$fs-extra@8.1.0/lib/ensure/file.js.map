{"version":3,"sources":["file.js"],"names":["u","require","fromCallback","path","fs","mkdir","pathExists","createFile","file","callback","makeFile","writeFile","err","stat","stats","isFile","dir","dirname","dirExists","mkdirs","createFileSync","statSync","e","existsSync","mkdirsSync","writeFileSync","module","exports"],"mappings":"AAAA;;;;;;AAEA,UAAMA,IAAIC,QAAQ,2BAAR,EAAwBC,YAAlC;AACA,UAAMC,OAAOF,QAAQ,mBAAR,CAAb;AACA,UAAMG,KAAKH,QAAQ,0BAAR,CAAX;AACA,UAAMI,QAAQJ,QAAQ,WAAR,CAAd;AACA,UAAMK,aAAaL,QAAQ,gBAAR,EAA0BK,UAA7C;;AAEA,aAASC,UAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AACnC,eAASC,QAAT,GAAqB;AACnBN,WAAGO,SAAH,CAAaH,IAAb,EAAmB,EAAnB,EAAuBI,OAAO;AAC5B,cAAIA,GAAJ,EAAS,OAAOH,SAASG,GAAT,CAAP;AACTH;AACD,SAHD;AAID;;AAEDL,SAAGS,IAAH,CAAQL,IAAR,EAAc,CAACI,GAAD,EAAME,KAAN,KAAgB;AAAE;AAC9B,YAAI,CAACF,GAAD,IAAQE,MAAMC,MAAN,EAAZ,EAA4B,OAAON,UAAP;AAC5B,cAAMO,MAAMb,KAAKc,OAAL,CAAaT,IAAb,CAAZ;AACAF,mBAAWU,GAAX,EAAgB,CAACJ,GAAD,EAAMM,SAAN,KAAoB;AAClC,cAAIN,GAAJ,EAAS,OAAOH,SAASG,GAAT,CAAP;AACT,cAAIM,SAAJ,EAAe,OAAOR,UAAP;AACfL,gBAAMc,MAAN,CAAaH,GAAb,EAAkBJ,OAAO;AACvB,gBAAIA,GAAJ,EAAS,OAAOH,SAASG,GAAT,CAAP;AACTF;AACD,WAHD;AAID,SAPD;AAQD,OAXD;AAYD;;AAED,aAASU,cAAT,CAAyBZ,IAAzB,EAA+B;AAC7B,UAAIM,KAAJ;AACA,UAAI;AACFA,gBAAQV,GAAGiB,QAAH,CAAYb,IAAZ,CAAR;AACD,OAFD,CAEE,OAAOc,CAAP,EAAU,CAAE;AACd,UAAIR,SAASA,MAAMC,MAAN,EAAb,EAA6B;;AAE7B,YAAMC,MAAMb,KAAKc,OAAL,CAAaT,IAAb,CAAZ;AACA,UAAI,CAACJ,GAAGmB,UAAH,CAAcP,GAAd,CAAL,EAAyB;AACvBX,cAAMmB,UAAN,CAAiBR,GAAjB;AACD;;AAEDZ,SAAGqB,aAAH,CAAiBjB,IAAjB,EAAuB,EAAvB;AACD;;AAEDkB,WAAOC,OAAP,GAAiB;AACfpB,kBAAYP,EAAEO,UAAF,CADG;AAEfa;AAFe,KAAjB","file":"file.js","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err)\n      if (dirExists) return makeFile()\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err)\n        makeFile()\n      })\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch (e) {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir)\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n"]}