{"version":3,"sources":["symlink.js"],"names":["u","require","fromCallback","path","fs","_mkdirs","mkdirs","mkdirsSync","_symlinkPaths","symlinkPaths","symlinkPathsSync","_symlinkType","symlinkType","symlinkTypeSync","pathExists","createSymlink","srcpath","dstpath","type","callback","err","destinationExists","relative","toDst","toCwd","dir","dirname","dirExists","symlink","createSymlinkSync","existsSync","undefined","exists","symlinkSync","module","exports"],"mappings":"AAAA;;;;;;AAEA,UAAMA,IAAIC,QAAQ,2BAAR,EAAwBC,YAAlC;AACA,UAAMC,OAAOF,QAAQ,mBAAR,CAAb;AACA,UAAMG,KAAKH,QAAQ,0BAAR,CAAX;AACA,UAAMI,UAAUJ,QAAQ,WAAR,CAAhB;AACA,UAAMK,SAASD,QAAQC,MAAvB;AACA,UAAMC,aAAaF,QAAQE,UAA3B;;AAEA,UAAMC,gBAAgBP,QAAQ,iBAAR,CAAtB;AACA,UAAMQ,eAAeD,cAAcC,YAAnC;AACA,UAAMC,mBAAmBF,cAAcE,gBAAvC;;AAEA,UAAMC,eAAeV,QAAQ,gBAAR,CAArB;AACA,UAAMW,cAAcD,aAAaC,WAAjC;AACA,UAAMC,kBAAkBF,aAAaE,eAArC;;AAEA,UAAMC,aAAab,QAAQ,gBAAR,EAA0Ba,UAA7C;;AAEA,aAASC,aAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,QAAhD,EAA0D;AACxDA,iBAAY,OAAOD,IAAP,KAAgB,UAAjB,GAA+BA,IAA/B,GAAsCC,QAAjD;AACAD,aAAQ,OAAOA,IAAP,KAAgB,UAAjB,GAA+B,KAA/B,GAAuCA,IAA9C;;AAEAJ,iBAAWG,OAAX,EAAoB,CAACG,GAAD,EAAMC,iBAAN,KAA4B;AAC9C,YAAID,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACT,YAAIC,iBAAJ,EAAuB,OAAOF,SAAS,IAAT,CAAP;AACvBV,qBAAaO,OAAb,EAAsBC,OAAtB,EAA+B,CAACG,GAAD,EAAME,QAAN,KAAmB;AAChD,cAAIF,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACTJ,oBAAUM,SAASC,KAAnB;AACAX,sBAAYU,SAASE,KAArB,EAA4BN,IAA5B,EAAkC,CAACE,GAAD,EAAMF,IAAN,KAAe;AAC/C,gBAAIE,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACT,kBAAMK,MAAMtB,KAAKuB,OAAL,CAAaT,OAAb,CAAZ;AACAH,uBAAWW,GAAX,EAAgB,CAACL,GAAD,EAAMO,SAAN,KAAoB;AAClC,kBAAIP,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACT,kBAAIO,SAAJ,EAAe,OAAOvB,GAAGwB,OAAH,CAAWZ,OAAX,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,QAAnC,CAAP;AACfb,qBAAOmB,GAAP,EAAYL,OAAO;AACjB,oBAAIA,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACThB,mBAAGwB,OAAH,CAAWZ,OAAX,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,QAAnC;AACD,eAHD;AAID,aAPD;AAQD,WAXD;AAYD,SAfD;AAgBD,OAnBD;AAoBD;;AAED,aAASU,iBAAT,CAA4Bb,OAA5B,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AAClD,YAAMG,oBAAoBjB,GAAG0B,UAAH,CAAcb,OAAd,CAA1B;AACA,UAAII,iBAAJ,EAAuB,OAAOU,SAAP;;AAEvB,YAAMT,WAAWZ,iBAAiBM,OAAjB,EAA0BC,OAA1B,CAAjB;AACAD,gBAAUM,SAASC,KAAnB;AACAL,aAAOL,gBAAgBS,SAASE,KAAzB,EAAgCN,IAAhC,CAAP;AACA,YAAMO,MAAMtB,KAAKuB,OAAL,CAAaT,OAAb,CAAZ;AACA,YAAMe,SAAS5B,GAAG0B,UAAH,CAAcL,GAAd,CAAf;AACA,UAAIO,MAAJ,EAAY,OAAO5B,GAAG6B,WAAH,CAAejB,OAAf,EAAwBC,OAAxB,EAAiCC,IAAjC,CAAP;AACZX,iBAAWkB,GAAX;AACA,aAAOrB,GAAG6B,WAAH,CAAejB,OAAf,EAAwBC,OAAxB,EAAiCC,IAAjC,CAAP;AACD;;AAEDgB,WAAOC,OAAP,GAAiB;AACfpB,qBAAef,EAAEe,aAAF,CADA;AAEfc;AAFe,KAAjB","file":"symlink.js","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n"]}