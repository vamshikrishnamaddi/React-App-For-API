{"version":3,"sources":["stat.js"],"names":["fs","require","path","NODE_VERSION_MAJOR_WITH_BIGINT","NODE_VERSION_MINOR_WITH_BIGINT","NODE_VERSION_PATCH_WITH_BIGINT","nodeVersion","process","versions","node","split","nodeVersionMajor","Number","parseInt","nodeVersionMinor","nodeVersionPatch","nodeSupportsBigInt","getStats","src","dest","cb","stat","bigint","err","srcStat","destStat","code","getStatsSync","statSync","checkPaths","funcName","stats","ino","dev","Error","isDirectory","isSrcSubdir","errMsg","checkPathsSync","checkParentPaths","srcParent","resolve","dirname","destParent","parse","root","checkParentPathsSync","srcArr","sep","filter","i","destArr","reduce","acc","cur","module","exports"],"mappings":"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","file":"stat.js","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\n\nconst NODE_VERSION_MAJOR_WITH_BIGINT = 10\nconst NODE_VERSION_MINOR_WITH_BIGINT = 5\nconst NODE_VERSION_PATCH_WITH_BIGINT = 0\nconst nodeVersion = process.versions.node.split('.')\nconst nodeVersionMajor = Number.parseInt(nodeVersion[0], 10)\nconst nodeVersionMinor = Number.parseInt(nodeVersion[1], 10)\nconst nodeVersionPatch = Number.parseInt(nodeVersion[2], 10)\n\nfunction nodeSupportsBigInt () {\n  if (nodeVersionMajor > NODE_VERSION_MAJOR_WITH_BIGINT) {\n    return true\n  } else if (nodeVersionMajor === NODE_VERSION_MAJOR_WITH_BIGINT) {\n    if (nodeVersionMinor > NODE_VERSION_MINOR_WITH_BIGINT) {\n      return true\n    } else if (nodeVersionMinor === NODE_VERSION_MINOR_WITH_BIGINT) {\n      if (nodeVersionPatch >= NODE_VERSION_PATCH_WITH_BIGINT) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction getStats (src, dest, cb) {\n  if (nodeSupportsBigInt()) {\n    fs.stat(src, { bigint: true }, (err, srcStat) => {\n      if (err) return cb(err)\n      fs.stat(dest, { bigint: true }, (err, destStat) => {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })\n          return cb(err)\n        }\n        return cb(null, { srcStat, destStat })\n      })\n    })\n  } else {\n    fs.stat(src, (err, srcStat) => {\n      if (err) return cb(err)\n      fs.stat(dest, (err, destStat) => {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })\n          return cb(err)\n        }\n        return cb(null, { srcStat, destStat })\n      })\n    })\n  }\n}\n\nfunction getStatsSync (src, dest) {\n  let srcStat, destStat\n  if (nodeSupportsBigInt()) {\n    srcStat = fs.statSync(src, { bigint: true })\n  } else {\n    srcStat = fs.statSync(src)\n  }\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(dest, { bigint: true })\n    } else {\n      destStat = fs.statSync(dest)\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  getStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  if (nodeSupportsBigInt()) {\n    fs.stat(destParent, { bigint: true }, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb()\n        return cb(err)\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)))\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb)\n    })\n  } else {\n    fs.stat(destParent, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb()\n        return cb(err)\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)))\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb)\n    })\n  }\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(destParent, { bigint: true })\n    } else {\n      destStat = fs.statSync(destParent)\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n"]}