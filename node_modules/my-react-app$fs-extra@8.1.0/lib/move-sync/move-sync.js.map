{"version":3,"sources":["move-sync.js"],"names":["fs","require","path","copySync","removeSync","mkdirpSync","stat","moveSync","src","dest","opts","overwrite","clobber","srcStat","checkPathsSync","checkParentPathsSync","dirname","doRename","rename","existsSync","Error","renameSync","err","code","moveAcrossDevice","errorOnExist","module","exports"],"mappings":"AAAA;;;;;;AAEA,UAAMA,KAAKC,QAAQ,0BAAR,CAAX;AACA,UAAMC,OAAOD,QAAQ,mBAAR,CAAb;AACA,UAAME,WAAWF,QAAQ,cAAR,EAAwBE,QAAzC;AACA,UAAMC,aAAaH,QAAQ,WAAR,EAAqBG,UAAxC;AACA,UAAMC,aAAaJ,QAAQ,WAAR,EAAqBI,UAAxC;AACA,UAAMC,OAAOL,QAAQ,cAAR,CAAb;;AAEA,aAASM,QAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAClCA,aAAOA,QAAQ,EAAf;AACA,YAAMC,YAAYD,KAAKC,SAAL,IAAkBD,KAAKE,OAAvB,IAAkC,KAApD;;AAEA,YAAM,EAAEC,OAAF,KAAcP,KAAKQ,cAAL,CAAoBN,GAApB,EAAyBC,IAAzB,EAA+B,MAA/B,CAApB;AACAH,WAAKS,oBAAL,CAA0BP,GAA1B,EAA+BK,OAA/B,EAAwCJ,IAAxC,EAA8C,MAA9C;AACAJ,iBAAWH,KAAKc,OAAL,CAAaP,IAAb,CAAX;AACA,aAAOQ,SAAST,GAAT,EAAcC,IAAd,EAAoBE,SAApB,CAAP;AACD;;AAED,aAASM,QAAT,CAAmBT,GAAnB,EAAwBC,IAAxB,EAA8BE,SAA9B,EAAyC;AACvC,UAAIA,SAAJ,EAAe;AACbP,mBAAWK,IAAX;AACA,eAAOS,OAAOV,GAAP,EAAYC,IAAZ,EAAkBE,SAAlB,CAAP;AACD;AACD,UAAIX,GAAGmB,UAAH,CAAcV,IAAd,CAAJ,EAAyB,MAAM,IAAIW,KAAJ,CAAU,sBAAV,CAAN;AACzB,aAAOF,OAAOV,GAAP,EAAYC,IAAZ,EAAkBE,SAAlB,CAAP;AACD;;AAED,aAASO,MAAT,CAAiBV,GAAjB,EAAsBC,IAAtB,EAA4BE,SAA5B,EAAuC;AACrC,UAAI;AACFX,WAAGqB,UAAH,CAAcb,GAAd,EAAmBC,IAAnB;AACD,OAFD,CAEE,OAAOa,GAAP,EAAY;AACZ,YAAIA,IAAIC,IAAJ,KAAa,OAAjB,EAA0B,MAAMD,GAAN;AAC1B,eAAOE,iBAAiBhB,GAAjB,EAAsBC,IAAtB,EAA4BE,SAA5B,CAAP;AACD;AACF;;AAED,aAASa,gBAAT,CAA2BhB,GAA3B,EAAgCC,IAAhC,EAAsCE,SAAtC,EAAiD;AAK/CR,eAASK,GAAT,EAAcC,IAAd,EAJa;AACXE,iBADW;AAEXc,sBAAc;AAFH,OAIb;AACA,aAAOrB,WAAWI,GAAX,CAAP;AACD;;AAEDkB,WAAOC,OAAP,GAAiBpB,QAAjB","file":"move-sync.js","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy-sync').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat } = stat.checkPathsSync(src, dest, 'move')\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite)\n}\n\nfunction doRename (src, dest, overwrite) {\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n"]}