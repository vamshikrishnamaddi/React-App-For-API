{"version":3,"sources":["index.js"],"names":["u","require","fromCallback","fs","path","mkdir","pathExists","outputFile","file","data","encoding","callback","dir","dirname","err","itDoes","writeFile","mkdirs","outputFileSync","args","existsSync","writeFileSync","mkdirsSync","module","exports"],"mappings":"AAAA;;;;;;AAEA,UAAMA,IAAIC,QAAQ,2BAAR,EAAwBC,YAAlC;AACA,UAAMC,KAAKF,QAAQ,0BAAR,CAAX;AACA,UAAMG,OAAOH,QAAQ,mBAAR,CAAb;AACA,UAAMI,QAAQJ,QAAQ,WAAR,CAAd;AACA,UAAMK,aAAaL,QAAQ,gBAAR,EAA0BK,UAA7C;;AAEA,aAASC,UAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqD;AACnD,UAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,mBAAWD,QAAX;AACAA,mBAAW,MAAX;AACD;;AAED,YAAME,MAAMR,KAAKS,OAAL,CAAaL,IAAb,CAAZ;AACAF,iBAAWM,GAAX,EAAgB,CAACE,GAAD,EAAMC,MAAN,KAAiB;AAC/B,YAAID,GAAJ,EAAS,OAAOH,SAASG,GAAT,CAAP;AACT,YAAIC,MAAJ,EAAY,OAAOZ,GAAGa,SAAH,CAAaR,IAAb,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,QAAnC,CAAP;;AAEZN,cAAMY,MAAN,CAAaL,GAAb,EAAkBE,OAAO;AACvB,cAAIA,GAAJ,EAAS,OAAOH,SAASG,GAAT,CAAP;;AAETX,aAAGa,SAAH,CAAaR,IAAb,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,QAAnC;AACD,SAJD;AAKD,OATD;AAUD;;AAED,aAASO,cAAT,CAAyBV,IAAzB,EAA+B,GAAGW,IAAlC,EAAwC;AACtC,YAAMP,MAAMR,KAAKS,OAAL,CAAaL,IAAb,CAAZ;AACA,UAAIL,GAAGiB,UAAH,CAAcR,GAAd,CAAJ,EAAwB;AACtB,eAAOT,GAAGkB,aAAH,CAAiBb,IAAjB,EAAuB,GAAGW,IAA1B,CAAP;AACD;AACDd,YAAMiB,UAAN,CAAiBV,GAAjB;AACAT,SAAGkB,aAAH,CAAiBb,IAAjB,EAAuB,GAAGW,IAA1B;AACD;;AAEDI,WAAOC,OAAP,GAAiB;AACfjB,kBAAYP,EAAEO,UAAF,CADG;AAEfW;AAFe,KAAjB","file":"index.js","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n"]}