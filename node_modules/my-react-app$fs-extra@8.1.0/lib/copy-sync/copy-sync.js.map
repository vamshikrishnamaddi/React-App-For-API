{"version":3,"sources":["copy-sync.js"],"names":["fs","require","path","mkdirpSync","mkdirsSync","utimesSync","utimesMillisSync","stat","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","srcStat","destStat","checkPathsSync","checkParentPathsSync","handleFilterAndCopy","destParent","dirname","existsSync","startCopy","getStats","statSync","dereference","lstatSync","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlinkSync","errorOnExist","Error","copyFileSync","chmodSync","mode","atime","mtime","copyFileFallback","BUF_LENGTH","_buff","fdr","openSync","fdw","pos","size","bytesRead","readSync","writeSync","futimesSync","closeSync","mkDirAndCopy","copyDir","mkdirSync","readdirSync","forEach","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","resolve","cwd","symlinkSync","resolvedDest","err","code","isSrcSubdir","copyLink","module","exports"],"mappings":"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","file":"copy-sync.js","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirpSync = require('../mkdirs').mkdirsSync\nconst utimesSync = require('../util/utimes.js').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest)\n    fs.chmodSync(dest, srcStat.mode)\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime)\n    }\n    return\n  }\n  return copyFileFallback(srcStat, src, dest, opts)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts) {\n  const BUF_LENGTH = 64 * 1024\n  const _buff = require('../util/buffer')(BUF_LENGTH)\n\n  const fdr = fs.openSync(src, 'r')\n  const fdw = fs.openSync(dest, 'w', srcStat.mode)\n  let pos = 0\n\n  while (pos < srcStat.size) {\n    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime)\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return fs.chmodSync(dest, srcStat.mode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n"]}