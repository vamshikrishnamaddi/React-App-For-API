/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
export declare type DisplayType = null | 'primary' | 'secondary' | 'link' | 'success' | 'warning' | 'danger' | 'info' | 'unstyled';
export interface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    /**
     * Flag to indicate if button is used within an alert component.
     */
    alert?: boolean;
    /**
     * Flag to indicate if the button should be borderless.
     */
    borderless?: boolean;
    /**
     * Renders the button as a block element.
     */
    block?: boolean;
    /**
     * Determines the button variant to use.
     */
    displayType?: DisplayType;
    /**
     * Flag to indicate if button should be monospaced.
     */
    monospaced?: boolean;
    /**
     * Flag to indicate if the button should use the outline variant.
     */
    outline?: boolean;
    /**
     * Flag to indicate if the button should be shaped like a pill.
     */
    rounded?: boolean;
    /**
     * Determines the size of a button.
     */
    size?: 'xs' | 'sm';
    /**
     * Indicates button should be a small variant.
     * @deprecated since v3.72.0 - use `size` instead.
     */
    small?: boolean;
}
declare const _default: React.ForwardRefExoticComponent<IProps & React.RefAttributes<HTMLButtonElement>> & {
    Group: ({ children, className, role, spaced, vertical, ...otherProps }: import("./Group").IButtonGroupProps) => JSX.Element;
};
export default _default;
