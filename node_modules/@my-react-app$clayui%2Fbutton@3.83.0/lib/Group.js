"use strict";

Liferay.Loader.define("@my-react-app$clayui/button@3.83.0/lib/Group", ['module', 'exports', 'require', 'my-react-app$classnames', 'my-react-app$react'], function (module, exports, require) {
  var define = undefined;
  var global = window;
  {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;

    var _classnames = _interopRequireDefault(require("my-react-app$classnames"));

    var _react = _interopRequireDefault(require("my-react-app$react"));

    var _excluded = ["children", "className", "role", "spaced", "vertical"];

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }

    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }return target;
      };return _extends.apply(this, arguments);
    }

    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];
        }
      }return target;
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];
      }return target;
    }

    var ClayButtonGroup = function ClayButtonGroup(_ref) {
      var children = _ref.children,
          className = _ref.className,
          _ref$role = _ref.role,
          role = _ref$role === void 0 ? 'group' : _ref$role,
          spaced = _ref.spaced,
          vertical = _ref.vertical,
          otherProps = _objectWithoutProperties(_ref, _excluded);

      return (/*#__PURE__*/_react.default.createElement("div", _extends({}, otherProps, {
          className: (0, _classnames.default)(className, vertical ? 'btn-group-vertical' : 'btn-group'),
          role: role
        }), spaced ? _react.default.Children.map(children, function (child, i) {
          return (/*#__PURE__*/_react.default.cloneElement( /*#__PURE__*/_react.default.createElement("div", {
              className: "btn-group-item"
            }, child), {
              key: i
            })
          );
        }) : children)
      );
    };

    var _default = ClayButtonGroup;
    exports.default = _default;
  }
});
//# sourceMappingURL=Group.js.map